=FunctionName: vdotr
=result: 1
=corr_graph vdotr
=src_tfg
=TFG_LLVM llvm.vdotr:
=TFG:
=Nodes: L0%0%1 Lfor.cond%1%0 Lfor.cond%2%1 Lfor.body%1%1 Lfor.end%1%1 E0%0%1
=Edges:
Lfor.cond%2%1 => Lfor.body%1%1
Lfor.cond%2%1 => Lfor.end%1%1
L0%0%1 => Lfor.cond%1%0
Lfor.cond%1%0 => Lfor.cond%2%1
Lfor.end%1%1 => E0%0%1
Lfor.body%1%1 => Lfor.cond%1%0
=graph done
=Node outputs: E0%0%1
=Output: src.llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: symbol.1.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.2.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : 0 : BV:32
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.3.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
C_SYMBOL3 : temp : 4 : 4 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.cond%1%0
=Lfor.cond%1%0 assume predicate_set done
=Lfor.cond%1%0 assert predicate_set done
=Node assumes and asserts: Lfor.cond%2%1
=Lfor.cond%2%1 assume predicate_set done
=Lfor.cond%2%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1
=Lfor.body%1%1 assume predicate_set done
=Lfor.body%1%1 assert predicate_set done
=Node assumes and asserts: Lfor.end%1%1
=Lfor.end%1%1 assume predicate_set done
=Lfor.end%1%1 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.llvm.vdotr.0 : memlabel-mem-symbol.1.0
=memlabel_map.1
mlvar.llvm.vdotr.1 : memlabel-mem-symbol.2.0
=memlabel_map.2
mlvar.llvm.vdotr.2 : memlabel-mem-symbol.3.0
=Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)

=Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)

=Edge: L0%0%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))

=Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)

=Edge: Lfor.end%1%1 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%dot.0 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:(  store i32 %dot.0, i32* @temp, align 4, !dbg !32*  ret i32 0, !dbg !33)

=Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lentry%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%1=>Lentry%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100003=>Lentry%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100004=>Lentry%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100005=>Lentry%1%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100006=>Lentry%1%100007
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100007=>Lentry%1%100008
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100008=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%1=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100003
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100005
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.body%1%1
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.end%1%1
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100003=>Lfor.cond%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100004=>Lfor.body%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100005=>Lfor.cond%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100006=>Lfor.end%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.body%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100003=>Lfor.body%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100004=>Lfor.body%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100005=>Lfor.body%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%1=>Lfor.body%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100003=>Lfor.body%3%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%1=>Lfor.body%3%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100003=>Lfor.body%3%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100004=>Lfor.body%3%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100005=>Lfor.body%4%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%1=>Lfor.body%4%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%100003=>Lfor.body%5%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%1=>Lfor.body%6%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%1=>Lfor.body%7%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%1=>Lfor.body%7%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100003=>Lfor.body%7%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100004=>Lfor.inc%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%1=>Lfor.end%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%2%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%1%1=>Lfor.inc%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%1=>Lfor.inc%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100003=>Lfor.inc%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100004=>Lfor.inc%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100005=>Lfor.inc%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100006=>Lfor.inc%2%100007
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100007=>Lfor.inc%2%100008
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100008=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lentry%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lfor.cond%1%0
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%1=>Lentry%1%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100003=>Lentry%1%100004
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100004=>Lentry%1%100005
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100005=>Lentry%1%100006
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100006=>Lentry%1%100007
=src.llvm-%dot.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100007=>Lentry%1%100008
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100008=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%1=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100003=>Lfor.cond%2%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100004=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100005=>Lfor.cond%2%100006
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100006=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.cond%1%0
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(2, 3, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 7) : BV:32
15 : select(2, 12, 14, 9, 10) : BV:32
16 : bvmul(11, 15) : BV:32
17 : bvadd(1, 16) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(2, 3, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 7) : BV:32
15 : select(2, 12, 14, 9, 10) : BV:32
16 : bvmul(11, 15) : BV:32
17 : bvadd(1, 16) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(2, 3, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 7) : BV:32
15 : select(2, 12, 14, 9, 10) : BV:32
16 : bvmul(11, 15) : BV:32
17 : bvadd(1, 16) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvmul(10, 14) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.body%1%100003
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100003=>Lfor.body%1%100004
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100004=>Lfor.body%1%100005
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100005=>Lfor.body%2%1
=src.llvm-%arrayidx
1 : input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%1=>Lfor.body%2%100003
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100003=>Lfor.body%3%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%1=>Lfor.body%3%100003
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100003=>Lfor.body%3%100004
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100004=>Lfor.body%3%100005
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100005=>Lfor.body%4%1
=src.llvm-%arrayidx1
1 : input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%1=>Lfor.body%4%100003
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%100003=>Lfor.body%5%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%1=>Lfor.body%6%1
=src.llvm-%mul
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%1=>Lfor.body%7%1
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-%mul : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%1=>Lfor.body%7%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100003=>Lfor.body%7%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100004=>Lfor.inc%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%1=>Lfor.end%2%1
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%dot.0 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%1=>E0%0%1
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%dot.0 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%2%1=>E0%0%1
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-callee-save.0 : BV:32
2 : input.src.llvm-%hidden-reg : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%1%1=>Lfor.inc%2%1
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%1=>Lfor.inc%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100003=>Lfor.inc%2%100004
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%inc : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100004=>Lfor.inc%2%100005
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%add : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100005=>Lfor.inc%2%100006
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100006=>Lfor.inc%2%100007
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100007=>Lfor.inc%2%100008
=src.llvm-%i.0
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100008=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lentry%1%100007
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lentry%1%100007 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100007=>Lentry%1%100008
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100007=>Lentry%1%100008 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100008=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100008=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 0
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 2
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 3
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 4
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 5
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 6
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 7
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 0
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 0
1 : input.src.llvm-%arrayidx : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004 assume# 0
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%3%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100004=>Lfor.body%3%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100004=>Lfor.body%3%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100005=>Lfor.body%4%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100005=>Lfor.body%4%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 assume# 0
1 : input.src.llvm-%arrayidx1 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%4%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%5%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%100003=>Lfor.body%5%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%6%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%6%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>Lfor.end%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>Lfor.end%2%1 assume# 0
1 : symbol.3 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>Lfor.end%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1 assume# 0
1 : symbol.3 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%2%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at Lfor.end%2%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.inc%2%100007
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.inc%2%100007 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100007=>Lfor.inc%2%100008
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100007=>Lfor.inc%2%100008 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100008=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100008=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1013
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1014
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1021
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1022
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 for loc_id 1022
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 for loc_id 1014
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lentry%1%100007
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lentry%1%100007 for loc_id 1013
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lentry%1%100007 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100007=>Lentry%1%100008
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100007=>Lentry%1%100008 for loc_id 1021
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100007=>Lentry%1%100008 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100008=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100008=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 for loc_id 1012
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 for loc_id 1012
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1005
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1006
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1008
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1009
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(2, 3, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 7) : BV:32
15 : select(2, 12, 14, 9, 10) : BV:32
16 : bvmul(11, 15) : BV:32
17 : bvadd(1, 16) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1010
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1011
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1013
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(2, 3, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 7) : BV:32
15 : select(2, 12, 14, 9, 10) : BV:32
16 : bvmul(11, 15) : BV:32
17 : bvadd(1, 16) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1014
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(2, 3, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 7) : BV:32
15 : select(2, 12, 14, 9, 10) : BV:32
16 : bvmul(11, 15) : BV:32
17 : bvadd(1, 16) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1015
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1016
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1017
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1018
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1019
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1021
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1022
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1023
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1024
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvmul(10, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1004
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1007
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1005
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1008
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 for loc_id 1006
1 : symbol.1 : BV:32
2 : input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1 for loc_id 1010
1 : input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1015
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1018
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004 for loc_id 1016
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004 for loc_id 1019
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%3%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100004=>Lfor.body%3%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100004=>Lfor.body%3%100005 for loc_id 1017
1 : symbol.2 : BV:32
2 : input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100004=>Lfor.body%3%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100005=>Lfor.body%4%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100005=>Lfor.body%4%1 for loc_id 1011
1 : input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100005=>Lfor.body%4%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%4%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%5%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%100003=>Lfor.body%5%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%6%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%6%1 for loc_id 1024
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%6%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 for loc_id 1009
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-%mul : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%7%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>Lfor.end%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>Lfor.end%2%1 for loc_id 1028
1 : input.src.llvm-%dot.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>Lfor.end%2%1 for loc_id 1033
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%dot.0 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>Lfor.end%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1001
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1020
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1025
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1028
1 : input.src.llvm-%dot.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1033
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%dot.0 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%2%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%2%1=>E0%0%1 for loc_id 1001
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%2%1=>E0%0%1 for loc_id 1020
1 : input.src.llvm-callee-save.0 : BV:32
2 : input.src.llvm-%hidden-reg : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%2%1=>E0%0%1 for loc_id 1025
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%2%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 for loc_id 1023
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 for loc_id 1022
1 : input.src.llvm-%inc : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005 for loc_id 1014
1 : input.src.llvm-%add : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.inc%2%100007
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.inc%2%100007 for loc_id 1013
1 : input.src.llvm-%dot.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.inc%2%100007 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100007=>Lfor.inc%2%100008
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100007=>Lfor.inc%2%100008 for loc_id 1021
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100007=>Lfor.inc%2%100008 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100008=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100008=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in llvm.vdotr
=Loc 1001 in llvm.vdotr.
LLVMVAR
llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Loc 1002 in llvm.vdotr.
LLVMVAR
src.llvm-%0
1 : input.src.llvm-%0 : BV:32
=Loc 1003 in llvm.vdotr.
LLVMVAR
src.llvm-%1
1 : input.src.llvm-%1 : BV:32
=Loc 1004 in llvm.vdotr.
LLVMVAR
src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset : BV:32
=Loc 1005 in llvm.vdotr.
LLVMVAR
src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset : BV:32
=Loc 1006 in llvm.vdotr.
LLVMVAR
src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset : BV:32
=Loc 1007 in llvm.vdotr.
LLVMVAR
src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset : BV:32
=Loc 1008 in llvm.vdotr.
LLVMVAR
src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset : BV:32
=Loc 1009 in llvm.vdotr.
LLVMVAR
src.llvm-%add
1 : input.src.llvm-%add : BV:32
=Loc 1010 in llvm.vdotr.
LLVMVAR
src.llvm-%arrayidx
1 : input.src.llvm-%arrayidx : BV:32
=Loc 1011 in llvm.vdotr.
LLVMVAR
src.llvm-%arrayidx1
1 : input.src.llvm-%arrayidx1 : BV:32
=Loc 1012 in llvm.vdotr.
LLVMVAR
src.llvm-%cmp
1 : input.src.llvm-%cmp : BOOL
=Loc 1013 in llvm.vdotr.
LLVMVAR
src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
=Loc 1014 in llvm.vdotr.
LLVMVAR
src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0.phi.tmpvar : BV:32
=Loc 1015 in llvm.vdotr.
LLVMVAR
src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset : BV:32
=Loc 1016 in llvm.vdotr.
LLVMVAR
src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset : BV:32
=Loc 1017 in llvm.vdotr.
LLVMVAR
src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset : BV:32
=Loc 1018 in llvm.vdotr.
LLVMVAR
src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset : BV:32
=Loc 1019 in llvm.vdotr.
LLVMVAR
src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset : BV:32
=Loc 1020 in llvm.vdotr.
LLVMVAR
src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=Loc 1021 in llvm.vdotr.
LLVMVAR
src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
=Loc 1022 in llvm.vdotr.
LLVMVAR
src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=Loc 1023 in llvm.vdotr.
LLVMVAR
src.llvm-%inc
1 : input.src.llvm-%inc : BV:32
=Loc 1024 in llvm.vdotr.
LLVMVAR
src.llvm-%mul
1 : input.src.llvm-%mul : BV:32
=Loc 1025 in llvm.vdotr.
LLVMVAR
src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Loc 1026 in llvm.vdotr.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1027 in llvm.vdotr.
REGMEM
uset_visit_expr
1 : input.uset_visit_expr : BOOL
=Loc 1028 in llvm.vdotr.
SLOT
=memname
src.llvm-mem
=addr
1 : symbol.3 : BV:32
=nbytes
4
=bigendian
false
=Loc 1029 in llvm.vdotr.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1030 in llvm.vdotr.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1031 in llvm.vdotr.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1032 in llvm.vdotr.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1033 in llvm.vdotr.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.3.0

=Alias analysis results in llvm.vdotr
=Alias analysis result in llvm.vdotr at L0%0%1
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1004 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1005 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1006 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1007 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1008 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1010 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1011 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1012 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1013 (input.src.llvm-%dot.0)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1014 (input.src.llvm-%dot.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1015 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1016 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1017 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1018 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1019 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1020 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1021 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1022 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1023 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1024 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1025 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1026 (input.econd)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1027 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1028 (select(input.src.llvm-mem, memlabel-mem-symbol.3.0, symbol.3, 4, false))
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.vdotr at L0%0%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1004 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1005 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1006 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1007 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1008 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1010 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1011 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1012 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1013 (input.src.llvm-%dot.0)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1014 (input.src.llvm-%dot.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1015 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1016 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1017 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1018 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1019 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1020 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1021 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1022 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1023 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1024 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1025 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1026 (input.econd)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1027 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1028 (select(input.src.llvm-mem, memlabel-mem-symbol.3.0, symbol.3, 4, false))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%1%0 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1004 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1005 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1006 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1007 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1008 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1010 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1011 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1012 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1013 (input.src.llvm-%dot.0)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1014 (input.src.llvm-%dot.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1015 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1016 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1017 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1018 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1019 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1020 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1021 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1022 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1023 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1024 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1025 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1026 (input.econd)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1027 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1028 (select(input.src.llvm-mem, memlabel-mem-symbol.3.0, symbol.3, 4, false))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.cond%2%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1004 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1005 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1006 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1007 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1008 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1010 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1011 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1012 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1013 (input.src.llvm-%dot.0)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1014 (input.src.llvm-%dot.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1015 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1016 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1017 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1018 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1019 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1020 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1021 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1022 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1023 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1024 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1025 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1026 (input.econd)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1027 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1028 (select(input.src.llvm-mem, memlabel-mem-symbol.3.0, symbol.3, 4, false))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.body%1%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1004 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1005 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1006 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1007 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1008 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1010 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1011 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1012 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1013 (input.src.llvm-%dot.0)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1014 (input.src.llvm-%dot.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1015 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1016 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1017 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1018 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1019 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1020 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1021 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1022 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1023 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1024 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1025 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1026 (input.econd)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1027 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1028 (select(input.src.llvm-mem, memlabel-mem-symbol.3.0, symbol.3, 4, false))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.vdotr at Lfor.end%1%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1001 (input.llvm-%ret-reg)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1004 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1005 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1006 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1007 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1008 (input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1009 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1010 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1011 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1012 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1013 (input.src.llvm-%dot.0)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1014 (input.src.llvm-%dot.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1015 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1016 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1017 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1018 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1019 (input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1020 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1021 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1022 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1023 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1024 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1025 (input.src.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1026 (input.econd)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1027 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1028 (select(input.src.llvm-mem, memlabel-mem-symbol.3.0, symbol.3, 4, false))
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.vdotr at E0%0%1 for loc 1033 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr

=Liveness in llvm.vdotr
=live locs at L0%0%1
1028, 1029, 1031, 1032, 1033
=live locs at Lfor.cond%1%0
1013, 1021, 1028, 1029, 1031, 1032, 1033
=live locs at Lfor.cond%2%1
1012, 1013, 1021, 1028, 1029, 1031, 1032, 1033
=live locs at Lfor.body%1%1
1013, 1021, 1028, 1029, 1031, 1032, 1033
=live locs at Lfor.end%1%1
1013, 1028, 1029, 1031, 1032, 1033
=live locs at E0%0%1
1028, 1029, 1031, 1032, 1033

=Available expressions in llvm.vdotr
=available expressions at L0%0%1 in llvm.vdotr
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%1%0 in llvm.vdotr
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%2%1 in llvm.vdotr
=avail_exprs begin
=loc 1012
=from_expr
17405 : input.src.llvm-%cmp : BOOL
=to_expr
17402 : input.src.llvm-%i.0 : BV:32
17403 : 32000 : BV:32
17404 : bvslt(17402, 17403) : BOOL
=avail_exprs end
=available expressions at Lfor.body%1%1 in llvm.vdotr
=avail_exprs begin
=loc 1012
=from_expr
17405 : input.src.llvm-%cmp : BOOL
=to_expr
17402 : input.src.llvm-%i.0 : BV:32
17403 : 32000 : BV:32
17404 : bvslt(17402, 17403) : BOOL
=avail_exprs end
=available expressions at Lfor.end%1%1 in llvm.vdotr
=avail_exprs begin
=loc 1012
=from_expr
17405 : input.src.llvm-%cmp : BOOL
=to_expr
17402 : input.src.llvm-%i.0 : BV:32
17403 : 32000 : BV:32
17404 : bvslt(17402, 17403) : BOOL
=avail_exprs end
=available expressions at E0%0%1 in llvm.vdotr
=avail_exprs begin
=loc 1001
=from_expr
17499 : input.llvm-%ret-reg : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1012
=from_expr
17405 : input.src.llvm-%cmp : BOOL
=to_expr
17402 : input.src.llvm-%i.0 : BV:32
17403 : 32000 : BV:32
17404 : bvslt(17402, 17403) : BOOL
=loc 1025
=from_expr
17504 : input.src.llvm-indir_tgt : BV:32
=to_expr
17387 : retaddr_const : BV:32
=loc 1028
=from_expr
17390 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
17395 : memlabel-mem-symbol.3.0 : MEMLABEL
260 : symbol.3 : BV:32
17436 : 4 : INT
17442 : 0 : BOOL
17430 : select(17390, 17395, 260, 17436, 17442) : BV:32
=to_expr
17460 : input.src.llvm-%dot.0 : BV:32
=avail_exprs end

=sprel_maps in llvm.vdotr
=sprel_map at L0%0%1 in llvm.vdotr
=sprel_map at Lfor.cond%1%0 in llvm.vdotr
=sprel_map at Lfor.cond%2%1 in llvm.vdotr
=sprel_map at Lfor.body%1%1 in llvm.vdotr
=sprel_map at Lfor.end%1%1 in llvm.vdotr
=sprel_map at E0%0%1 in llvm.vdotr
=loc 1001
17389 : 0 : BV:32
=loc 1025
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=PC_to_linename:
=pc
Lentry%1%1
=linename
(line 11 at column 8)
=pc
Lfor.cond%1%1
=linename
(line 11 at column 21)
=pc
Lfor.cond%2%1
=linename
(line 11 at column 3)
=pc
Lfor.body%1%1
=linename
(line 12 at column 11)
=pc
Lfor.body%2%1
=linename
(line 12 at column 11)
=pc
Lfor.body%3%1
=linename
(line 12 at column 18)
=pc
Lfor.body%4%1
=linename
(line 12 at column 18)
=pc
Lfor.body%5%1
=linename
(line 12 at column 16)
=pc
Lfor.body%6%1
=linename
line 12
=pc
Lfor.body%7%1
=linename
line 13
=pc
Lfor.end%1%1
=linename
line 14
=pc
Lfor.end%2%1
=linename
line 15
=pc
Lfor.inc%1%1
=linename
(line 11 at column 29)
=pc
Lfor.inc%2%1
=linename
line 11
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%1%1
=column_name
 at column 8
=pc
Lfor.cond%1%1
=column_name
 at column 21
=pc
Lfor.cond%2%1
=column_name
 at column 3
=pc
Lfor.body%1%1
=column_name
 at column 11
=pc
Lfor.body%2%1
=column_name
 at column 11
=pc
Lfor.body%3%1
=column_name
 at column 18
=pc
Lfor.body%4%1
=column_name
 at column 18
=pc
Lfor.body%5%1
=column_name
 at column 16
=pc
Lfor.body%6%1
=column_name
 at column 8
=pc
Lfor.body%7%1
=column_name
 at column 3
=pc
Lfor.end%1%1
=column_name
 at column 7
=pc
Lfor.end%2%1
=column_name
 at column 2
=pc
Lfor.inc%1%1
=column_name
 at column 29
=pc
Lfor.inc%2%1
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%1%1
=line_and_column
line 11
=pc
Lfor.cond%1%1
=line_and_column
line 11
=pc
Lfor.cond%2%1
=line_and_column
line 11
=pc
Lfor.body%1%1
=line_and_column
line 12
=pc
Lfor.body%2%1
=line_and_column
line 12
=pc
Lfor.body%3%1
=line_and_column
line 12
=pc
Lfor.body%4%1
=line_and_column
line 12
=pc
Lfor.body%5%1
=line_and_column
line 12
=pc
Lfor.body%6%1
=line_and_column
line 12
=pc
Lfor.body%7%1
=line_and_column
line 13
=pc
Lfor.end%1%1
=line_and_column
line 14
=pc
Lfor.end%2%1
=line_and_column
line 15
=pc
Lfor.inc%1%1
=line_and_column
line 11
=pc
Lfor.inc%2%1
=line_and_column
line 11
=PC_to_line_and_column done
=SourceToLLVMVarnames:
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.src.llvm-%dot.0.phi.tmpvar : 0
input.src.llvm-%i.0 : i
input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset : 0
input.src.llvm-%dot.0 : dot
input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset : 0
input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset : (@a + bvmul(i, 4))
input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%i.0.phi.tmpvar : 0
input.src.llvm-%arrayidx1 : (@b + bvmul(i, 4))
input.src.llvm-%arrayidx : (@a + bvmul(i, 4))
input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.llvm-%ret-reg : 0
input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset : 0
input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset : (@b + bvmul(i, 4))
input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%inc : i
input.src.llvm-%mul : bvmul(input.src.llvm-%0, input.src.llvm-%1)
input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset : 0
input.src.llvm-indir_tgt : retaddr_const
input.src.llvm-%add : dot
input.src.llvm-%cmp : (i&lt;<sub>s</sub>32000)
=InputLLVMToSourceVarnames done
=TFG_LLVM_done
=dst_tfg
=TFG:
=Nodes: L0%0%1 L2%1%0 L7%1%1 L8%1%0 E0%0%1
=Edges:
L7%1%1 => L2%1%0
L7%1%1 => L8%1%0
L0%0%1 => L2%1%0
L8%1%0 => E0%0%1
L2%1%0 => L7%1%1
=graph done
=Node outputs: E0%0%1
=Output: src.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Output: symbol.1.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.dst.exreg.0.0 : BV:32
=Output: heap
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.3.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
C_SYMBOL3 : temp : 4 : 4 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: L2%1%0
=L2%1%0 assume predicate_set done
=L2%1%0 assert predicate_set done
=Node assumes and asserts: L7%1%1
=L7%1%1 assume predicate_set done
=L7%1%1 assert predicate_set done
=Node assumes and asserts: L8%1%0
=L8%1%0 assume predicate_set done
=L8%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-esp
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-esp
=Edge: L7%1%1 => L2%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L7%1%1 => L8%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L0%0%1 => L2%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))

=Edge: L8%1%0 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 127 : INT
6 : 96 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 2 : INT
9 : bvzero_ext(4, 8) : BV:130
10 : 0 : BV:1
11 : bvconcat(9, 10) : BV:131
12 : 129 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:130
15 : 8 : BV:32
16 : 0 : BV:24
17 : 255 { -1 } : BV:8
18 : bvconcat(16, 17) : BV:32
19 : bvand(15, 18) : BV:32
20 : 7 : INT
21 : bvextract(19, 20, 13) : BV:8
22 : bvextract(21, 20, 13) : BV:8
23 : 0 : BV:3
24 : bvconcat(22, 23) : BV:11
25 : bvextract(24, 20, 13) : BV:8
26 : 122 : INT
27 : bvzero_ext(25, 26) : BV:130
28 : bvlshr(14, 27) : BV:130
29 : 128 : INT
30 : 1 : INT
31 : bvextract(28, 29, 30) : BV:128
32 : bvextract(31, 5, 6) : BV:32
33 : bvadd(7, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(4, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvadd(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(4, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 31 : INT
46 : bvextract(4, 45, 13) : BV:32
47 : bvextract(31, 45, 13) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(44, 48) : BV:64
50 : bvconcat(39, 49) : BV:128
51 : bvextract(50, 5, 6) : BV:32
52 : bvzero_ext(50, 8) : BV:130
53 : bvconcat(52, 10) : BV:131
54 : bvextract(53, 12, 13) : BV:130
55 : 4 : BV:32
56 : bvand(55, 18) : BV:32
57 : bvextract(56, 20, 13) : BV:8
58 : bvextract(57, 20, 13) : BV:8
59 : bvconcat(58, 23) : BV:11
60 : bvextract(59, 20, 13) : BV:8
61 : bvzero_ext(60, 26) : BV:130
62 : bvlshr(54, 61) : BV:130
63 : bvextract(62, 29, 30) : BV:128
64 : bvextract(63, 5, 6) : BV:32
65 : bvadd(51, 64) : BV:32
66 : bvextract(50, 34, 35) : BV:32
67 : bvextract(63, 34, 35) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvconcat(65, 68) : BV:64
70 : bvextract(50, 40, 41) : BV:32
71 : bvextract(63, 40, 41) : BV:32
72 : bvadd(70, 71) : BV:32
73 : bvextract(50, 45, 13) : BV:32
74 : bvextract(63, 45, 13) : BV:32
75 : bvadd(73, 74) : BV:32
76 : bvconcat(72, 75) : BV:64
77 : bvconcat(69, 76) : BV:128
78 : bvextract(77, 40, 13) : BV:64
79 : bvextract(78, 45, 13) : BV:32
80 : 4 : INT
81 : 0 : BOOL
82 : store(1, 2, 3, 79, 80, 81) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 127 : INT
6 : 96 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 2 : INT
9 : bvzero_ext(4, 8) : BV:130
10 : 0 : BV:1
11 : bvconcat(9, 10) : BV:131
12 : 129 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:130
15 : 8 : BV:32
16 : 0 : BV:24
17 : 255 { -1 } : BV:8
18 : bvconcat(16, 17) : BV:32
19 : bvand(15, 18) : BV:32
20 : 7 : INT
21 : bvextract(19, 20, 13) : BV:8
22 : bvextract(21, 20, 13) : BV:8
23 : 0 : BV:3
24 : bvconcat(22, 23) : BV:11
25 : bvextract(24, 20, 13) : BV:8
26 : 122 : INT
27 : bvzero_ext(25, 26) : BV:130
28 : bvlshr(14, 27) : BV:130
29 : 128 : INT
30 : 1 : INT
31 : bvextract(28, 29, 30) : BV:128
32 : bvextract(31, 5, 6) : BV:32
33 : bvadd(7, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(4, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvadd(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(4, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 31 : INT
46 : bvextract(4, 45, 13) : BV:32
47 : bvextract(31, 45, 13) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(44, 48) : BV:64
50 : bvconcat(39, 49) : BV:128
51 : bvextract(50, 5, 6) : BV:32
52 : bvzero_ext(50, 8) : BV:130
53 : bvconcat(52, 10) : BV:131
54 : bvextract(53, 12, 13) : BV:130
55 : 4 : BV:32
56 : bvand(55, 18) : BV:32
57 : bvextract(56, 20, 13) : BV:8
58 : bvextract(57, 20, 13) : BV:8
59 : bvconcat(58, 23) : BV:11
60 : bvextract(59, 20, 13) : BV:8
61 : bvzero_ext(60, 26) : BV:130
62 : bvlshr(54, 61) : BV:130
63 : bvextract(62, 29, 30) : BV:128
64 : bvextract(63, 5, 6) : BV:32
65 : bvadd(51, 64) : BV:32
66 : bvextract(50, 34, 35) : BV:32
67 : bvextract(63, 34, 35) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvconcat(65, 68) : BV:64
70 : bvextract(50, 40, 41) : BV:32
71 : bvextract(63, 40, 41) : BV:32
72 : bvadd(70, 71) : BV:32
73 : bvextract(50, 45, 13) : BV:32
74 : bvextract(63, 45, 13) : BV:32
75 : bvadd(73, 74) : BV:32
76 : bvconcat(72, 75) : BV:64
77 : bvconcat(69, 76) : BV:128
78 : bvextract(77, 40, 13) : BV:64
79 : bvextract(78, 45, 13) : BV:32
80 : 4 : INT
81 : 0 : BOOL
82 : store(1, 2, 3, 79, 80, 81) : ARRAY[BV:32 -> BV:8]
83 : mlvar.dst.3 : MEMLABEL
84 : input.dst.exreg.0.4 : BV:32
85 : select(82, 83, 84, 80, 81) : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 2 : INT
6 : bvzero_ext(1, 5) : BV:130
7 : 0 : BV:1
8 : bvconcat(6, 7) : BV:131
9 : 129 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:130
12 : 8 : BV:32
13 : 0 : BV:24
14 : 255 { -1 } : BV:8
15 : bvconcat(13, 14) : BV:32
16 : bvand(12, 15) : BV:32
17 : 7 : INT
18 : bvextract(16, 17, 10) : BV:8
19 : bvextract(18, 17, 10) : BV:8
20 : 0 : BV:3
21 : bvconcat(19, 20) : BV:11
22 : bvextract(21, 17, 10) : BV:8
23 : 122 : INT
24 : bvzero_ext(22, 23) : BV:130
25 : bvlshr(11, 24) : BV:130
26 : 128 : INT
27 : 1 : INT
28 : bvextract(25, 26, 27) : BV:128
29 : bvextract(28, 2, 3) : BV:32
30 : bvadd(4, 29) : BV:32
31 : 95 : INT
32 : 64 : INT
33 : bvextract(1, 31, 32) : BV:32
34 : bvextract(28, 31, 32) : BV:32
35 : bvadd(33, 34) : BV:32
36 : bvconcat(30, 35) : BV:64
37 : 63 : INT
38 : 32 : INT
39 : bvextract(1, 37, 38) : BV:32
40 : bvextract(28, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : 31 : INT
43 : bvextract(1, 42, 10) : BV:32
44 : bvextract(28, 42, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(41, 45) : BV:64
47 : bvconcat(36, 46) : BV:128
48 : bvzero_ext(47, 5) : BV:130
49 : bvconcat(48, 7) : BV:131
50 : bvextract(49, 9, 10) : BV:130
51 : 4 : BV:32
52 : bvand(51, 15) : BV:32
53 : bvextract(52, 17, 10) : BV:8
54 : bvextract(53, 17, 10) : BV:8
55 : bvconcat(54, 20) : BV:11
56 : bvextract(55, 17, 10) : BV:8
57 : bvzero_ext(56, 23) : BV:130
58 : bvlshr(50, 57) : BV:130
59 : bvextract(58, 26, 27) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 2 : INT
6 : bvzero_ext(1, 5) : BV:130
7 : 0 : BV:1
8 : bvconcat(6, 7) : BV:131
9 : 129 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:130
12 : 8 : BV:32
13 : 0 : BV:24
14 : 255 { -1 } : BV:8
15 : bvconcat(13, 14) : BV:32
16 : bvand(12, 15) : BV:32
17 : 7 : INT
18 : bvextract(16, 17, 10) : BV:8
19 : bvextract(18, 17, 10) : BV:8
20 : 0 : BV:3
21 : bvconcat(19, 20) : BV:11
22 : bvextract(21, 17, 10) : BV:8
23 : 122 : INT
24 : bvzero_ext(22, 23) : BV:130
25 : bvlshr(11, 24) : BV:130
26 : 128 : INT
27 : 1 : INT
28 : bvextract(25, 26, 27) : BV:128
29 : bvextract(28, 2, 3) : BV:32
30 : bvadd(4, 29) : BV:32
31 : 95 : INT
32 : 64 : INT
33 : bvextract(1, 31, 32) : BV:32
34 : bvextract(28, 31, 32) : BV:32
35 : bvadd(33, 34) : BV:32
36 : bvconcat(30, 35) : BV:64
37 : 63 : INT
38 : 32 : INT
39 : bvextract(1, 37, 38) : BV:32
40 : bvextract(28, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : 31 : INT
43 : bvextract(1, 42, 10) : BV:32
44 : bvextract(28, 42, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(41, 45) : BV:64
47 : bvconcat(36, 46) : BV:128
48 : bvextract(47, 2, 3) : BV:32
49 : bvzero_ext(47, 5) : BV:130
50 : bvconcat(49, 7) : BV:131
51 : bvextract(50, 9, 10) : BV:130
52 : 4 : BV:32
53 : bvand(52, 15) : BV:32
54 : bvextract(53, 17, 10) : BV:8
55 : bvextract(54, 17, 10) : BV:8
56 : bvconcat(55, 20) : BV:11
57 : bvextract(56, 17, 10) : BV:8
58 : bvzero_ext(57, 23) : BV:130
59 : bvlshr(51, 58) : BV:130
60 : bvextract(59, 26, 27) : BV:128
61 : bvextract(60, 2, 3) : BV:32
62 : bvadd(48, 61) : BV:32
63 : bvextract(47, 31, 32) : BV:32
64 : bvextract(60, 31, 32) : BV:32
65 : bvadd(63, 64) : BV:32
66 : bvconcat(62, 65) : BV:64
67 : bvextract(47, 37, 38) : BV:32
68 : bvextract(60, 37, 38) : BV:32
69 : bvadd(67, 68) : BV:32
70 : bvextract(47, 42, 10) : BV:32
71 : bvextract(60, 42, 10) : BV:32
72 : bvadd(70, 71) : BV:32
73 : bvconcat(69, 72) : BV:64
74 : bvconcat(66, 73) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))

=Edge: L2%1%0 => L7%1%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L0%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L2%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%1%1=>L1%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%1=>L2%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%0=>L2%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%0=>L7%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%1=>L3%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%1=>L4%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L4%1%1=>L5%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L5%1%1=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L7%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%1=>L2%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%1=>L8%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%0=>L8%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%0=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%1=>L9%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%1=>L10%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%1=>L11%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L11%1%1=>L12%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L12%1%1=>L13%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L13%1%1=>L14%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L14%1%1=>L15%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L15%1%1=>L16%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L16%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L0%1%1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L2%1%0
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : 1 : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%1%1=>L1%1%1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%1=>L2%1%0
=dst.exreg.2.1
1 : 0 : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%0=>L2%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%0=>L7%1%1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127984 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 12 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.2 : BV:32
11 : bvadd(10, 4, 5) : BV:32
12 : select(1, 2, 11, 7, 8) : BV:32
13 : bvmul(9, 12) : BV:32
14 : 8 : BV:32
15 : bvadd(3, 4, 14) : BV:32
16 : select(1, 2, 15, 7, 8) : BV:32
17 : bvadd(10, 4, 14) : BV:32
18 : select(1, 2, 17, 7, 8) : BV:32
19 : bvmul(16, 18) : BV:32
20 : 4 : BV:32
21 : bvadd(3, 20, 4) : BV:32
22 : select(1, 2, 21, 7, 8) : BV:32
23 : bvadd(10, 20, 4) : BV:32
24 : select(1, 2, 23, 7, 8) : BV:32
25 : bvmul(22, 24) : BV:32
26 : bvadd(3, 4) : BV:32
27 : select(1, 2, 26, 7, 8) : BV:32
28 : bvadd(10, 4) : BV:32
29 : select(1, 2, 28, 7, 8) : BV:32
30 : bvmul(27, 29) : BV:32
31 : bvconcat(13, 19, 25, 30) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : dst_symbol_addr.2 : BV:32
15 : bvadd(14, 8, 9) : BV:32
16 : select(5, 6, 15, 11, 12) : BV:32
17 : bvmul(13, 16) : BV:32
18 : bvadd(4, 17) : BV:32
19 : 95 : INT
20 : 64 : INT
21 : bvextract(1, 19, 20) : BV:32
22 : 8 : BV:32
23 : bvadd(7, 8, 22) : BV:32
24 : select(5, 6, 23, 11, 12) : BV:32
25 : bvadd(14, 8, 22) : BV:32
26 : select(5, 6, 25, 11, 12) : BV:32
27 : bvmul(24, 26) : BV:32
28 : bvadd(21, 27) : BV:32
29 : 63 : INT
30 : 32 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : 4 : BV:32
33 : bvadd(7, 32, 8) : BV:32
34 : select(5, 6, 33, 11, 12) : BV:32
35 : bvadd(14, 32, 8) : BV:32
36 : select(5, 6, 35, 11, 12) : BV:32
37 : bvmul(34, 36) : BV:32
38 : bvadd(31, 37) : BV:32
39 : 31 : INT
40 : 0 : INT
41 : bvextract(1, 39, 40) : BV:32
42 : bvadd(7, 8) : BV:32
43 : select(5, 6, 42, 11, 12) : BV:32
44 : bvadd(14, 8) : BV:32
45 : select(5, 6, 44, 11, 12) : BV:32
46 : bvmul(43, 45) : BV:32
47 : bvadd(41, 46) : BV:32
48 : bvconcat(18, 28, 38, 47) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839312 { -127984 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127984 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 128000 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127984 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%1=>L3%1%1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%1=>L4%1%1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=dst.exreg.11.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L4%1%1=>L5%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967292 { -4 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvmul(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 4294967288 { -8 } : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvmul(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4294967284 { -12 } : BV:32
26 : bvadd(7, 8, 25) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvmul(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : 4294967280 { -16 } : BV:32
33 : bvadd(7, 8, 32) : BV:32
34 : select(5, 6, 33, 11, 12) : BV:32
35 : bvmul(31, 34) : BV:32
36 : bvconcat(14, 21, 28, 35) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L5%1%1=>L6%1%1
=dst.exreg.2.1
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.1 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvadd(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvadd(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(1, 18, 19) : BV:32
21 : bvextract(5, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L7%1%1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.14.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839296 { -128000 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839296 { -128000 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 128000 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.7.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 128000 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%1=>L2%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%1=>L8%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%0=>L8%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%0=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 127 : INT
6 : 96 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(4, 8, 9) : BV:32
11 : 63 : INT
12 : 32 : INT
13 : bvextract(4, 11, 12) : BV:32
14 : 31 : INT
15 : 0 : INT
16 : bvextract(4, 14, 15) : BV:32
17 : bvadd(7, 10, 13, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : store(1, 2, 3, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : 1 : BV:1
=dst.llvm-indir_tgt
1 : retaddr_const : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.2.0
1 : 0 : BV:32
2 : input.dst.exreg.2.1 : BV:128
3 : 127 : INT
4 : 64 : INT
5 : bvextract(2, 3, 4) : BV:64
6 : 96 : INT
7 : bvextract(2, 3, 6) : BV:32
8 : 63 : INT
9 : 32 : INT
10 : bvextract(2, 8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvconcat(1, 5, 11) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 95 : INT
6 : 64 : INT
7 : bvextract(1, 5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
9 : 63 : INT
10 : 32 : INT
11 : bvextract(1, 9, 10) : BV:32
12 : bvadd(4, 7, 11) : BV:32
13 : 31 : INT
14 : 0 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvadd(4, 7, 11, 15) : BV:32
17 : bvconcat(4, 8, 12, 16) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%1=>L9%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.1 : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%1=>L10%1%1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%1=>L11%1%1
=dst.exreg.2.0
1 : 0 : BV:64
2 : input.dst.exreg.2.0 : BV:128
3 : 127 : INT
4 : 64 : INT
5 : bvextract(2, 3, 4) : BV:64
6 : bvconcat(1, 5) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L11%1%1=>L12%1%1
=dst.exreg.2.1
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.1 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvadd(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvadd(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(1, 18, 19) : BV:32
21 : bvextract(5, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L12%1%1=>L13%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.1 : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L13%1%1=>L14%1%1
=dst.exreg.2.0
1 : 0 : BV:32
2 : input.dst.exreg.2.0 : BV:128
3 : 127 : INT
4 : 32 : INT
5 : bvextract(2, 3, 4) : BV:96
6 : bvconcat(1, 5) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L14%1%1=>L15%1%1
=dst.exreg.2.1
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.1 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvadd(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvadd(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(1, 18, 19) : BV:32
21 : bvextract(5, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L15%1%1=>L16%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : store(1, 2, 3, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L16%1%1=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L2%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L2%1%0 done
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%1
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%0
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%0 done
=graph_with_simplified_assets.simplified_assumes at L2%1%0=>L2%1%1
=graph_with_simplified_assets.simplified_assumes at L2%1%0=>L2%1%1 done
=graph_with_simplified_assets.simplified_assumes at L2%1%0=>L7%1%1
=graph_with_simplified_assets.simplified_assumes at L2%1%0=>L7%1%1 done
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L2%1%0
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L2%1%0 done
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%0
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%0 done
=graph_with_simplified_assets.simplified_assumes at L8%1%0=>L8%1%1
=graph_with_simplified_assets.simplified_assumes at L8%1%0=>L8%1%1 done
=graph_with_simplified_assets.simplified_assumes at L8%1%0=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L8%1%0=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%1
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%1 done
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%1
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%1 done
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L11%1%1
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L11%1%1 done
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>L12%1%1
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>L12%1%1 done
=graph_with_simplified_assets.simplified_assumes at L12%1%1=>L13%1%1
=graph_with_simplified_assets.simplified_assumes at L12%1%1=>L13%1%1 done
=graph_with_simplified_assets.simplified_assumes at L13%1%1=>L14%1%1
=graph_with_simplified_assets.simplified_assumes at L13%1%1=>L14%1%1 done
=graph_with_simplified_assets.simplified_assumes at L14%1%1=>L15%1%1
=graph_with_simplified_assets.simplified_assumes at L14%1%1=>L15%1%1 done
=graph_with_simplified_assets.simplified_assumes at L15%1%1=>L16%1%1
=graph_with_simplified_assets.simplified_assumes at L15%1%1=>L16%1%1 done
=graph_with_simplified_assets.simplified_assumes at L16%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L16%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1018
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1030
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1034
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1009
1 : 0 : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1012
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1013
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1015
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1018
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1030
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 for loc_id 1034
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L2%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1012
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1013
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1015
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%0
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%0 for loc_id 1009
1 : 0 : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L2%1%1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L2%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127984 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127984 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 12 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.2 : BV:32
11 : bvadd(10, 4, 5) : BV:32
12 : select(1, 2, 11, 7, 8) : BV:32
13 : bvmul(9, 12) : BV:32
14 : 8 : BV:32
15 : bvadd(3, 4, 14) : BV:32
16 : select(1, 2, 15, 7, 8) : BV:32
17 : bvadd(10, 4, 14) : BV:32
18 : select(1, 2, 17, 7, 8) : BV:32
19 : bvmul(16, 18) : BV:32
20 : 4 : BV:32
21 : bvadd(3, 20, 4) : BV:32
22 : select(1, 2, 21, 7, 8) : BV:32
23 : bvadd(10, 20, 4) : BV:32
24 : select(1, 2, 23, 7, 8) : BV:32
25 : bvmul(22, 24) : BV:32
26 : bvadd(3, 4) : BV:32
27 : select(1, 2, 26, 7, 8) : BV:32
28 : bvadd(10, 4) : BV:32
29 : select(1, 2, 28, 7, 8) : BV:32
30 : bvmul(27, 29) : BV:32
31 : bvconcat(13, 19, 25, 30) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1009
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : dst_symbol_addr.2 : BV:32
15 : bvadd(14, 8, 9) : BV:32
16 : select(5, 6, 15, 11, 12) : BV:32
17 : bvmul(13, 16) : BV:32
18 : bvadd(4, 17) : BV:32
19 : 95 : INT
20 : 64 : INT
21 : bvextract(1, 19, 20) : BV:32
22 : 8 : BV:32
23 : bvadd(7, 8, 22) : BV:32
24 : select(5, 6, 23, 11, 12) : BV:32
25 : bvadd(14, 8, 22) : BV:32
26 : select(5, 6, 25, 11, 12) : BV:32
27 : bvmul(24, 26) : BV:32
28 : bvadd(21, 27) : BV:32
29 : 63 : INT
30 : 32 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : 4 : BV:32
33 : bvadd(7, 32, 8) : BV:32
34 : select(5, 6, 33, 11, 12) : BV:32
35 : bvadd(14, 32, 8) : BV:32
36 : select(5, 6, 35, 11, 12) : BV:32
37 : bvmul(34, 36) : BV:32
38 : bvadd(31, 37) : BV:32
39 : 31 : INT
40 : 0 : INT
41 : bvextract(1, 39, 40) : BV:32
42 : bvadd(7, 8) : BV:32
43 : select(5, 6, 42, 11, 12) : BV:32
44 : bvadd(14, 8) : BV:32
45 : select(5, 6, 44, 11, 12) : BV:32
46 : bvmul(43, 45) : BV:32
47 : bvadd(41, 46) : BV:32
48 : bvconcat(18, 28, 38, 47) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1012
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839312 { -127984 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127984 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 128000 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%0=>L7%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1019
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1002
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1012
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1015
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967292 { -4 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvmul(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 4294967288 { -8 } : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvmul(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4294967284 { -12 } : BV:32
26 : bvadd(7, 8, 25) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvmul(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : 4294967280 { -16 } : BV:32
33 : bvadd(7, 8, 32) : BV:32
34 : select(5, 6, 33, 11, 12) : BV:32
35 : bvmul(31, 34) : BV:32
36 : bvconcat(14, 21, 28, 35) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1019
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1009
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.1 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvadd(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvadd(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(1, 18, 19) : BV:32
21 : bvextract(5, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 128000 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1005
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839296 { -128000 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1012
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839296 { -128000 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 128000 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1013
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1014
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0 for loc_id 1019
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0 for loc_id 1020
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0 for loc_id 1021
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0 for loc_id 1022
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0 for loc_id 1023
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0 for loc_id 1024
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0 for loc_id 1025
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0 for loc_id 1026
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0 for loc_id 1027
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0 for loc_id 1035
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0 for loc_id 1036
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L2%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0 for loc_id 1019
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0 for loc_id 1020
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0 for loc_id 1021
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0 for loc_id 1022
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0 for loc_id 1023
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0 for loc_id 1024
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0 for loc_id 1025
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0 for loc_id 1026
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0 for loc_id 1027
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0 for loc_id 1035
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0 for loc_id 1036
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>L8%1%1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>L8%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1008
1 : 0 : BV:32
2 : input.dst.exreg.2.1 : BV:128
3 : 127 : INT
4 : 64 : INT
5 : bvextract(2, 3, 4) : BV:64
6 : 96 : INT
7 : bvextract(2, 3, 6) : BV:32
8 : 63 : INT
9 : 32 : INT
10 : bvextract(2, 8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvconcat(1, 5, 11) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1009
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 95 : INT
6 : 64 : INT
7 : bvextract(1, 5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
9 : 63 : INT
10 : 32 : INT
11 : bvextract(1, 9, 10) : BV:32
12 : bvadd(4, 7, 11) : BV:32
13 : 31 : INT
14 : 0 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvadd(4, 7, 11, 15) : BV:32
17 : bvconcat(4, 8, 12, 16) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1012
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1013
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1015
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1016
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1017
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1019
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1020
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1022
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1023
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1024
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1025
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1026
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1028
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 95 : INT
6 : 64 : INT
7 : bvextract(1, 5, 6) : BV:32
8 : 63 : INT
9 : 32 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : 31 : INT
12 : 0 : INT
13 : bvextract(1, 11, 12) : BV:32
14 : bvadd(4, 7, 10, 13) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1029
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 127 : INT
6 : 96 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(4, 8, 9) : BV:32
11 : 63 : INT
12 : 32 : INT
13 : bvextract(4, 11, 12) : BV:32
14 : 31 : INT
15 : 0 : INT
16 : bvextract(4, 14, 15) : BV:32
17 : bvadd(7, 10, 13, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : store(1, 2, 3, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-heap : MEMLABEL
22 : memmask(20, 21) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1031
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 127 : INT
6 : 96 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(4, 8, 9) : BV:32
11 : 63 : INT
12 : 32 : INT
13 : bvextract(4, 11, 12) : BV:32
14 : 31 : INT
15 : 0 : INT
16 : bvextract(4, 14, 15) : BV:32
17 : bvadd(7, 10, 13, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : store(1, 2, 3, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-symbol.1.0 : MEMLABEL
22 : memmask(20, 21) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 127 : INT
6 : 96 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(4, 8, 9) : BV:32
11 : 63 : INT
12 : 32 : INT
13 : bvextract(4, 11, 12) : BV:32
14 : 31 : INT
15 : 0 : INT
16 : bvextract(4, 14, 15) : BV:32
17 : bvadd(7, 10, 13, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : store(1, 2, 3, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-symbol.2.0 : MEMLABEL
22 : memmask(20, 21) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 127 : INT
6 : 96 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(4, 8, 9) : BV:32
11 : 63 : INT
12 : 32 : INT
13 : bvextract(4, 11, 12) : BV:32
14 : 31 : INT
15 : 0 : INT
16 : bvextract(4, 14, 15) : BV:32
17 : bvadd(7, 10, 13, 16) : BV:32
18 : 4 : INT
19 : 0 : BOOL
20 : store(1, 2, 3, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-symbol.3.0 : MEMLABEL
22 : memmask(20, 21) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L8%1%0=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1008
1 : input.dst.exreg.2.1 : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1012
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1013
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 for loc_id 1015
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1008
1 : 0 : BV:64
2 : input.dst.exreg.2.0 : BV:128
3 : 127 : INT
4 : 64 : INT
5 : bvextract(2, 3, 4) : BV:64
6 : bvconcat(1, 5) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 for loc_id 1009
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.1 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvadd(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvadd(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(1, 18, 19) : BV:32
21 : bvextract(5, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>L12%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 for loc_id 1008
1 : input.dst.exreg.2.1 : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L12%1%1=>L13%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 for loc_id 1008
1 : 0 : BV:32
2 : input.dst.exreg.2.0 : BV:128
3 : 127 : INT
4 : 32 : INT
5 : bvextract(2, 3, 4) : BV:96
6 : bvconcat(1, 5) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L13%1%1=>L14%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 for loc_id 1009
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.1 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvadd(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvadd(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvadd(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(1, 18, 19) : BV:32
21 : bvextract(5, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L14%1%1=>L15%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1019
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1028
1 : input.dst.exreg.2.1 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1029
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : store(1, 2, 3, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-heap : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1031
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : store(1, 2, 3, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.1.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : store(1, 2, 3, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 for loc_id 1033
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 31 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : store(1, 2, 3, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L15%1%1=>L16%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>E0%0%1 for loc_id 1016
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>E0%0%1 for loc_id 1017
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>E0%0%1 for loc_id 1019
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>E0%0%1 for loc_id 1020
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>E0%0%1 for loc_id 1022
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>E0%0%1 for loc_id 1023
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>E0%0%1 for loc_id 1024
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>E0%0%1 for loc_id 1025
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>E0%0%1 for loc_id 1026
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L16%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in dst
=Loc 0 in dst.
REGMEM
dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=Loc 2 in dst.
REGMEM
dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=Loc 3 in dst.
REGMEM
dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=Loc 4 in dst.
REGMEM
dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=Loc 5 in dst.
REGMEM
dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=Loc 6 in dst.
REGMEM
dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=Loc 7 in dst.
REGMEM
dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=Loc 1001 in dst.
REGMEM
dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=Loc 1002 in dst.
REGMEM
dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=Loc 1003 in dst.
REGMEM
dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=Loc 1004 in dst.
REGMEM
dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=Loc 1005 in dst.
REGMEM
dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=Loc 1006 in dst.
REGMEM
dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=Loc 1007 in dst.
REGMEM
dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=Loc 1008 in dst.
REGMEM
dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=Loc 1009 in dst.
REGMEM
dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=Loc 1010 in dst.
REGMEM
dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=Loc 1011 in dst.
REGMEM
dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=Loc 1012 in dst.
REGMEM
dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=Loc 1013 in dst.
REGMEM
dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=Loc 1014 in dst.
REGMEM
dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=Loc 1015 in dst.
REGMEM
dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=Loc 1016 in dst.
LLVMVAR
dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Loc 1017 in dst.
REGMEM
dst.esp.E0%0%1
1 : input.dst.esp.E0%0%1 : BV:32
=Loc 1018 in dst.
REGMEM
dst.esp.L0%1%1
1 : input.dst.esp.L0%1%1 : BV:32
=Loc 1019 in dst.
REGMEM
dst.hidden_reg.0
1 : input.dst.hidden_reg.0 : BV:16
=Loc 1020 in dst.
REGMEM
dst.hidden_reg.1
1 : input.dst.hidden_reg.1 : BOOL
=Loc 1021 in dst.
REGMEM
dst.hidden_reg.10
1 : input.dst.hidden_reg.10 : BOOL
=Loc 1022 in dst.
REGMEM
dst.hidden_reg.2
1 : input.dst.hidden_reg.2 : BOOL
=Loc 1023 in dst.
REGMEM
dst.hidden_reg.3
1 : input.dst.hidden_reg.3 : BOOL
=Loc 1024 in dst.
REGMEM
dst.hidden_reg.4
1 : input.dst.hidden_reg.4 : BOOL
=Loc 1025 in dst.
REGMEM
dst.hidden_reg.5
1 : input.dst.hidden_reg.5 : BOOL
=Loc 1026 in dst.
REGMEM
dst.hidden_reg.6
1 : input.dst.hidden_reg.6 : BOOL
=Loc 1027 in dst.
REGMEM
dst.hidden_reg.7
1 : input.dst.hidden_reg.7 : BOOL
=Loc 1028 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.3 : BV:32
=nbytes
4
=bigendian
false
=Loc 1029 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-heap
=Loc 1030 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-esp
=Loc 1031 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1032 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1033 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.3.0
=Loc 1034 in dst.
SLOT
=memname
dst.mem
=addr
1 : input_stack_pointer_const : BV:32
=nbytes
4
=bigendian
false
=Loc 1035 in dst.
REGMEM
dst.hidden_reg.8
1 : input.dst.hidden_reg.8 : BOOL
=Loc 1036 in dst.
REGMEM
dst.hidden_reg.9
1 : input.dst.hidden_reg.9 : BOOL
=Loc 1037 in dst.
REGMEM
econd
1 : input.econd : BOOL

=Alias analysis results in dst
=Alias analysis result in dst at L0%0%1
=Alias analysis result in dst at L0%0%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 3 (input.dst.exreg.0.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 4 (input.dst.exreg.0.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 5 (input.dst.exreg.0.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 6 (input.dst.exreg.0.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 7 (input.dst.exreg.0.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1010 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1011 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1012 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1013 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1014 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1015 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1016 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1017 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1018 (input.dst.esp.L0%1%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1019 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1020 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1021 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1022 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1023 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1024 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1025 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1026 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1027 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1028 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.3, 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1029 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1030 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1031 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1034 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1035 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1036 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1037 (input.econd)
nullptr
=Alias analysis result in dst at L2%1%0
=Alias analysis result in dst at L2%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L2%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L2%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L2%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L2%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L2%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1010 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1011 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1012 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1013 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1014 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1015 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1016 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1017 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1018 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L2%1%0 for loc 1019 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1020 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1021 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1022 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1023 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1024 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1025 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1026 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1027 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1028 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.3, 4, false))
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1029 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1030 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1031 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1034 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L2%1%0 for loc 1035 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1036 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L2%1%0 for loc 1037 (input.econd)
nullptr
=Alias analysis result in dst at L7%1%1
=Alias analysis result in dst at L7%1%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L7%1%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1010 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1011 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1012 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1013 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1014 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1015 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1016 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1017 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1018 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L7%1%1 for loc 1019 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1020 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1021 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1022 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1023 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1024 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1025 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1026 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1027 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1028 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.3, 4, false))
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1029 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1030 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1031 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1034 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%1 for loc 1035 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1036 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L7%1%1 for loc 1037 (input.econd)
nullptr
=Alias analysis result in dst at L8%1%0
=Alias analysis result in dst at L8%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L8%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1010 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1011 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1012 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1013 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1014 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1015 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1016 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1017 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1018 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L8%1%0 for loc 1019 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1020 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1021 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1022 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1023 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1024 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1025 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1026 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1027 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1028 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.3, 4, false))
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1029 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1030 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1031 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1033 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1034 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L8%1%0 for loc 1035 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1036 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L8%1%0 for loc 1037 (input.econd)
nullptr
=Alias analysis result in dst at E0%0%1
=Alias analysis result in dst at E0%0%1 for loc 0 (input.dst.exreg.0.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1001 (input.dst.exreg.10.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1002 (input.dst.exreg.11.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1003 (input.dst.exreg.12.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1004 (input.dst.exreg.13.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1005 (input.dst.exreg.14.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1006 (input.dst.exreg.15.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1007 (input.dst.exreg.16.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1010 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1011 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1012 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1013 (input.dst.exreg.7.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1014 (input.dst.exreg.8.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1015 (input.dst.exreg.9.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1016 (input.dst.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1017 (input.dst.esp.E0%0%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1018 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1019 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1020 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1021 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1022 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1023 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1024 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1025 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1026 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1027 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1028 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.3, 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1029 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1030 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1031 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1033 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1034 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1035 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1036 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1037 (input.econd)
nullptr

=Liveness in dst
=live locs at L0%0%1
1028, 1029, 1031, 1032, 1033
=live locs at L2%1%0
0, 1009, 1028, 1029, 1031, 1032, 1033
=live locs at L7%1%1
0, 1009, 1014, 1028, 1029, 1031, 1032, 1033
=live locs at L8%1%0
1009, 1028, 1029, 1031, 1032, 1033
=live locs at E0%0%1
0, 1016, 1028, 1029, 1031, 1032, 1033

=Available expressions in dst

=sprel_maps in dst
=sprel_map at L0%0%1 in dst
=sprel_map at L2%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1018
17386 : input_stack_pointer_const : BV:32
=loc 1034
17387 : retaddr_const : BV:32
=sprel_map at L7%1%1 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1018
17386 : input_stack_pointer_const : BV:32
=loc 1034
17387 : retaddr_const : BV:32
=sprel_map at L8%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1018
17386 : input_stack_pointer_const : BV:32
=loc 1034
17387 : retaddr_const : BV:32
=sprel_map at E0%0%1 in dst
=loc 0
17389 : 0 : BV:32
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
17425 : 4 : BV:32
18013 : bvadd(17386, 17425) : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1001
17602 : 0 : BV:1
=loc 1002
17602 : 0 : BV:1
=loc 1003
17602 : 0 : BV:1
=loc 1004
17599 : 1 : BV:1
=loc 1005
17599 : 1 : BV:1
=loc 1006
17599 : 1 : BV:1
=loc 1007
17599 : 1 : BV:1
=loc 1013
17599 : 1 : BV:1
=loc 1014
17602 : 0 : BV:1
=loc 1015
17602 : 0 : BV:1
=loc 1016
17387 : retaddr_const : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
17425 : 4 : BV:32
18013 : bvadd(17386, 17425) : BV:32
=loc 1018
17386 : input_stack_pointer_const : BV:32
=loc 1034
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=eqcheck_info
=eqcheck
=proof_filename vdotr_vdotr.gcc.eqchecker.O3.i386.ALL.proof
=function_name vdotr
=fixed_reg_mappings begin
0 : 0 : 0
0 : 4 : 4
=fixed_reg_mappings end
=rodata_map begin
=rodata_map end
=dst_iseq
.i0: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i1: pxor %exvr2.1,%exvr2.1 #
.i2: movdqa %exvr5.3w:C_SYMBOL0(%exvr0.0d),%exvr2.0 #
.i3: addl $0x10,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i4: pmulld %exvr5.3w:C_SYMBOL1*1+-16/umask/32(%exvr0.0d),%exvr2.0 #
.i5: paddd %exvr2.0,%exvr2.1 #
.i6: cmpl $0x1f400,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i7: jne .i2 #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i8: movdqa %exvr2.1,%exvr2.0 #
.i9: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i10: psrldq $0x8,%exvr2.0 #
.i11: paddd %exvr2.0,%exvr2.1 #
.i12: movdqa %exvr2.1,%exvr2.0 #
.i13: psrldq $0x4,%exvr2.0 #
.i14: paddd %exvr2.0,%exvr2.1 #
.i15: movd %exvr2.1,%exvr5.3w:C_SYMBOL2 #
.i16: retl  #%exvr0.4d,%exvr5.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
=dst_iseq done
=dst_insn_pcs
0 : 0x0
1 : 0x4
2 : 0x6
3 : 0xa
4 : 0x10
5 : 0x18
6 : 0x1b
7 : 0x24
8 : 0x28
9 : 0x2d
10 : 0x2f
11 : 0x33
12 : 0x35
13 : 0x3a
14 : 0x3e
15 : 0x42
16 : 0x47
=dst_insn_pcs done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
C_SYMBOL3 : temp : 4 : 4 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.3.0_begin : BV:32
2 : memlabel-mem-symbol.3.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 4 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.2.0_begin : BV:32
11 : memlabel-mem-symbol.2.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : 128000 : BV:32
15 : bvadd(14, 5) : BV:32
16 : bvadd(10, 15) : BV:32
17 : eq(11, 16) : BOOL
18 : and(13, 17) : BOOL
19 : memlabel-mem-symbol.1.0_begin : BV:32
20 : memlabel-mem-symbol.1.0_end : BV:32
21 : bvule(19, 20) : BOOL
22 : and(18, 21) : BOOL
23 : bvadd(19, 15) : BV:32
24 : eq(20, 23) : BOOL
25 : and(22, 24) : BOOL
26 : memlabel-mem-esp_begin : BV:32
27 : memlabel-mem-esp_end : BV:32
28 : bvule(26, 27) : BOOL
29 : and(25, 28) : BOOL
30 : stack.size : BV:32
31 : bvadd(30, 5) : BV:32
32 : bvadd(26, 31) : BV:32
33 : eq(27, 32) : BOOL
34 : and(29, 33) : BOOL
35 : bvuge(1, 10) : BOOL
36 : bvule(1, 11) : BOOL
37 : and(35, 36) : BOOL
38 : bvuge(2, 10) : BOOL
39 : bvule(2, 11) : BOOL
40 : and(38, 39) : BOOL
41 : not(40) : BOOL
42 : andnot1(37, 41) : BOOL
43 : bvuge(1, 19) : BOOL
44 : bvule(1, 20) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(2, 19) : BOOL
47 : bvule(2, 20) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(1, 26) : BOOL
53 : bvule(1, 27) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(2, 26) : BOOL
56 : bvule(2, 27) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(10, 1) : BOOL
62 : bvule(10, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(11, 1) : BOOL
65 : bvule(11, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(10, 19) : BOOL
71 : bvule(10, 20) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(11, 19) : BOOL
74 : bvule(11, 20) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : bvuge(10, 26) : BOOL
80 : bvule(10, 27) : BOOL
81 : and(79, 80) : BOOL
82 : bvuge(11, 26) : BOOL
83 : bvule(11, 27) : BOOL
84 : and(82, 83) : BOOL
85 : not(84) : BOOL
86 : andnot1(81, 85) : BOOL
87 : and(78, 86) : BOOL
88 : bvuge(19, 1) : BOOL
89 : bvule(19, 2) : BOOL
90 : and(88, 89) : BOOL
91 : bvuge(20, 1) : BOOL
92 : bvule(20, 2) : BOOL
93 : and(91, 92) : BOOL
94 : not(93) : BOOL
95 : andnot1(90, 94) : BOOL
96 : and(87, 95) : BOOL
97 : bvuge(19, 10) : BOOL
98 : bvule(19, 11) : BOOL
99 : and(97, 98) : BOOL
100 : bvuge(20, 10) : BOOL
101 : bvule(20, 11) : BOOL
102 : and(100, 101) : BOOL
103 : not(102) : BOOL
104 : andnot1(99, 103) : BOOL
105 : and(96, 104) : BOOL
106 : bvuge(19, 26) : BOOL
107 : bvule(19, 27) : BOOL
108 : and(106, 107) : BOOL
109 : bvuge(20, 26) : BOOL
110 : bvule(20, 27) : BOOL
111 : and(109, 110) : BOOL
112 : not(111) : BOOL
113 : andnot1(108, 112) : BOOL
114 : and(105, 113) : BOOL
115 : bvuge(26, 1) : BOOL
116 : bvule(26, 2) : BOOL
117 : and(115, 116) : BOOL
118 : bvuge(27, 1) : BOOL
119 : bvule(27, 2) : BOOL
120 : and(118, 119) : BOOL
121 : not(120) : BOOL
122 : andnot1(117, 121) : BOOL
123 : and(114, 122) : BOOL
124 : bvuge(26, 10) : BOOL
125 : bvule(26, 11) : BOOL
126 : and(124, 125) : BOOL
127 : bvuge(27, 10) : BOOL
128 : bvule(27, 11) : BOOL
129 : and(127, 128) : BOOL
130 : not(129) : BOOL
131 : andnot1(126, 130) : BOOL
132 : and(123, 131) : BOOL
133 : bvuge(26, 19) : BOOL
134 : bvule(26, 20) : BOOL
135 : and(133, 134) : BOOL
136 : bvuge(27, 19) : BOOL
137 : bvule(27, 20) : BOOL
138 : and(136, 137) : BOOL
139 : not(138) : BOOL
140 : andnot1(135, 139) : BOOL
141 : and(132, 140) : BOOL
142 : and(34, 141) : BOOL
143 : symbol.3 : BV:32
144 : 3 : BV:32
145 : bvand(143, 144) : BV:32
146 : 0 : BV:32
147 : eq(145, 146) : BOOL
148 : and(142, 147) : BOOL
149 : symbol.2 : BV:32
150 : 15 : BV:32
151 : bvand(149, 150) : BV:32
152 : eq(151, 146) : BOOL
153 : and(148, 152) : BOOL
154 : symbol.1 : BV:32
155 : bvand(154, 150) : BV:32
156 : eq(155, 146) : BOOL
157 : and(153, 156) : BOOL
158 : eq(154, 19) : BOOL
159 : eq(149, 10) : BOOL
160 : and(158, 159) : BOOL
161 : eq(143, 1) : BOOL
162 : and(160, 161) : BOOL
163 : and(157, 162) : BOOL
164 : input_stack_pointer_const : BV:32
165 : bvule(26, 164) : BOOL
166 : bvule(164, 27) : BOOL
167 : and(165, 166) : BOOL
168 : bvadd(164, 144) : BV:32
169 : eq(168, 27) : BOOL
170 : and(167, 169) : BOOL
171 : and(163, 170) : BOOL
172 : 4294963200 { -4096 } : BV:32
173 : bvand(26, 172) : BV:32
174 : eq(173, 26) : BOOL
175 : 1 : BV:32
176 : bvadd(27, 175) : BV:32
177 : bvand(176, 172) : BV:32
178 : eq(177, 176) : BOOL
179 : and(174, 178) : BOOL
180 : and(171, 179) : BOOL
181 : dst_symbol_addr.1 : BV:32
182 : eq(154, 181) : BOOL
183 : dst_symbol_addr.2 : BV:32
184 : eq(149, 183) : BOOL
185 : and(182, 184) : BOOL
186 : dst_symbol_addr.3 : BV:32
187 : eq(143, 186) : BOOL
188 : and(185, 187) : BOOL
189 : and(180, 188) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 278595584 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 302514176 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : symbol.3 : BV:32
9 : 318767100 : BV:32
10 : eq(8, 9) : BOOL
11 : and(7, 10) : BOOL
12 : dst_symbol_addr.1 : BV:32
13 : eq(12, 2) : BOOL
14 : and(11, 13) : BOOL
15 : dst_symbol_addr.2 : BV:32
16 : eq(15, 5) : BOOL
17 : and(14, 16) : BOOL
18 : dst_symbol_addr.3 : BV:32
19 : eq(18, 9) : BOOL
20 : and(17, 19) : BOOL
21 : input_stack_pointer_const : BV:32
22 : 3759038460 { -535928836 } : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.3.0_begin : BV:32
26 : eq(25, 9) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.3.0_end : BV:32
29 : 318767103 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-symbol.2.0_begin : BV:32
33 : eq(32, 5) : BOOL
34 : and(31, 33) : BOOL
35 : memlabel-mem-symbol.2.0_end : BV:32
36 : 302642175 : BV:32
37 : eq(35, 36) : BOOL
38 : and(34, 37) : BOOL
39 : memlabel-mem-symbol.1.0_begin : BV:32
40 : eq(39, 2) : BOOL
41 : and(38, 40) : BOOL
42 : memlabel-mem-symbol.1.0_end : BV:32
43 : 278723583 : BV:32
44 : eq(42, 43) : BOOL
45 : and(41, 44) : BOOL
46 : memlabel-mem-esp_begin : BV:32
47 : 379260928 : BV:32
48 : eq(46, 47) : BOOL
49 : and(45, 48) : BOOL
50 : memlabel-mem-esp_end : BV:32
51 : 3759038463 { -535928833 } : BV:32
52 : eq(50, 51) : BOOL
53 : and(49, 52) : BOOL
54 : stack.size : BV:32
55 : 3379777536 { -915189760 } : BV:32
56 : eq(54, 55) : BOOL
57 : and(53, 56) : BOOL
=use_concrete_assertion : 1
=Memlabel assertions done
=llvm2ir 0
=eqcheck done
=graph_with_guessing
=Nodes: L0%0%1_L0%0%1 Lfor.body%1%1_L2%1%0 E0%0%1_E0%0%1
=Edges:
L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
Lfor.body%1%1_L2%1%0 => E0%0%1_E0%0%1
=graph done
=Node outputs: E0%0%1_E0%0%1
=Node outputs done for E0%0%1_E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
C_SYMBOL3 : temp : 4 : 4 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=state_end

=Node assumes and asserts: L0%0%1_L0%0%1
=L0%0%1_L0%0%1 assume pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=L0%0%1_L0%0%1 assume predicate_set done
=L0%0%1_L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1_L2%1%0
=Lfor.body%1%1_L2%1%0 assume predicate_set done
=Lfor.body%1%1_L2%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1_E0%0%1
=E0%0%1_E0%0%1 assume predicate_set done
=E0%0%1_E0%0%1 assert pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=E0%0%1_E0%0%1 assert pred 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=E0%0%1_E0%0%1 assert pred 2
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.llvm-indir_tgt : BV:32
=predicate done
=E0%0%1_E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-esp
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-esp
=memlabel_map.5
mlvar.llvm.vdotr.0 : memlabel-mem-symbol.1.0
=memlabel_map.6
mlvar.llvm.vdotr.1 : memlabel-mem-symbol.2.0
=memlabel_map.7
mlvar.llvm.vdotr.2 : memlabel-mem-symbol.3.0
=Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L2%1%0 => E0%0%1_E0%0%1
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to E0%0%1 at unroll 8 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))+((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge3
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge4
=Edge.src_tfg_full_pathset.Edge: Lfor.end%1%1 => E0%0%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%dot.0 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:(  store i32 %dot.0, i32* @temp, align 4, !dbg !32*  ret i32 0, !dbg !33)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L2%1%0 to E0%0%1 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*((L7%1%1=>L8%1%0)*(L8%1%0=>E0%0%1)))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L8%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.dst_tfg_full_pathset.Edge: L8%1%0 => E0%0%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 127 : INT
6 : 96 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 2 : INT
9 : bvzero_ext(4, 8) : BV:130
10 : 0 : BV:1
11 : bvconcat(9, 10) : BV:131
12 : 129 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:130
15 : 8 : BV:32
16 : 0 : BV:24
17 : 255 { -1 } : BV:8
18 : bvconcat(16, 17) : BV:32
19 : bvand(15, 18) : BV:32
20 : 7 : INT
21 : bvextract(19, 20, 13) : BV:8
22 : bvextract(21, 20, 13) : BV:8
23 : 0 : BV:3
24 : bvconcat(22, 23) : BV:11
25 : bvextract(24, 20, 13) : BV:8
26 : 122 : INT
27 : bvzero_ext(25, 26) : BV:130
28 : bvlshr(14, 27) : BV:130
29 : 128 : INT
30 : 1 : INT
31 : bvextract(28, 29, 30) : BV:128
32 : bvextract(31, 5, 6) : BV:32
33 : bvadd(7, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(4, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvadd(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(4, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 31 : INT
46 : bvextract(4, 45, 13) : BV:32
47 : bvextract(31, 45, 13) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(44, 48) : BV:64
50 : bvconcat(39, 49) : BV:128
51 : bvextract(50, 5, 6) : BV:32
52 : bvzero_ext(50, 8) : BV:130
53 : bvconcat(52, 10) : BV:131
54 : bvextract(53, 12, 13) : BV:130
55 : 4 : BV:32
56 : bvand(55, 18) : BV:32
57 : bvextract(56, 20, 13) : BV:8
58 : bvextract(57, 20, 13) : BV:8
59 : bvconcat(58, 23) : BV:11
60 : bvextract(59, 20, 13) : BV:8
61 : bvzero_ext(60, 26) : BV:130
62 : bvlshr(54, 61) : BV:130
63 : bvextract(62, 29, 30) : BV:128
64 : bvextract(63, 5, 6) : BV:32
65 : bvadd(51, 64) : BV:32
66 : bvextract(50, 34, 35) : BV:32
67 : bvextract(63, 34, 35) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvconcat(65, 68) : BV:64
70 : bvextract(50, 40, 41) : BV:32
71 : bvextract(63, 40, 41) : BV:32
72 : bvadd(70, 71) : BV:32
73 : bvextract(50, 45, 13) : BV:32
74 : bvextract(63, 45, 13) : BV:32
75 : bvadd(73, 74) : BV:32
76 : bvconcat(72, 75) : BV:64
77 : bvconcat(69, 76) : BV:128
78 : bvextract(77, 40, 13) : BV:64
79 : bvextract(78, 45, 13) : BV:32
80 : 4 : INT
81 : 0 : BOOL
82 : store(1, 2, 3, 79, 80, 81) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.2.1 : BV:128
5 : 127 : INT
6 : 96 : INT
7 : bvextract(4, 5, 6) : BV:32
8 : 2 : INT
9 : bvzero_ext(4, 8) : BV:130
10 : 0 : BV:1
11 : bvconcat(9, 10) : BV:131
12 : 129 : INT
13 : 0 : INT
14 : bvextract(11, 12, 13) : BV:130
15 : 8 : BV:32
16 : 0 : BV:24
17 : 255 { -1 } : BV:8
18 : bvconcat(16, 17) : BV:32
19 : bvand(15, 18) : BV:32
20 : 7 : INT
21 : bvextract(19, 20, 13) : BV:8
22 : bvextract(21, 20, 13) : BV:8
23 : 0 : BV:3
24 : bvconcat(22, 23) : BV:11
25 : bvextract(24, 20, 13) : BV:8
26 : 122 : INT
27 : bvzero_ext(25, 26) : BV:130
28 : bvlshr(14, 27) : BV:130
29 : 128 : INT
30 : 1 : INT
31 : bvextract(28, 29, 30) : BV:128
32 : bvextract(31, 5, 6) : BV:32
33 : bvadd(7, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(4, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvadd(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(4, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 31 : INT
46 : bvextract(4, 45, 13) : BV:32
47 : bvextract(31, 45, 13) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(44, 48) : BV:64
50 : bvconcat(39, 49) : BV:128
51 : bvextract(50, 5, 6) : BV:32
52 : bvzero_ext(50, 8) : BV:130
53 : bvconcat(52, 10) : BV:131
54 : bvextract(53, 12, 13) : BV:130
55 : 4 : BV:32
56 : bvand(55, 18) : BV:32
57 : bvextract(56, 20, 13) : BV:8
58 : bvextract(57, 20, 13) : BV:8
59 : bvconcat(58, 23) : BV:11
60 : bvextract(59, 20, 13) : BV:8
61 : bvzero_ext(60, 26) : BV:130
62 : bvlshr(54, 61) : BV:130
63 : bvextract(62, 29, 30) : BV:128
64 : bvextract(63, 5, 6) : BV:32
65 : bvadd(51, 64) : BV:32
66 : bvextract(50, 34, 35) : BV:32
67 : bvextract(63, 34, 35) : BV:32
68 : bvadd(66, 67) : BV:32
69 : bvconcat(65, 68) : BV:64
70 : bvextract(50, 40, 41) : BV:32
71 : bvextract(63, 40, 41) : BV:32
72 : bvadd(70, 71) : BV:32
73 : bvextract(50, 45, 13) : BV:32
74 : bvextract(63, 45, 13) : BV:32
75 : bvadd(73, 74) : BV:32
76 : bvconcat(72, 75) : BV:64
77 : bvconcat(69, 76) : BV:128
78 : bvextract(77, 40, 13) : BV:64
79 : bvextract(78, 45, 13) : BV:32
80 : 4 : INT
81 : 0 : BOOL
82 : store(1, 2, 3, 79, 80, 81) : ARRAY[BV:32 -> BV:8]
83 : mlvar.dst.3 : MEMLABEL
84 : input.dst.exreg.0.4 : BV:32
85 : select(82, 83, 84, 80, 81) : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 2 : INT
6 : bvzero_ext(1, 5) : BV:130
7 : 0 : BV:1
8 : bvconcat(6, 7) : BV:131
9 : 129 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:130
12 : 8 : BV:32
13 : 0 : BV:24
14 : 255 { -1 } : BV:8
15 : bvconcat(13, 14) : BV:32
16 : bvand(12, 15) : BV:32
17 : 7 : INT
18 : bvextract(16, 17, 10) : BV:8
19 : bvextract(18, 17, 10) : BV:8
20 : 0 : BV:3
21 : bvconcat(19, 20) : BV:11
22 : bvextract(21, 17, 10) : BV:8
23 : 122 : INT
24 : bvzero_ext(22, 23) : BV:130
25 : bvlshr(11, 24) : BV:130
26 : 128 : INT
27 : 1 : INT
28 : bvextract(25, 26, 27) : BV:128
29 : bvextract(28, 2, 3) : BV:32
30 : bvadd(4, 29) : BV:32
31 : 95 : INT
32 : 64 : INT
33 : bvextract(1, 31, 32) : BV:32
34 : bvextract(28, 31, 32) : BV:32
35 : bvadd(33, 34) : BV:32
36 : bvconcat(30, 35) : BV:64
37 : 63 : INT
38 : 32 : INT
39 : bvextract(1, 37, 38) : BV:32
40 : bvextract(28, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : 31 : INT
43 : bvextract(1, 42, 10) : BV:32
44 : bvextract(28, 42, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(41, 45) : BV:64
47 : bvconcat(36, 46) : BV:128
48 : bvzero_ext(47, 5) : BV:130
49 : bvconcat(48, 7) : BV:131
50 : bvextract(49, 9, 10) : BV:130
51 : 4 : BV:32
52 : bvand(51, 15) : BV:32
53 : bvextract(52, 17, 10) : BV:8
54 : bvextract(53, 17, 10) : BV:8
55 : bvconcat(54, 20) : BV:11
56 : bvextract(55, 17, 10) : BV:8
57 : bvzero_ext(56, 23) : BV:130
58 : bvlshr(50, 57) : BV:130
59 : bvextract(58, 26, 27) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 2 : INT
6 : bvzero_ext(1, 5) : BV:130
7 : 0 : BV:1
8 : bvconcat(6, 7) : BV:131
9 : 129 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:130
12 : 8 : BV:32
13 : 0 : BV:24
14 : 255 { -1 } : BV:8
15 : bvconcat(13, 14) : BV:32
16 : bvand(12, 15) : BV:32
17 : 7 : INT
18 : bvextract(16, 17, 10) : BV:8
19 : bvextract(18, 17, 10) : BV:8
20 : 0 : BV:3
21 : bvconcat(19, 20) : BV:11
22 : bvextract(21, 17, 10) : BV:8
23 : 122 : INT
24 : bvzero_ext(22, 23) : BV:130
25 : bvlshr(11, 24) : BV:130
26 : 128 : INT
27 : 1 : INT
28 : bvextract(25, 26, 27) : BV:128
29 : bvextract(28, 2, 3) : BV:32
30 : bvadd(4, 29) : BV:32
31 : 95 : INT
32 : 64 : INT
33 : bvextract(1, 31, 32) : BV:32
34 : bvextract(28, 31, 32) : BV:32
35 : bvadd(33, 34) : BV:32
36 : bvconcat(30, 35) : BV:64
37 : 63 : INT
38 : 32 : INT
39 : bvextract(1, 37, 38) : BV:32
40 : bvextract(28, 37, 38) : BV:32
41 : bvadd(39, 40) : BV:32
42 : 31 : INT
43 : bvextract(1, 42, 10) : BV:32
44 : bvextract(28, 42, 10) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvconcat(41, 45) : BV:64
47 : bvconcat(36, 46) : BV:128
48 : bvextract(47, 2, 3) : BV:32
49 : bvzero_ext(47, 5) : BV:130
50 : bvconcat(49, 7) : BV:131
51 : bvextract(50, 9, 10) : BV:130
52 : 4 : BV:32
53 : bvand(52, 15) : BV:32
54 : bvextract(53, 17, 10) : BV:8
55 : bvextract(54, 17, 10) : BV:8
56 : bvconcat(55, 20) : BV:11
57 : bvextract(56, 17, 10) : BV:8
58 : bvzero_ext(57, 23) : BV:130
59 : bvlshr(51, 58) : BV:130
60 : bvextract(59, 26, 27) : BV:128
61 : bvextract(60, 2, 3) : BV:32
62 : bvadd(48, 61) : BV:32
63 : bvextract(47, 31, 32) : BV:32
64 : bvextract(60, 31, 32) : BV:32
65 : bvadd(63, 64) : BV:32
66 : bvconcat(62, 65) : BV:64
67 : bvextract(47, 37, 38) : BV:32
68 : bvextract(60, 37, 38) : BV:32
69 : bvadd(67, 68) : BV:32
70 : bvextract(47, 42, 10) : BV:32
71 : bvextract(60, 42, 10) : BV:32
72 : bvadd(70, 71) : BV:32
73 : bvconcat(69, 72) : BV:64
74 : bvconcat(66, 73) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)*(te_comment_not_implemented*(te_comment_not_implemented*te_comment_not_implemented)))
=Edge.dst_tfg_full_pathset done

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicates at E0%0%1_E0%0%1
=predicates at E0%0%1_E0%0%1 predicate# 0
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : retaddr_const : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 2
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicates at E0%0%1_E0%0%1 done
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in vdotr

=Alias analysis results in vdotr
=Alias analysis result in vdotr at L0%0%1_L0%0%1
=Alias analysis result in vdotr at Lfor.body%1%1_L2%1%0
=Alias analysis result in vdotr at E0%0%1_E0%0%1

=Liveness in vdotr
=live locs at L0%0%1_L0%0%1

=live locs at Lfor.body%1%1_L2%1%0

=live locs at E0%0%1_E0%0%1


=Available expressions in vdotr

=sprel_maps in vdotr
=sprel_map at L0%0%1_L0%0%1 in vdotr
=sprel_map at Lfor.body%1%1_L2%1%0 in vdotr
=sprel_map at E0%0%1_E0%0%1 in vdotr
=graph_with_aliasing_done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
C_SYMBOL3 : temp : 4 : 4 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.3.0_begin : BV:32
2 : memlabel-mem-symbol.3.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 4 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.2.0_begin : BV:32
11 : memlabel-mem-symbol.2.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : 128000 : BV:32
15 : bvadd(14, 5) : BV:32
16 : bvadd(10, 15) : BV:32
17 : eq(11, 16) : BOOL
18 : and(13, 17) : BOOL
19 : memlabel-mem-symbol.1.0_begin : BV:32
20 : memlabel-mem-symbol.1.0_end : BV:32
21 : bvule(19, 20) : BOOL
22 : and(18, 21) : BOOL
23 : bvadd(19, 15) : BV:32
24 : eq(20, 23) : BOOL
25 : and(22, 24) : BOOL
26 : memlabel-mem-esp_begin : BV:32
27 : memlabel-mem-esp_end : BV:32
28 : bvule(26, 27) : BOOL
29 : and(25, 28) : BOOL
30 : stack.size : BV:32
31 : bvadd(30, 5) : BV:32
32 : bvadd(26, 31) : BV:32
33 : eq(27, 32) : BOOL
34 : and(29, 33) : BOOL
35 : bvuge(1, 10) : BOOL
36 : bvule(1, 11) : BOOL
37 : and(35, 36) : BOOL
38 : bvuge(2, 10) : BOOL
39 : bvule(2, 11) : BOOL
40 : and(38, 39) : BOOL
41 : not(40) : BOOL
42 : andnot1(37, 41) : BOOL
43 : bvuge(1, 19) : BOOL
44 : bvule(1, 20) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(2, 19) : BOOL
47 : bvule(2, 20) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(1, 26) : BOOL
53 : bvule(1, 27) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(2, 26) : BOOL
56 : bvule(2, 27) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(10, 1) : BOOL
62 : bvule(10, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(11, 1) : BOOL
65 : bvule(11, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(10, 19) : BOOL
71 : bvule(10, 20) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(11, 19) : BOOL
74 : bvule(11, 20) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : bvuge(10, 26) : BOOL
80 : bvule(10, 27) : BOOL
81 : and(79, 80) : BOOL
82 : bvuge(11, 26) : BOOL
83 : bvule(11, 27) : BOOL
84 : and(82, 83) : BOOL
85 : not(84) : BOOL
86 : andnot1(81, 85) : BOOL
87 : and(78, 86) : BOOL
88 : bvuge(19, 1) : BOOL
89 : bvule(19, 2) : BOOL
90 : and(88, 89) : BOOL
91 : bvuge(20, 1) : BOOL
92 : bvule(20, 2) : BOOL
93 : and(91, 92) : BOOL
94 : not(93) : BOOL
95 : andnot1(90, 94) : BOOL
96 : and(87, 95) : BOOL
97 : bvuge(19, 10) : BOOL
98 : bvule(19, 11) : BOOL
99 : and(97, 98) : BOOL
100 : bvuge(20, 10) : BOOL
101 : bvule(20, 11) : BOOL
102 : and(100, 101) : BOOL
103 : not(102) : BOOL
104 : andnot1(99, 103) : BOOL
105 : and(96, 104) : BOOL
106 : bvuge(19, 26) : BOOL
107 : bvule(19, 27) : BOOL
108 : and(106, 107) : BOOL
109 : bvuge(20, 26) : BOOL
110 : bvule(20, 27) : BOOL
111 : and(109, 110) : BOOL
112 : not(111) : BOOL
113 : andnot1(108, 112) : BOOL
114 : and(105, 113) : BOOL
115 : bvuge(26, 1) : BOOL
116 : bvule(26, 2) : BOOL
117 : and(115, 116) : BOOL
118 : bvuge(27, 1) : BOOL
119 : bvule(27, 2) : BOOL
120 : and(118, 119) : BOOL
121 : not(120) : BOOL
122 : andnot1(117, 121) : BOOL
123 : and(114, 122) : BOOL
124 : bvuge(26, 10) : BOOL
125 : bvule(26, 11) : BOOL
126 : and(124, 125) : BOOL
127 : bvuge(27, 10) : BOOL
128 : bvule(27, 11) : BOOL
129 : and(127, 128) : BOOL
130 : not(129) : BOOL
131 : andnot1(126, 130) : BOOL
132 : and(123, 131) : BOOL
133 : bvuge(26, 19) : BOOL
134 : bvule(26, 20) : BOOL
135 : and(133, 134) : BOOL
136 : bvuge(27, 19) : BOOL
137 : bvule(27, 20) : BOOL
138 : and(136, 137) : BOOL
139 : not(138) : BOOL
140 : andnot1(135, 139) : BOOL
141 : and(132, 140) : BOOL
142 : and(34, 141) : BOOL
143 : symbol.3 : BV:32
144 : 3 : BV:32
145 : bvand(143, 144) : BV:32
146 : 0 : BV:32
147 : eq(145, 146) : BOOL
148 : and(142, 147) : BOOL
149 : symbol.2 : BV:32
150 : 15 : BV:32
151 : bvand(149, 150) : BV:32
152 : eq(151, 146) : BOOL
153 : and(148, 152) : BOOL
154 : symbol.1 : BV:32
155 : bvand(154, 150) : BV:32
156 : eq(155, 146) : BOOL
157 : and(153, 156) : BOOL
158 : eq(154, 19) : BOOL
159 : eq(149, 10) : BOOL
160 : and(158, 159) : BOOL
161 : eq(143, 1) : BOOL
162 : and(160, 161) : BOOL
163 : and(157, 162) : BOOL
164 : input_stack_pointer_const : BV:32
165 : bvule(26, 164) : BOOL
166 : bvule(164, 27) : BOOL
167 : and(165, 166) : BOOL
168 : bvadd(164, 144) : BV:32
169 : eq(168, 27) : BOOL
170 : and(167, 169) : BOOL
171 : and(163, 170) : BOOL
172 : 4294963200 { -4096 } : BV:32
173 : bvand(26, 172) : BV:32
174 : eq(173, 26) : BOOL
175 : 1 : BV:32
176 : bvadd(27, 175) : BV:32
177 : bvand(176, 172) : BV:32
178 : eq(177, 176) : BOOL
179 : and(174, 178) : BOOL
180 : and(171, 179) : BOOL
181 : dst_symbol_addr.1 : BV:32
182 : eq(154, 181) : BOOL
183 : dst_symbol_addr.2 : BV:32
184 : eq(149, 183) : BOOL
185 : and(182, 184) : BOOL
186 : dst_symbol_addr.3 : BV:32
187 : eq(143, 186) : BOOL
188 : and(185, 187) : BOOL
189 : and(180, 188) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 278595584 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 302514176 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : symbol.3 : BV:32
9 : 318767100 : BV:32
10 : eq(8, 9) : BOOL
11 : and(7, 10) : BOOL
12 : dst_symbol_addr.1 : BV:32
13 : eq(12, 2) : BOOL
14 : and(11, 13) : BOOL
15 : dst_symbol_addr.2 : BV:32
16 : eq(15, 5) : BOOL
17 : and(14, 16) : BOOL
18 : dst_symbol_addr.3 : BV:32
19 : eq(18, 9) : BOOL
20 : and(17, 19) : BOOL
21 : input_stack_pointer_const : BV:32
22 : 3759038460 { -535928836 } : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.3.0_begin : BV:32
26 : eq(25, 9) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.3.0_end : BV:32
29 : 318767103 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-symbol.2.0_begin : BV:32
33 : eq(32, 5) : BOOL
34 : and(31, 33) : BOOL
35 : memlabel-mem-symbol.2.0_end : BV:32
36 : 302642175 : BV:32
37 : eq(35, 36) : BOOL
38 : and(34, 37) : BOOL
39 : memlabel-mem-symbol.1.0_begin : BV:32
40 : eq(39, 2) : BOOL
41 : and(38, 40) : BOOL
42 : memlabel-mem-symbol.1.0_end : BV:32
43 : 278723583 : BV:32
44 : eq(42, 43) : BOOL
45 : and(41, 44) : BOOL
46 : memlabel-mem-esp_begin : BV:32
47 : 379260928 : BV:32
48 : eq(46, 47) : BOOL
49 : and(45, 48) : BOOL
50 : memlabel-mem-esp_end : BV:32
51 : 3759038463 { -535928833 } : BV:32
52 : eq(50, 51) : BOOL
53 : and(49, 52) : BOOL
54 : stack.size : BV:32
55 : 3379777536 { -915189760 } : BV:32
56 : eq(54, 55) : BOOL
57 : and(53, 56) : BOOL
=use_concrete_assertion : 0
=Memlabel assertions done
=counterexamples at pc L0%0%1_L0%0%1
=pc L0%0%1_L0%0%1 nodece 0
=pc L0%0%1_L0%0%1 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 0 nodece_path
=pc L0%0%1_L0%0%1 nodece 0 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 0 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1
=pc L0%0%1_L0%0%1 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1 nodece_path
=pc L0%0%1_L0%0%1 nodece 1 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 1 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2
=pc L0%0%1_L0%0%1 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2 nodece_path
=pc L0%0%1_L0%0%1 nodece 2 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 2 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3
=pc L0%0%1_L0%0%1 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 318767103 ) -> 217, ( 318767100 ) -> 81, ( 318767102 ) -> 65, ( 278595592 ) -> 2, ( 278595593 ) -> 170, ( 278595594 ) -> 120, ( 278595595 ) -> 48, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 318767103 ) -> 217, ( 318767100 ) -> 81, ( 318767102 ) -> 65, ( 278595592 ) -> 2, ( 278595593 ) -> 170, ( 278595594 ) -> 120, ( 278595595 ) -> 48, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 318767103 ) -> 217, ( 318767100 ) -> 81, ( 318767102 ) -> 65, ( 278595592 ) -> 2, ( 278595593 ) -> 170, ( 278595594 ) -> 120, ( 278595595 ) -> 48, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 3644915793 { -650051503 } : BV:32
=unaliased_memslot.1
1 : 813214210 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1047372231
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3 nodece_path
=pc L0%0%1_L0%0%1 nodece 3 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 3 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 318767103 ) -> 217, ( 318767100 ) -> 81, ( 318767102 ) -> 65, ( 278595592 ) -> 2, ( 278595593 ) -> 170, ( 278595594 ) -> 120, ( 278595595 ) -> 48, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 318767103 ) -> 217, ( 318767100 ) -> 81, ( 318767102 ) -> 65, ( 278595592 ) -> 2, ( 278595593 ) -> 170, ( 278595594 ) -> 120, ( 278595595 ) -> 48, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 318767103 ) -> 217, ( 318767100 ) -> 81, ( 318767102 ) -> 65, ( 278595592 ) -> 2, ( 278595593 ) -> 170, ( 278595594 ) -> 120, ( 278595595 ) -> 48, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 3644915793 { -650051503 } : BV:32
=unaliased_memslot.1
1 : 813214210 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1047372231
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4
=pc L0%0%1_L0%0%1 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 318767103 ) -> 255, ( 318767100 ) -> 255, ( 318767101 ) -> 255, ( 318767102 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 318767103 ) -> 255, ( 318767100 ) -> 255, ( 318767101 ) -> 255, ( 318767102 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 318767103 ) -> 255, ( 318767100 ) -> 255, ( 318767101 ) -> 255, ( 318767102 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1707746139
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4 nodece_path
=pc L0%0%1_L0%0%1 nodece 4 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 4 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 318767103 ) -> 255, ( 318767100 ) -> 255, ( 318767101 ) -> 255, ( 318767102 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 318767103 ) -> 255, ( 318767100 ) -> 255, ( 318767101 ) -> 255, ( 318767102 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 318767103 ) -> 255, ( 318767100 ) -> 255, ( 318767101 ) -> 255, ( 318767102 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1707746139
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5
=pc L0%0%1_L0%0%1 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 318767103 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 318767103 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 318767103 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1372261796
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5 nodece_path
=pc L0%0%1_L0%0%1 nodece 5 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 5 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 318767103 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 318767103 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 318767103 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1372261796
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6
=pc L0%0%1_L0%0%1 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595584 ) -> 129, ( 278595585 ) -> 1, ( 278595586 ) -> 3, ( 278595587 ) -> 128, ( 278595588 ) -> 6, ( 278595589 ) -> 8, ( 278595590 ) -> 140, ( 278595591 ) -> 21, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595584 ) -> 129, ( 278595585 ) -> 1, ( 278595586 ) -> 3, ( 278595587 ) -> 128, ( 278595588 ) -> 6, ( 278595589 ) -> 8, ( 278595590 ) -> 140, ( 278595591 ) -> 21, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595584 ) -> 129, ( 278595585 ) -> 1, ( 278595586 ) -> 3, ( 278595587 ) -> 128, ( 278595588 ) -> 6, ( 278595589 ) -> 8, ( 278595590 ) -> 140, ( 278595591 ) -> 21, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 361498630 : BV:32
=unaliased_memslot.1
1 : 2147680641 { -2147286655 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1502781486
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6 nodece_path
=pc L0%0%1_L0%0%1 nodece 6 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 6 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595584 ) -> 129, ( 278595585 ) -> 1, ( 278595586 ) -> 3, ( 278595587 ) -> 128, ( 278595588 ) -> 6, ( 278595589 ) -> 8, ( 278595590 ) -> 140, ( 278595591 ) -> 21, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595584 ) -> 129, ( 278595585 ) -> 1, ( 278595586 ) -> 3, ( 278595587 ) -> 128, ( 278595588 ) -> 6, ( 278595589 ) -> 8, ( 278595590 ) -> 140, ( 278595591 ) -> 21, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595584 ) -> 129, ( 278595585 ) -> 1, ( 278595586 ) -> 3, ( 278595587 ) -> 128, ( 278595588 ) -> 6, ( 278595589 ) -> 8, ( 278595590 ) -> 140, ( 278595591 ) -> 21, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 361498630 : BV:32
=unaliased_memslot.1
1 : 2147680641 { -2147286655 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1502781486
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7
=pc L0%0%1_L0%0%1 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 255, ( 278595589 ) -> 255, ( 278595590 ) -> 255, ( 278595591 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 255, ( 278595589 ) -> 255, ( 278595590 ) -> 255, ( 278595591 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 255, ( 278595589 ) -> 255, ( 278595590 ) -> 255, ( 278595591 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
703550253
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7 nodece_path
=pc L0%0%1_L0%0%1 nodece 7 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 7 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 255, ( 278595589 ) -> 255, ( 278595590 ) -> 255, ( 278595591 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 255, ( 278595589 ) -> 255, ( 278595590 ) -> 255, ( 278595591 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 255, ( 278595589 ) -> 255, ( 278595590 ) -> 255, ( 278595591 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
703550253
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8
=pc L0%0%1_L0%0%1 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595591 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595591 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595591 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1909850543
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8 nodece_path
=pc L0%0%1_L0%0%1 nodece 8 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 8 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595591 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595591 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595591 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1909850543
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9
=pc L0%0%1_L0%0%1 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1510080967
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9 nodece_path
=pc L0%0%1_L0%0%1 nodece 9 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 9 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1510080967
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10
=pc L0%0%1_L0%0%1 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514176 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514176 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514176 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
714880226
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10 nodece_path
=pc L0%0%1_L0%0%1 nodece 10 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 10 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514176 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514176 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514176 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
714880226
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11
=pc L0%0%1_L0%0%1 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
460686763
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11 nodece_path
=pc L0%0%1_L0%0%1 nodece 11 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 11 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
460686763
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12
=pc L0%0%1_L0%0%1 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514176 ) -> 13, ( 278595584 ) -> 1, ( 302514184 ) -> 216, ( 302514185 ) -> 23, ( 302514186 ) -> 43, ( 302514187 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514176 ) -> 13, ( 278595584 ) -> 1, ( 302514184 ) -> 216, ( 302514185 ) -> 23, ( 302514186 ) -> 43, ( 302514187 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514176 ) -> 13, ( 278595584 ) -> 1, ( 302514184 ) -> 216, ( 302514185 ) -> 23, ( 302514186 ) -> 43, ( 302514187 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 13 : BV:32
=unaliased_memslot.2
1 : 36378584 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1597141723
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12 nodece_path
=pc L0%0%1_L0%0%1 nodece 12 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 12 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514176 ) -> 13, ( 278595584 ) -> 1, ( 302514184 ) -> 216, ( 302514185 ) -> 23, ( 302514186 ) -> 43, ( 302514187 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514176 ) -> 13, ( 278595584 ) -> 1, ( 302514184 ) -> 216, ( 302514185 ) -> 23, ( 302514186 ) -> 43, ( 302514187 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514176 ) -> 13, ( 278595584 ) -> 1, ( 302514184 ) -> 216, ( 302514185 ) -> 23, ( 302514186 ) -> 43, ( 302514187 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 13 : BV:32
=unaliased_memslot.2
1 : 36378584 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1597141723
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13
=pc L0%0%1_L0%0%1 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595584 ) -> 1, ( 302514184 ) -> 255, ( 302514185 ) -> 255, ( 302514186 ) -> 255, ( 302514187 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595584 ) -> 1, ( 302514184 ) -> 255, ( 302514185 ) -> 255, ( 302514186 ) -> 255, ( 302514187 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595584 ) -> 1, ( 302514184 ) -> 255, ( 302514185 ) -> 255, ( 302514186 ) -> 255, ( 302514187 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1981208324
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13 nodece_path
=pc L0%0%1_L0%0%1 nodece 13 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 13 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595584 ) -> 1, ( 302514184 ) -> 255, ( 302514185 ) -> 255, ( 302514186 ) -> 255, ( 302514187 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595584 ) -> 1, ( 302514184 ) -> 255, ( 302514185 ) -> 255, ( 302514186 ) -> 255, ( 302514187 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595584 ) -> 1, ( 302514184 ) -> 255, ( 302514185 ) -> 255, ( 302514186 ) -> 255, ( 302514187 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1981208324
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14
=pc L0%0%1_L0%0%1 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595584 ) -> 1, ( 302514179 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595584 ) -> 1, ( 302514179 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595584 ) -> 1, ( 302514179 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
207026272
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14 nodece_path
=pc L0%0%1_L0%0%1 nodece 14 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 14 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595584 ) -> 1, ( 302514179 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595584 ) -> 1, ( 302514179 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595584 ) -> 1, ( 302514179 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
207026272
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15
=pc L0%0%1_L0%0%1 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514188 ) -> 255, ( 302514189 ) -> 255, ( 302514190 ) -> 255, ( 302514191 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514188 ) -> 255, ( 302514189 ) -> 255, ( 302514190 ) -> 255, ( 302514191 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514188 ) -> 255, ( 302514189 ) -> 255, ( 302514190 ) -> 255, ( 302514191 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1862292122
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15 nodece_path
=pc L0%0%1_L0%0%1 nodece 15 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 15 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514188 ) -> 255, ( 302514189 ) -> 255, ( 302514190 ) -> 255, ( 302514191 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514188 ) -> 255, ( 302514189 ) -> 255, ( 302514190 ) -> 255, ( 302514191 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514188 ) -> 255, ( 302514189 ) -> 255, ( 302514190 ) -> 255, ( 302514191 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1862292122
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16
=pc L0%0%1_L0%0%1 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595596 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 255 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
134591281
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16 nodece_path
=pc L0%0%1_L0%0%1 nodece 16 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 16 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595596 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 255 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
134591281
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17
=pc L0%0%1_L0%0%1 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514191 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514191 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514191 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
101323875
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17 nodece_path
=pc L0%0%1_L0%0%1 nodece 17 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 17 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514191 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514191 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514191 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
101323875
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18
=pc L0%0%1_L0%0%1 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2033669086
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18 nodece_path
=pc L0%0%1_L0%0%1 nodece 18 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 18 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2033669086
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19
=pc L0%0%1_L0%0%1 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
476564285
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19 nodece_path
=pc L0%0%1_L0%0%1 nodece 19 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 19 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
476564285
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20
=pc L0%0%1_L0%0%1 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 97)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 97)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1225720666
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20 nodece_path
=pc L0%0%1_L0%0%1 nodece 20 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 20 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 97)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 97)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1225720666
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21
=pc L0%0%1_L0%0%1 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1012836610
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21 nodece_path
=pc L0%0%1_L0%0%1 nodece 21 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 21 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1012836610
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22
=pc L0%0%1_L0%0%1 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
627992393
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22 nodece_path
=pc L0%0%1_L0%0%1 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 22 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
627992393
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23
=pc L0%0%1_L0%0%1 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1937820969
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23 nodece_path
=pc L0%0%1_L0%0%1 nodece 23 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 23 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1937820969
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24
=pc L0%0%1_L0%0%1 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
12548159
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24 nodece_path
=pc L0%0%1_L0%0%1 nodece 24 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 24 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
12548159
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25
=pc L0%0%1_L0%0%1 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
576994985
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25 nodece_path
=pc L0%0%1_L0%0%1 nodece 25 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 25 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
576994985
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26
=pc L0%0%1_L0%0%1 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 176)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 176)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2174234549
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26 nodece_path
=pc L0%0%1_L0%0%1 nodece 26 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 26 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 176)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 176)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2174234549
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27
=pc L0%0%1_L0%0%1 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
900104667
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27 nodece_path
=pc L0%0%1_L0%0%1 nodece 27 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 27 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
900104667
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28
=pc L0%0%1_L0%0%1 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
394709364
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28 nodece_path
=pc L0%0%1_L0%0%1 nodece 28 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 28 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
394709364
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29
=pc L0%0%1_L0%0%1 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 29)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 29)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2906340169
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29 nodece_path
=pc L0%0%1_L0%0%1 nodece 29 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 29 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 29)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 29)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2906340169
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30
=pc L0%0%1_L0%0%1 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
929588156
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30 nodece_path
=pc L0%0%1_L0%0%1 nodece 30 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 30 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
929588156
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31
=pc L0%0%1_L0%0%1 nodece 31 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
18400960
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31 nodece_path
=pc L0%0%1_L0%0%1 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 31 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
18400960
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32
=pc L0%0%1_L0%0%1 nodece 32 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 93 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 93 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
795073853
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32 nodece_path
=pc L0%0%1_L0%0%1 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 32 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 93 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 93 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
795073853
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33
=pc L0%0%1_L0%0%1 nodece 33 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 9 : BV:32
=unaliased_memslot.3
1 : 2 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1490549207
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33 nodece_path
=pc L0%0%1_L0%0%1 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 33 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 9 : BV:32
=unaliased_memslot.3
1 : 2 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1490549207
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34
=pc L0%0%1_L0%0%1 nodece 34 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.5
1 : 16843039 : BV:32
=unaliased_memslot.3
1 : 16843008 : BV:32
=unaliased_memslot.4
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
38649718
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34 nodece_path
=pc L0%0%1_L0%0%1 nodece 34 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 34 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.5
1 : 16843039 : BV:32
=unaliased_memslot.3
1 : 16843008 : BV:32
=unaliased_memslot.4
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
38649718
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35
=pc L0%0%1_L0%0%1 nodece 35 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 1, ( 302514180 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 1, ( 302514180 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 1, ( 302514180 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 16 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1396005216
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35 nodece_path
=pc L0%0%1_L0%0%1 nodece 35 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 35 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 1, ( 302514180 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 1, ( 302514180 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 1, ( 302514180 ) -> 16, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 16 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1396005216
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36
=pc L0%0%1_L0%0%1 nodece 36 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
213952386
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36 nodece_path
=pc L0%0%1_L0%0%1 nodece 36 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 36 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
213952386
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37
=pc L0%0%1_L0%0%1 nodece 37 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2042010569
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37 nodece_path
=pc L0%0%1_L0%0%1 nodece 37 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 37 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2042010569
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38
=pc L0%0%1_L0%0%1 nodece 38 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 16843008 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
695258232
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38 nodece_path
=pc L0%0%1_L0%0%1 nodece 38 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 38 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 16843008 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
695258232
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39
=pc L0%0%1_L0%0%1 nodece 39 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
245240853
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39 nodece_path
=pc L0%0%1_L0%0%1 nodece 39 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 39 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
245240853
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40
=pc L0%0%1_L0%0%1 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595596 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.3
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
100669
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40 nodece_path
=pc L0%0%1_L0%0%1 nodece 40 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 40 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595596 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.3
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
100669
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41
=pc L0%0%1_L0%0%1 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
332702450
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41 nodece_path
=pc L0%0%1_L0%0%1 nodece 41 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 41 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
332702450
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42
=pc L0%0%1_L0%0%1 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
495592431
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42 nodece_path
=pc L0%0%1_L0%0%1 nodece 42 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 42 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
495592431
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43
=pc L0%0%1_L0%0%1 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 385875964 : BV:32
=symbol.1
1 : 42339344 : BV:32
=symbol.2
1 : 83827728 : BV:32
=dst_symbol_addr.1
1 : 42339344 : BV:32
=dst_symbol_addr.2
1 : 83827728 : BV:32
=dst_symbol_addr.3
1 : 385875964 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294959100 { -8196 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 83827728 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 42339344 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 83955727 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 385875964 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 42467343 : BV:32
=memlabel-mem-esp_begin
1 : 469762048 : BV:32
=stack.size
1 : 3825197056 { -469770240 } : BV:32
=memlabel-mem-esp_end
1 : 4294959103 { -8193 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 385875967 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1737594374
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43 nodece_path
=pc L0%0%1_L0%0%1 nodece 43 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 43 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 385875964 : BV:32
=symbol.1
1 : 42339344 : BV:32
=symbol.2
1 : 83827728 : BV:32
=dst_symbol_addr.1
1 : 42339344 : BV:32
=dst_symbol_addr.2
1 : 83827728 : BV:32
=dst_symbol_addr.3
1 : 385875964 : BV:32
=input_stack_pointer_const
1 : 4294959100 { -8196 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 83827728 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 42339344 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 83955727 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 385875964 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 42467343 : BV:32
=memlabel-mem-esp_begin
1 : 469762048 : BV:32
=stack.size
1 : 3825197056 { -469770240 } : BV:32
=memlabel-mem-esp_end
1 : 4294959103 { -8193 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 385875967 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1737594374
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44
=pc L0%0%1_L0%0%1 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2470542159
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44 nodece_path
=pc L0%0%1_L0%0%1 nodece 44 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 44 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2470542159
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45
=pc L0%0%1_L0%0%1 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 751793756 : BV:32
=symbol.1
1 : 3705552752 { -589414544 } : BV:32
=symbol.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.1
1 : 3705552752 { -589414544 } : BV:32
=dst_symbol_addr.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.3
1 : 751793756 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2018271228 : BV:32
=input.src.llvm-mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3959320960 { -335646336 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3705552752 { -589414544 } : BV:32
=input.dst.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3959448959 { -335518337 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 751793756 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3705680751 { -589286545 } : BV:32
=memlabel-mem-esp_begin
1 : 1011781632 : BV:32
=stack.size
1 : 1006489600 : BV:32
=memlabel-mem-esp_end
1 : 2018271231 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 751793759 : BV:32
=unaliased_memslot.0
1 : 4211148413 { -83818883 } : BV:32
=unaliased_memslot.1
1 : 4166222047 { -128745249 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712665044
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45 nodece_path
=pc L0%0%1_L0%0%1 nodece 45 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 45 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 751793756 : BV:32
=symbol.1
1 : 3705552752 { -589414544 } : BV:32
=symbol.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.1
1 : 3705552752 { -589414544 } : BV:32
=dst_symbol_addr.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.3
1 : 751793756 : BV:32
=input_stack_pointer_const
1 : 2018271228 : BV:32
=input.src.llvm-mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3959320960 { -335646336 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3705552752 { -589414544 } : BV:32
=input.dst.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3959448959 { -335518337 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 751793756 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3705680751 { -589286545 } : BV:32
=memlabel-mem-esp_begin
1 : 1011781632 : BV:32
=stack.size
1 : 1006489600 : BV:32
=memlabel-mem-esp_end
1 : 2018271231 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 751793759 : BV:32
=unaliased_memslot.0
1 : 4211148413 { -83818883 } : BV:32
=unaliased_memslot.1
1 : 4166222047 { -128745249 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712665044
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46
=pc L0%0%1_L0%0%1 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294932448 { -34848 } : BV:32
=symbol.1
1 : 1476231648 : BV:32
=symbol.2
1 : 1761478608 : BV:32
=dst_symbol_addr.1
1 : 1476231648 : BV:32
=dst_symbol_addr.2
1 : 1761478608 : BV:32
=dst_symbol_addr.3
1 : 4294932448 { -34848 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 872382460 : BV:32
=input.src.llvm-mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1761478608 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1476231648 : BV:32
=input.dst.mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1761606607 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294932448 { -34848 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1476359647 : BV:32
=memlabel-mem-esp_begin
1 : 33566720 : BV:32
=stack.size
1 : 838815744 : BV:32
=memlabel-mem-esp_end
1 : 872382463 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294932451 { -34845 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1752032933
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46 nodece_path
=pc L0%0%1_L0%0%1 nodece 46 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 46 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294932448 { -34848 } : BV:32
=symbol.1
1 : 1476231648 : BV:32
=symbol.2
1 : 1761478608 : BV:32
=dst_symbol_addr.1
1 : 1476231648 : BV:32
=dst_symbol_addr.2
1 : 1761478608 : BV:32
=dst_symbol_addr.3
1 : 4294932448 { -34848 } : BV:32
=input_stack_pointer_const
1 : 872382460 : BV:32
=input.src.llvm-mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1761478608 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1476231648 : BV:32
=input.dst.mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1761606607 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294932448 { -34848 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1476359647 : BV:32
=memlabel-mem-esp_begin
1 : 33566720 : BV:32
=stack.size
1 : 838815744 : BV:32
=memlabel-mem-esp_end
1 : 872382463 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294932451 { -34845 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1752032933
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47
=pc L0%0%1_L0%0%1 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1870073347 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1870073347 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 1870073347 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 67108864 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1917372618
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47 nodece_path
=pc L0%0%1_L0%0%1 nodece 47 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 47 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1870073347 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1870073347 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 1870073347 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 67108864 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1917372618
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48
=pc L0%0%1_L0%0%1 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147581392 { -2147385904 } : BV:32
=symbol.1
1 : 1073711568 : BV:32
=symbol.2
1 : 2147382000 : BV:32
=dst_symbol_addr.1
1 : 1073711568 : BV:32
=dst_symbol_addr.2
1 : 2147382000 : BV:32
=dst_symbol_addr.3
1 : 2147581392 { -2147385904 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2147382000 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073711568 : BV:32
=input.dst.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147509999 { -2147457297 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147581392 { -2147385904 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073839567 : BV:32
=memlabel-mem-esp_begin
1 : 2148605952 { -2146361344 } : BV:32
=stack.size
1 : 2146357248 : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147581395 { -2147385901 } : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1448448708
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48 nodece_path
=pc L0%0%1_L0%0%1 nodece 48 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 48 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147581392 { -2147385904 } : BV:32
=symbol.1
1 : 1073711568 : BV:32
=symbol.2
1 : 2147382000 : BV:32
=dst_symbol_addr.1
1 : 1073711568 : BV:32
=dst_symbol_addr.2
1 : 2147382000 : BV:32
=dst_symbol_addr.3
1 : 2147581392 { -2147385904 } : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2147382000 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073711568 : BV:32
=input.dst.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147509999 { -2147457297 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147581392 { -2147385904 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073839567 : BV:32
=memlabel-mem-esp_begin
1 : 2148605952 { -2146361344 } : BV:32
=stack.size
1 : 2146357248 : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147581395 { -2147385901 } : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1448448708
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49
=pc L0%0%1_L0%0%1 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1618973847
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49 nodece_path
=pc L0%0%1_L0%0%1 nodece 49 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 49 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1618973847
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50
=pc L0%0%1_L0%0%1 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
90568974
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50 nodece_path
=pc L0%0%1_L0%0%1 nodece 50 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 50 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
90568974
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51
=pc L0%0%1_L0%0%1 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1123548156 : BV:32
=symbol.1
1 : 1258200160 : BV:32
=symbol.2
1 : 1694497472 : BV:32
=dst_symbol_addr.1
1 : 1258200160 : BV:32
=dst_symbol_addr.2
1 : 1694497472 : BV:32
=dst_symbol_addr.3
1 : 1123548156 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 478216188 : BV:32
=input.src.llvm-mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1694497472 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1258200160 : BV:32
=input.dst.mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1694625471 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1123548156 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1258328159 : BV:32
=memlabel-mem-esp_begin
1 : 150532096 : BV:32
=stack.size
1 : 327684096 : BV:32
=memlabel-mem-esp_end
1 : 478216191 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1123548159 : BV:32
=unaliased_memslot.0
1 : 18350757 : BV:32
=unaliased_memslot.1
1 : 2822459327 { -1472507969 } : BV:32
=unaliased_memslot.2
1 : 1801453625 : BV:32
=unaliased_memslot.3
1 : 737824815 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1273860542
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51 nodece_path
=pc L0%0%1_L0%0%1 nodece 51 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 51 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1123548156 : BV:32
=symbol.1
1 : 1258200160 : BV:32
=symbol.2
1 : 1694497472 : BV:32
=dst_symbol_addr.1
1 : 1258200160 : BV:32
=dst_symbol_addr.2
1 : 1694497472 : BV:32
=dst_symbol_addr.3
1 : 1123548156 : BV:32
=input_stack_pointer_const
1 : 478216188 : BV:32
=input.src.llvm-mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1694497472 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1258200160 : BV:32
=input.dst.mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1694625471 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1123548156 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1258328159 : BV:32
=memlabel-mem-esp_begin
1 : 150532096 : BV:32
=stack.size
1 : 327684096 : BV:32
=memlabel-mem-esp_end
1 : 478216191 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1123548159 : BV:32
=unaliased_memslot.0
1 : 18350757 : BV:32
=unaliased_memslot.1
1 : 2822459327 { -1472507969 } : BV:32
=unaliased_memslot.2
1 : 1801453625 : BV:32
=unaliased_memslot.3
1 : 737824815 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1273860542
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52
=pc L0%0%1_L0%0%1 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3842498816 { -452468480 } : BV:32
=symbol.1
1 : 1258614016 : BV:32
=symbol.2
1 : 1815446528 : BV:32
=dst_symbol_addr.1
1 : 1258614016 : BV:32
=dst_symbol_addr.2
1 : 1815446528 : BV:32
=dst_symbol_addr.3
1 : 3842498816 { -452468480 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073741820 : BV:32
=input.src.llvm-mem
1 : (( 1258614028 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1258614028 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1815446528 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1258614016 : BV:32
=input.dst.mem
1 : (( 1258614028 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1815574527 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3842498816 { -452468480 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1258742015 : BV:32
=memlabel-mem-esp_begin
1 : 360402944 : BV:32
=stack.size
1 : 713338880 : BV:32
=memlabel-mem-esp_end
1 : 1073741823 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3842498819 { -452468477 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1551030183
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52 nodece_path
=pc L0%0%1_L0%0%1 nodece 52 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 52 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3842498816 { -452468480 } : BV:32
=symbol.1
1 : 1258614016 : BV:32
=symbol.2
1 : 1815446528 : BV:32
=dst_symbol_addr.1
1 : 1258614016 : BV:32
=dst_symbol_addr.2
1 : 1815446528 : BV:32
=dst_symbol_addr.3
1 : 3842498816 { -452468480 } : BV:32
=input_stack_pointer_const
1 : 1073741820 : BV:32
=input.src.llvm-mem
1 : (( 1258614028 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1258614028 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1815446528 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1258614016 : BV:32
=input.dst.mem
1 : (( 1258614028 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1815574527 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3842498816 { -452468480 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1258742015 : BV:32
=memlabel-mem-esp_begin
1 : 360402944 : BV:32
=stack.size
1 : 713338880 : BV:32
=memlabel-mem-esp_end
1 : 1073741823 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3842498819 { -452468477 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1551030183
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53
=pc L0%0%1_L0%0%1 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1870073347 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1870073347 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 1870073347 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 16777216 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
259299706
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53 nodece_path
=pc L0%0%1_L0%0%1 nodece 53 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 53 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1870073347 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1870073347 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 1870073347 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 16777216 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
259299706
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54
=pc L0%0%1_L0%0%1 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2186149892 { -2108817404 } : BV:32
=symbol.1
1 : 2188265472 { -2106701824 } : BV:32
=symbol.2
1 : 2186151920 { -2108815376 } : BV:32
=dst_symbol_addr.1
1 : 2188265472 { -2106701824 } : BV:32
=dst_symbol_addr.2
1 : 2186151920 { -2108815376 } : BV:32
=dst_symbol_addr.3
1 : 2186149892 { -2108817404 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2186084348 { -2108882948 } : BV:32
=input.src.llvm-mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2186151920 { -2108815376 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2188265472 { -2106701824 } : BV:32
=input.dst.mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2186279919 { -2108687377 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2186149892 { -2108817404 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2188393471 { -2106573825 } : BV:32
=memlabel-mem-esp_begin
1 : 37748736 : BV:32
=stack.size
1 : 2148335616 { -2146631680 } : BV:32
=memlabel-mem-esp_end
1 : 2186084351 { -2108882945 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2186149895 { -2108817401 } : BV:32
=unaliased_memslot.6
1 : 256 : BV:32
=unaliased_memslot.0
1 : 256 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 22528 : BV:32
=unaliased_memslot.3
1 : 256 : BV:32
=unaliased_memslot.4
1 : 256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1636958517
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54 nodece_path
=pc L0%0%1_L0%0%1 nodece 54 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 54 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2186149892 { -2108817404 } : BV:32
=symbol.1
1 : 2188265472 { -2106701824 } : BV:32
=symbol.2
1 : 2186151920 { -2108815376 } : BV:32
=dst_symbol_addr.1
1 : 2188265472 { -2106701824 } : BV:32
=dst_symbol_addr.2
1 : 2186151920 { -2108815376 } : BV:32
=dst_symbol_addr.3
1 : 2186149892 { -2108817404 } : BV:32
=input_stack_pointer_const
1 : 2186084348 { -2108882948 } : BV:32
=input.src.llvm-mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2186151920 { -2108815376 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2188265472 { -2106701824 } : BV:32
=input.dst.mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2186279919 { -2108687377 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2186149892 { -2108817404 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2188393471 { -2106573825 } : BV:32
=memlabel-mem-esp_begin
1 : 37748736 : BV:32
=stack.size
1 : 2148335616 { -2146631680 } : BV:32
=memlabel-mem-esp_end
1 : 2186084351 { -2108882945 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2186149895 { -2108817401 } : BV:32
=unaliased_memslot.6
1 : 256 : BV:32
=unaliased_memslot.0
1 : 256 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 22528 : BV:32
=unaliased_memslot.3
1 : 256 : BV:32
=unaliased_memslot.4
1 : 256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1636958517
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55
=pc L0%0%1_L0%0%1 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3216895996 { -1078071300 } : BV:32
=symbol.1
1 : 2679894000 { -1615073296 } : BV:32
=symbol.2
1 : 3216509888 { -1078457408 } : BV:32
=dst_symbol_addr.1
1 : 2679894000 { -1615073296 } : BV:32
=dst_symbol_addr.2
1 : 3216509888 { -1078457408 } : BV:32
=dst_symbol_addr.3
1 : 3216895996 { -1078071300 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1633538044 : BV:32
=input.src.llvm-mem
1 : (( 3216509900 ) -> 15, ( 2679894008 ) -> 16, ( 2679894004 ) -> 10, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3216509900 ) -> 15, ( 2679894008 ) -> 16, ( 2679894004 ) -> 10, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3216509888 { -1078457408 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2679894000 { -1615073296 } : BV:32
=input.dst.mem
1 : (( 3216509900 ) -> 15, ( 2679894008 ) -> 16, ( 2679894004 ) -> 10, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3216637887 { -1078329409 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3216895996 { -1078071300 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2680021999 { -1614945297 } : BV:32
=memlabel-mem-esp_begin
1 : 272891904 : BV:32
=stack.size
1 : 1360646144 : BV:32
=memlabel-mem-esp_end
1 : 1633538047 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3216895999 { -1078071297 } : BV:32
=unaliased_memslot.6
1 : 16 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 15 : BV:32
=unaliased_memslot.3
1 : 10 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1946035280
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55 nodece_path
=pc L0%0%1_L0%0%1 nodece 55 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 55 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3216895996 { -1078071300 } : BV:32
=symbol.1
1 : 2679894000 { -1615073296 } : BV:32
=symbol.2
1 : 3216509888 { -1078457408 } : BV:32
=dst_symbol_addr.1
1 : 2679894000 { -1615073296 } : BV:32
=dst_symbol_addr.2
1 : 3216509888 { -1078457408 } : BV:32
=dst_symbol_addr.3
1 : 3216895996 { -1078071300 } : BV:32
=input_stack_pointer_const
1 : 1633538044 : BV:32
=input.src.llvm-mem
1 : (( 3216509900 ) -> 15, ( 2679894008 ) -> 16, ( 2679894004 ) -> 10, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3216509900 ) -> 15, ( 2679894008 ) -> 16, ( 2679894004 ) -> 10, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3216509888 { -1078457408 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2679894000 { -1615073296 } : BV:32
=input.dst.mem
1 : (( 3216509900 ) -> 15, ( 2679894008 ) -> 16, ( 2679894004 ) -> 10, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3216637887 { -1078329409 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3216895996 { -1078071300 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2680021999 { -1614945297 } : BV:32
=memlabel-mem-esp_begin
1 : 272891904 : BV:32
=stack.size
1 : 1360646144 : BV:32
=memlabel-mem-esp_end
1 : 1633538047 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3216895999 { -1078071297 } : BV:32
=unaliased_memslot.6
1 : 16 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 15 : BV:32
=unaliased_memslot.3
1 : 10 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1946035280
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56
=pc L0%0%1_L0%0%1 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
215207056
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56 nodece_path
=pc L0%0%1_L0%0%1 nodece 56 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 56 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
215207056
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57
=pc L0%0%1_L0%0%1 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294963196 { -4100 } : BV:32
=symbol.1
1 : 4294707216 { -260080 } : BV:32
=symbol.2
1 : 101392 : BV:32
=dst_symbol_addr.1
1 : 4294707216 { -260080 } : BV:32
=dst_symbol_addr.2
1 : 101392 : BV:32
=dst_symbol_addr.3
1 : 4294963196 { -4100 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (( 4294707220 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294707220 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 101392 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294707216 { -260080 } : BV:32
=input.dst.mem
1 : (( 4294707220 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 229391 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294963196 { -4100 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294835215 { -132081 } : BV:32
=memlabel-mem-esp_begin
1 : 245760 : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294963199 { -4097 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
934490504
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57 nodece_path
=pc L0%0%1_L0%0%1 nodece 57 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 57 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294963196 { -4100 } : BV:32
=symbol.1
1 : 4294707216 { -260080 } : BV:32
=symbol.2
1 : 101392 : BV:32
=dst_symbol_addr.1
1 : 4294707216 { -260080 } : BV:32
=dst_symbol_addr.2
1 : 101392 : BV:32
=dst_symbol_addr.3
1 : 4294963196 { -4100 } : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (( 4294707220 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294707220 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 101392 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294707216 { -260080 } : BV:32
=input.dst.mem
1 : (( 4294707220 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 229391 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294963196 { -4100 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294835215 { -132081 } : BV:32
=memlabel-mem-esp_begin
1 : 245760 : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294963199 { -4097 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
934490504
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58
=pc L0%0%1_L0%0%1 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (( 293862388 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 293862388 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (( 293862388 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1809400536
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58 nodece_path
=pc L0%0%1_L0%0%1 nodece 58 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 58 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (( 293862388 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 293862388 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (( 293862388 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1809400536
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59
=pc L0%0%1_L0%0%1 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2087145472
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59 nodece_path
=pc L0%0%1_L0%0%1 nodece 59 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 59 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2087145472
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60
=pc L0%0%1_L0%0%1 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4223544816 { -71422480 } : BV:32
=symbol.1
1 : 3938201072 { -356766224 } : BV:32
=symbol.2
1 : 4068114944 { -226852352 } : BV:32
=dst_symbol_addr.1
1 : 3938201072 { -356766224 } : BV:32
=dst_symbol_addr.2
1 : 4068114944 { -226852352 } : BV:32
=dst_symbol_addr.3
1 : 4223544816 { -71422480 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1337819132 : BV:32
=input.src.llvm-mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4068114944 { -226852352 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3938201072 { -356766224 } : BV:32
=input.dst.mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4068242943 { -226724353 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4223544816 { -71422480 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3938329071 { -356638225 } : BV:32
=memlabel-mem-esp_begin
1 : 981237760 : BV:32
=stack.size
1 : 356581376 : BV:32
=memlabel-mem-esp_end
1 : 1337819135 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4223544819 { -71422477 } : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 3 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.4
1 : 121 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
837836795
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60 nodece_path
=pc L0%0%1_L0%0%1 nodece 60 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 60 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4223544816 { -71422480 } : BV:32
=symbol.1
1 : 3938201072 { -356766224 } : BV:32
=symbol.2
1 : 4068114944 { -226852352 } : BV:32
=dst_symbol_addr.1
1 : 3938201072 { -356766224 } : BV:32
=dst_symbol_addr.2
1 : 4068114944 { -226852352 } : BV:32
=dst_symbol_addr.3
1 : 4223544816 { -71422480 } : BV:32
=input_stack_pointer_const
1 : 1337819132 : BV:32
=input.src.llvm-mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4068114944 { -226852352 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3938201072 { -356766224 } : BV:32
=input.dst.mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4068242943 { -226724353 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4223544816 { -71422480 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3938329071 { -356638225 } : BV:32
=memlabel-mem-esp_begin
1 : 981237760 : BV:32
=stack.size
1 : 356581376 : BV:32
=memlabel-mem-esp_end
1 : 1337819135 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4223544819 { -71422477 } : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 3 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.4
1 : 121 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
837836795
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61
=pc L0%0%1_L0%0%1 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4292870140 { -2097156 } : BV:32
=symbol.1
1 : 920592 : BV:32
=symbol.2
1 : 4292340752 { -2626544 } : BV:32
=dst_symbol_addr.1
1 : 920592 : BV:32
=dst_symbol_addr.2
1 : 4292340752 { -2626544 } : BV:32
=dst_symbol_addr.3
1 : 4292870140 { -2097156 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292337660 { -2629636 } : BV:32
=input.src.llvm-mem
1 : (( 920600 ) -> 115, ( 920597 ) -> 0, ( 4292340761 ) -> 0, ( 920605 ) -> 0, ( 920601 ) -> 0, ( 4292340757 ) -> 0, ( 4292340764 ) -> 31, ( 4292340765 ) -> 0, ( 920604 ) -> 31, ( 4292340756 ) -> 0, ( 920596 ) -> 0, () -> 107) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 920600 ) -> 115, ( 920597 ) -> 0, ( 4292340761 ) -> 0, ( 920605 ) -> 0, ( 920601 ) -> 0, ( 4292340757 ) -> 0, ( 4292340764 ) -> 31, ( 4292340765 ) -> 0, ( 920604 ) -> 31, ( 4292340756 ) -> 0, ( 920596 ) -> 0, () -> 107) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292340752 { -2626544 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 920592 : BV:32
=input.dst.mem
1 : (( 920600 ) -> 115, ( 920597 ) -> 0, ( 4292340761 ) -> 0, ( 920605 ) -> 0, ( 920601 ) -> 0, ( 4292340757 ) -> 0, ( 4292340764 ) -> 31, ( 4292340765 ) -> 0, ( 920604 ) -> 31, ( 4292340756 ) -> 0, ( 920596 ) -> 0, () -> 107) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4292468751 { -2498545 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4292870140 { -2097156 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1048591 : BV:32
=memlabel-mem-esp_begin
1 : 1052672 : BV:32
=stack.size
1 : 4291284992 { -3682304 } : BV:32
=memlabel-mem-esp_end
1 : 4292337663 { -2629633 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4292870143 { -2097153 } : BV:32
=unaliased_memslot.0
1 : 1802174464 : BV:32
=unaliased_memslot.1
1 : 1802174495 : BV:32
=unaliased_memslot.2
1 : 1802174464 : BV:32
=unaliased_memslot.5
1 : 1802174571 : BV:32
=unaliased_memslot.3
1 : 1802174495 : BV:32
=unaliased_memslot.4
1 : 1802174579 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1409985199
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61 nodece_path
=pc L0%0%1_L0%0%1 nodece 61 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 61 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4292870140 { -2097156 } : BV:32
=symbol.1
1 : 920592 : BV:32
=symbol.2
1 : 4292340752 { -2626544 } : BV:32
=dst_symbol_addr.1
1 : 920592 : BV:32
=dst_symbol_addr.2
1 : 4292340752 { -2626544 } : BV:32
=dst_symbol_addr.3
1 : 4292870140 { -2097156 } : BV:32
=input_stack_pointer_const
1 : 4292337660 { -2629636 } : BV:32
=input.src.llvm-mem
1 : (( 920600 ) -> 115, ( 920597 ) -> 0, ( 4292340761 ) -> 0, ( 920605 ) -> 0, ( 920601 ) -> 0, ( 4292340757 ) -> 0, ( 4292340764 ) -> 31, ( 4292340765 ) -> 0, ( 920604 ) -> 31, ( 4292340756 ) -> 0, ( 920596 ) -> 0, () -> 107) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 920600 ) -> 115, ( 920597 ) -> 0, ( 4292340761 ) -> 0, ( 920605 ) -> 0, ( 920601 ) -> 0, ( 4292340757 ) -> 0, ( 4292340764 ) -> 31, ( 4292340765 ) -> 0, ( 920604 ) -> 31, ( 4292340756 ) -> 0, ( 920596 ) -> 0, () -> 107) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292340752 { -2626544 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 920592 : BV:32
=input.dst.mem
1 : (( 920600 ) -> 115, ( 920597 ) -> 0, ( 4292340761 ) -> 0, ( 920605 ) -> 0, ( 920601 ) -> 0, ( 4292340757 ) -> 0, ( 4292340764 ) -> 31, ( 4292340765 ) -> 0, ( 920604 ) -> 31, ( 4292340756 ) -> 0, ( 920596 ) -> 0, () -> 107) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4292468751 { -2498545 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4292870140 { -2097156 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1048591 : BV:32
=memlabel-mem-esp_begin
1 : 1052672 : BV:32
=stack.size
1 : 4291284992 { -3682304 } : BV:32
=memlabel-mem-esp_end
1 : 4292337663 { -2629633 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4292870143 { -2097153 } : BV:32
=unaliased_memslot.0
1 : 1802174464 : BV:32
=unaliased_memslot.1
1 : 1802174495 : BV:32
=unaliased_memslot.2
1 : 1802174464 : BV:32
=unaliased_memslot.5
1 : 1802174571 : BV:32
=unaliased_memslot.3
1 : 1802174495 : BV:32
=unaliased_memslot.4
1 : 1802174579 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1409985199
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62
=pc L0%0%1_L0%0%1 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2139017984 : BV:32
=symbol.1
1 : 2147411136 : BV:32
=symbol.2
1 : 2144402624 : BV:32
=dst_symbol_addr.1
1 : 2147411136 : BV:32
=dst_symbol_addr.2
1 : 2144402624 : BV:32
=dst_symbol_addr.3
1 : 2139017984 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2144402628 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2144402628 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2144402624 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147411136 : BV:32
=input.dst.mem
1 : (( 2144402628 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2144530623 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2139017984 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147539135 { -2147428161 } : BV:32
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2139017987 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
706023440
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62 nodece_path
=pc L0%0%1_L0%0%1 nodece 62 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 62 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2139017984 : BV:32
=symbol.1
1 : 2147411136 : BV:32
=symbol.2
1 : 2144402624 : BV:32
=dst_symbol_addr.1
1 : 2147411136 : BV:32
=dst_symbol_addr.2
1 : 2144402624 : BV:32
=dst_symbol_addr.3
1 : 2139017984 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 2144402628 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2144402628 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2144402624 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147411136 : BV:32
=input.dst.mem
1 : (( 2144402628 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2144530623 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2139017984 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147539135 { -2147428161 } : BV:32
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2139017987 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
706023440
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63
=pc L0%0%1_L0%0%1 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1778249712 : BV:32
=symbol.1
1 : 972815344 : BV:32
=symbol.2
1 : 1777863616 : BV:32
=dst_symbol_addr.1
1 : 972815344 : BV:32
=dst_symbol_addr.2
1 : 1777863616 : BV:32
=dst_symbol_addr.3
1 : 1778249712 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 902148092 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1777863616 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 972815344 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1777991615 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1778249712 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 972943343 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 835039232 : BV:32
=memlabel-mem-esp_end
1 : 902148095 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1778249715 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1696233114
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63 nodece_path
=pc L0%0%1_L0%0%1 nodece 63 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 63 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1778249712 : BV:32
=symbol.1
1 : 972815344 : BV:32
=symbol.2
1 : 1777863616 : BV:32
=dst_symbol_addr.1
1 : 972815344 : BV:32
=dst_symbol_addr.2
1 : 1777863616 : BV:32
=dst_symbol_addr.3
1 : 1778249712 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 902148092 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1777863616 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 972815344 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1777991615 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1778249712 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 972943343 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 835039232 : BV:32
=memlabel-mem-esp_end
1 : 902148095 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1778249715 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1696233114
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64
=pc L0%0%1_L0%0%1 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294967292 { -4 } : BV:32
=symbol.1
1 : 4292918272 { -2049024 } : BV:32
=symbol.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.1
1 : 4292918272 { -2049024 } : BV:32
=dst_symbol_addr.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.3
1 : 4294967292 { -4 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4292898812 { -2068484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294788096 { -179200 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292918272 { -2049024 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294916095 { -51201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293046271 { -1921025 } : BV:32
=memlabel-mem-esp_begin
1 : 12288 : BV:32
=stack.size
1 : 4292886528 { -2080768 } : BV:32
=memlabel-mem-esp_end
1 : 4292898815 { -2068481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
239579561
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64 nodece_path
=pc L0%0%1_L0%0%1 nodece 64 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 64 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294967292 { -4 } : BV:32
=symbol.1
1 : 4292918272 { -2049024 } : BV:32
=symbol.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.1
1 : 4292918272 { -2049024 } : BV:32
=dst_symbol_addr.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.3
1 : 4294967292 { -4 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4292898812 { -2068484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294788096 { -179200 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292918272 { -2049024 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294916095 { -51201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293046271 { -1921025 } : BV:32
=memlabel-mem-esp_begin
1 : 12288 : BV:32
=stack.size
1 : 4292886528 { -2080768 } : BV:32
=memlabel-mem-esp_end
1 : 4292898815 { -2068481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
239579561
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65
=pc L0%0%1_L0%0%1 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 156 , m_adder -> 195)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 156 , m_adder -> 195)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
984347175
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65 nodece_path
=pc L0%0%1_L0%0%1 nodece 65 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 65 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 156 , m_adder -> 195)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 156 , m_adder -> 195)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
984347175
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 66
=pc L0%0%1_L0%0%1 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
784052567
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 66 nodece_path
=pc L0%0%1_L0%0%1 nodece 66 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 66 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
784052567
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 67
=pc L0%0%1_L0%0%1 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294967292 { -4 } : BV:32
=symbol.1
1 : 4292918272 { -2049024 } : BV:32
=symbol.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.1
1 : 4292918272 { -2049024 } : BV:32
=dst_symbol_addr.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.3
1 : 4294967292 { -4 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292898812 { -2068484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294788096 { -179200 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292918272 { -2049024 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294916095 { -51201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293046271 { -1921025 } : BV:32
=memlabel-mem-esp_begin
1 : 12288 : BV:32
=stack.size
1 : 4292886528 { -2080768 } : BV:32
=memlabel-mem-esp_end
1 : 4292898815 { -2068481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
581492425
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 67 nodece_path
=pc L0%0%1_L0%0%1 nodece 67 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 67 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294967292 { -4 } : BV:32
=symbol.1
1 : 4292918272 { -2049024 } : BV:32
=symbol.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.1
1 : 4292918272 { -2049024 } : BV:32
=dst_symbol_addr.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.3
1 : 4294967292 { -4 } : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4292898812 { -2068484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294788096 { -179200 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292918272 { -2049024 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294916095 { -51201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293046271 { -1921025 } : BV:32
=memlabel-mem-esp_begin
1 : 12288 : BV:32
=stack.size
1 : 4292886528 { -2080768 } : BV:32
=memlabel-mem-esp_end
1 : 4292898815 { -2068481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
581492425
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 68
=pc L0%0%1_L0%0%1 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 147 , m_adder -> 36)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 147 , m_adder -> 36)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2859275632
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 68 nodece_path
=pc L0%0%1_L0%0%1 nodece 68 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 68 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 147 , m_adder -> 36)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 147 , m_adder -> 36)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2859275632
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 69
=pc L0%0%1_L0%0%1 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1225382524
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 69 nodece_path
=pc L0%0%1_L0%0%1 nodece 69 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 69 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1225382524
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 70
=pc L0%0%1_L0%0%1 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294967292 { -4 } : BV:32
=symbol.1
1 : 4292918272 { -2049024 } : BV:32
=symbol.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.1
1 : 4292918272 { -2049024 } : BV:32
=dst_symbol_addr.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.3
1 : 4294967292 { -4 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292898812 { -2068484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294788096 { -179200 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292918272 { -2049024 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294916095 { -51201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293046271 { -1921025 } : BV:32
=memlabel-mem-esp_begin
1 : 12288 : BV:32
=stack.size
1 : 4292886528 { -2080768 } : BV:32
=memlabel-mem-esp_end
1 : 4292898815 { -2068481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
782826941
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 70 nodece_path
=pc L0%0%1_L0%0%1 nodece 70 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 70 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294967292 { -4 } : BV:32
=symbol.1
1 : 4292918272 { -2049024 } : BV:32
=symbol.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.1
1 : 4292918272 { -2049024 } : BV:32
=dst_symbol_addr.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.3
1 : 4294967292 { -4 } : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4292898812 { -2068484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294788096 { -179200 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292918272 { -2049024 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294916095 { -51201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293046271 { -1921025 } : BV:32
=memlabel-mem-esp_begin
1 : 12288 : BV:32
=stack.size
1 : 4292886528 { -2080768 } : BV:32
=memlabel-mem-esp_end
1 : 4292898815 { -2068481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
782826941
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 71
=pc L0%0%1_L0%0%1 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 72 , m_adder -> 166)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 72 , m_adder -> 166)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
599603638
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 71 nodece_path
=pc L0%0%1_L0%0%1 nodece 71 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 71 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 72 , m_adder -> 166)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 72 , m_adder -> 166)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
599603638
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 72
=pc L0%0%1_L0%0%1 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1669516833
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 72 nodece_path
=pc L0%0%1_L0%0%1 nodece 72 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 72 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1669516833
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 73
=pc L0%0%1_L0%0%1 nodece 73 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294967292 { -4 } : BV:32
=symbol.1
1 : 4292918272 { -2049024 } : BV:32
=symbol.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.1
1 : 4292918272 { -2049024 } : BV:32
=dst_symbol_addr.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.3
1 : 4294967292 { -4 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292898812 { -2068484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294788096 { -179200 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292918272 { -2049024 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294916095 { -51201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293046271 { -1921025 } : BV:32
=memlabel-mem-esp_begin
1 : 12288 : BV:32
=stack.size
1 : 4292886528 { -2080768 } : BV:32
=memlabel-mem-esp_end
1 : 4292898815 { -2068481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
599967501
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 73 nodece_path
=pc L0%0%1_L0%0%1 nodece 73 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 73 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294967292 { -4 } : BV:32
=symbol.1
1 : 4292918272 { -2049024 } : BV:32
=symbol.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.1
1 : 4292918272 { -2049024 } : BV:32
=dst_symbol_addr.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.3
1 : 4294967292 { -4 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4292898812 { -2068484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294788096 { -179200 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292918272 { -2049024 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294916095 { -51201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293046271 { -1921025 } : BV:32
=memlabel-mem-esp_begin
1 : 12288 : BV:32
=stack.size
1 : 4292886528 { -2080768 } : BV:32
=memlabel-mem-esp_end
1 : 4292898815 { -2068481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
599967501
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 74
=pc L0%0%1_L0%0%1 nodece 74 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 208 , m_adder -> 210)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 208 , m_adder -> 210)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1858276734
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 74 nodece_path
=pc L0%0%1_L0%0%1 nodece 74 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 74 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 208 , m_adder -> 210)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 208 , m_adder -> 210)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1858276734
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 75
=pc L0%0%1_L0%0%1 nodece 75 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294967292 { -4 } : BV:32
=symbol.1
1 : 4292918272 { -2049024 } : BV:32
=symbol.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.1
1 : 4292918272 { -2049024 } : BV:32
=dst_symbol_addr.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.3
1 : 4294967292 { -4 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292898812 { -2068484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294788096 { -179200 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292918272 { -2049024 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294916095 { -51201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293046271 { -1921025 } : BV:32
=memlabel-mem-esp_begin
1 : 12288 : BV:32
=stack.size
1 : 4292886528 { -2080768 } : BV:32
=memlabel-mem-esp_end
1 : 4292898815 { -2068481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
248945629
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 75 nodece_path
=pc L0%0%1_L0%0%1 nodece 75 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 75 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294967292 { -4 } : BV:32
=symbol.1
1 : 4292918272 { -2049024 } : BV:32
=symbol.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.1
1 : 4292918272 { -2049024 } : BV:32
=dst_symbol_addr.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.3
1 : 4294967292 { -4 } : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4292898812 { -2068484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294788096 { -179200 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292918272 { -2049024 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294916095 { -51201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293046271 { -1921025 } : BV:32
=memlabel-mem-esp_begin
1 : 12288 : BV:32
=stack.size
1 : 4292886528 { -2080768 } : BV:32
=memlabel-mem-esp_end
1 : 4292898815 { -2068481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
248945629
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 76
=pc L0%0%1_L0%0%1 nodece 76 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1512005269
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 76 nodece_path
=pc L0%0%1_L0%0%1 nodece 76 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 76 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1512005269
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 77
=pc L0%0%1_L0%0%1 nodece 77 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 100 , m_adder -> 152)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 100 , m_adder -> 152)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1218517388
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 77 nodece_path
=pc L0%0%1_L0%0%1 nodece 77 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 77 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 100 , m_adder -> 152)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 100 , m_adder -> 152)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1218517388
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 78
=pc L0%0%1_L0%0%1 nodece 78 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 67108348 : BV:32
=symbol.1
1 : 54418448 : BV:32
=symbol.2
1 : 25099712 : BV:32
=dst_symbol_addr.1
1 : 54418448 : BV:32
=dst_symbol_addr.2
1 : 25099712 : BV:32
=dst_symbol_addr.3
1 : 67108348 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 25099724 ) -> 1, ( 25099716 ) -> 1, ( 54418452 ) -> 1, ( 54418460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25099724 ) -> 1, ( 25099716 ) -> 1, ( 54418452 ) -> 1, ( 54418460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 25099712 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 54418448 : BV:32
=input.dst.mem
1 : (( 25099724 ) -> 1, ( 25099716 ) -> 1, ( 54418452 ) -> 1, ( 54418460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 25227711 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 67108348 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 54546447 : BV:32
=memlabel-mem-esp_begin
1 : 100663296 : BV:32
=stack.size
1 : 4194304000 { -100663296 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 67108351 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1143447997
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 78 nodece_path
=pc L0%0%1_L0%0%1 nodece 78 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 78 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 67108348 : BV:32
=symbol.1
1 : 54418448 : BV:32
=symbol.2
1 : 25099712 : BV:32
=dst_symbol_addr.1
1 : 54418448 : BV:32
=dst_symbol_addr.2
1 : 25099712 : BV:32
=dst_symbol_addr.3
1 : 67108348 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 25099724 ) -> 1, ( 25099716 ) -> 1, ( 54418452 ) -> 1, ( 54418460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25099724 ) -> 1, ( 25099716 ) -> 1, ( 54418452 ) -> 1, ( 54418460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 25099712 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 54418448 : BV:32
=input.dst.mem
1 : (( 25099724 ) -> 1, ( 25099716 ) -> 1, ( 54418452 ) -> 1, ( 54418460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 25227711 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 67108348 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 54546447 : BV:32
=memlabel-mem-esp_begin
1 : 100663296 : BV:32
=stack.size
1 : 4194304000 { -100663296 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 67108351 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1143447997
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 79
=pc L0%0%1_L0%0%1 nodece 79 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4106092528 { -188874768 } : BV:32
=symbol.1
1 : 2752248816 { -1542718480 } : BV:32
=symbol.2
1 : 2760641472 { -1534325824 } : BV:32
=dst_symbol_addr.1
1 : 2752248816 { -1542718480 } : BV:32
=dst_symbol_addr.2
1 : 2760641472 { -1534325824 } : BV:32
=dst_symbol_addr.3
1 : 4106092528 { -188874768 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2596392956 { -1698574340 } : BV:32
=input.src.llvm-mem
1 : (( 2752248828 ) -> 1, ( 2760641484 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2752248828 ) -> 1, ( 2760641484 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2760641472 { -1534325824 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2752248816 { -1542718480 } : BV:32
=input.dst.mem
1 : (( 2752248828 ) -> 1, ( 2760641484 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2760769471 { -1534197825 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4106092528 { -188874768 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2752376815 { -1542590481 } : BV:32
=memlabel-mem-esp_begin
1 : 300941312 : BV:32
=stack.size
1 : 2295451648 { -1999515648 } : BV:32
=memlabel-mem-esp_end
1 : 2596392959 { -1698574337 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4106092531 { -188874765 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
881468482
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 79 nodece_path
=pc L0%0%1_L0%0%1 nodece 79 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 79 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4106092528 { -188874768 } : BV:32
=symbol.1
1 : 2752248816 { -1542718480 } : BV:32
=symbol.2
1 : 2760641472 { -1534325824 } : BV:32
=dst_symbol_addr.1
1 : 2752248816 { -1542718480 } : BV:32
=dst_symbol_addr.2
1 : 2760641472 { -1534325824 } : BV:32
=dst_symbol_addr.3
1 : 4106092528 { -188874768 } : BV:32
=input_stack_pointer_const
1 : 2596392956 { -1698574340 } : BV:32
=input.src.llvm-mem
1 : (( 2752248828 ) -> 1, ( 2760641484 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2752248828 ) -> 1, ( 2760641484 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2760641472 { -1534325824 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2752248816 { -1542718480 } : BV:32
=input.dst.mem
1 : (( 2752248828 ) -> 1, ( 2760641484 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2760769471 { -1534197825 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4106092528 { -188874768 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2752376815 { -1542590481 } : BV:32
=memlabel-mem-esp_begin
1 : 300941312 : BV:32
=stack.size
1 : 2295451648 { -1999515648 } : BV:32
=memlabel-mem-esp_end
1 : 2596392959 { -1698574337 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4106092531 { -188874765 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
881468482
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 80
=pc L0%0%1_L0%0%1 nodece 80 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1342311432 ) -> 1, ( 805211144 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1342311432 ) -> 1, ( 805211144 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 1342311432 ) -> 1, ( 805211144 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1302525932
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 80 nodece_path
=pc L0%0%1_L0%0%1 nodece 80 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 80 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1342311432 ) -> 1, ( 805211144 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1342311432 ) -> 1, ( 805211144 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 1342311432 ) -> 1, ( 805211144 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1302525932
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 81
=pc L0%0%1_L0%0%1 nodece 81 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 763320 : BV:32
=symbol.1
1 : 1456 : BV:32
=symbol.2
1 : 229632 : BV:32
=dst_symbol_addr.1
1 : 1456 : BV:32
=dst_symbol_addr.2
1 : 229632 : BV:32
=dst_symbol_addr.3
1 : 763320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 229640 ) -> 8, ( 1464 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 229640 ) -> 8, ( 1464 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 229632 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1456 : BV:32
=input.dst.mem
1 : (( 229640 ) -> 8, ( 1464 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 357631 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 763320 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 129455 : BV:32
=memlabel-mem-esp_begin
1 : 999424 : BV:32
=stack.size
1 : 4293967872 { -999424 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 763323 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=unaliased_memslot.1
1 : 8 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
107302800
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 81 nodece_path
=pc L0%0%1_L0%0%1 nodece 81 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 81 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 763320 : BV:32
=symbol.1
1 : 1456 : BV:32
=symbol.2
1 : 229632 : BV:32
=dst_symbol_addr.1
1 : 1456 : BV:32
=dst_symbol_addr.2
1 : 229632 : BV:32
=dst_symbol_addr.3
1 : 763320 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 229640 ) -> 8, ( 1464 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 229640 ) -> 8, ( 1464 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 229632 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1456 : BV:32
=input.dst.mem
1 : (( 229640 ) -> 8, ( 1464 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 357631 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 763320 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 129455 : BV:32
=memlabel-mem-esp_begin
1 : 999424 : BV:32
=stack.size
1 : 4293967872 { -999424 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 763323 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=unaliased_memslot.1
1 : 8 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
107302800
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 82
=pc L0%0%1_L0%0%1 nodece 82 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4128177584 { -166789712 } : BV:32
=symbol.1
1 : 906824112 : BV:32
=symbol.2
1 : 2550576640 { -1744390656 } : BV:32
=dst_symbol_addr.1
1 : 906824112 : BV:32
=dst_symbol_addr.2
1 : 2550576640 { -1744390656 } : BV:32
=dst_symbol_addr.3
1 : 4128177584 { -166789712 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 25952252 : BV:32
=input.src.llvm-mem
1 : (( 906824120 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 906824120 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2550576640 { -1744390656 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 906824112 : BV:32
=input.dst.mem
1 : (( 906824120 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2550704639 { -1744262657 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4128177584 { -166789712 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 906952111 : BV:32
=memlabel-mem-esp_begin
1 : 14761984 : BV:32
=stack.size
1 : 11190272 : BV:32
=memlabel-mem-esp_end
1 : 25952255 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4128177587 { -166789709 } : BV:32
=unaliased_memslot.0
1 : 4 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1281998501
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 82 nodece_path
=pc L0%0%1_L0%0%1 nodece 82 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 82 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4128177584 { -166789712 } : BV:32
=symbol.1
1 : 906824112 : BV:32
=symbol.2
1 : 2550576640 { -1744390656 } : BV:32
=dst_symbol_addr.1
1 : 906824112 : BV:32
=dst_symbol_addr.2
1 : 2550576640 { -1744390656 } : BV:32
=dst_symbol_addr.3
1 : 4128177584 { -166789712 } : BV:32
=input_stack_pointer_const
1 : 25952252 : BV:32
=input.src.llvm-mem
1 : (( 906824120 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 906824120 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2550576640 { -1744390656 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 906824112 : BV:32
=input.dst.mem
1 : (( 906824120 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2550704639 { -1744262657 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4128177584 { -166789712 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 906952111 : BV:32
=memlabel-mem-esp_begin
1 : 14761984 : BV:32
=stack.size
1 : 11190272 : BV:32
=memlabel-mem-esp_end
1 : 25952255 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4128177587 { -166789709 } : BV:32
=unaliased_memslot.0
1 : 4 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1281998501
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 83
=pc L0%0%1_L0%0%1 nodece 83 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2139016848 : BV:32
=symbol.1
1 : 2147409200 : BV:32
=symbol.2
1 : 1610583424 : BV:32
=dst_symbol_addr.1
1 : 2147409200 : BV:32
=dst_symbol_addr.2
1 : 1610583424 : BV:32
=dst_symbol_addr.3
1 : 2139016848 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1610583432 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1610583432 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1610583424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147409200 : BV:32
=input.dst.mem
1 : (( 1610583432 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1610711423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2139016848 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147537199 { -2147430097 } : BV:32
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2139016851 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1329239775
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 83 nodece_path
=pc L0%0%1_L0%0%1 nodece 83 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 83 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2139016848 : BV:32
=symbol.1
1 : 2147409200 : BV:32
=symbol.2
1 : 1610583424 : BV:32
=dst_symbol_addr.1
1 : 2147409200 : BV:32
=dst_symbol_addr.2
1 : 1610583424 : BV:32
=dst_symbol_addr.3
1 : 2139016848 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1610583432 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1610583432 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1610583424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147409200 : BV:32
=input.dst.mem
1 : (( 1610583432 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1610711423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2139016848 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147537199 { -2147430097 } : BV:32
=memlabel-mem-esp_begin
1 : 3221225472 { -1073741824 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2139016851 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1329239775
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 84
=pc L0%0%1_L0%0%1 nodece 84 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4093651920 { -201315376 } : BV:32
=symbol.1
1 : 4160663536 { -134303760 } : BV:32
=symbol.2
1 : 3086921712 { -1208045584 } : BV:32
=dst_symbol_addr.1
1 : 4160663536 { -134303760 } : BV:32
=dst_symbol_addr.2
1 : 3086921712 { -1208045584 } : BV:32
=dst_symbol_addr.3
1 : 4093651920 { -201315376 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2573803516 { -1721163780 } : BV:32
=input.src.llvm-mem
1 : (( 4160663544 ) -> 254, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4160663544 ) -> 254, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3086921712 { -1208045584 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160663536 { -134303760 } : BV:32
=input.dst.mem
1 : (( 4160663544 ) -> 254, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3087049711 { -1207917585 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4093651920 { -201315376 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4160791535 { -134175761 } : BV:32
=memlabel-mem-esp_begin
1 : 972992512 : BV:32
=stack.size
1 : 1600811008 : BV:32
=memlabel-mem-esp_end
1 : 2573803519 { -1721163777 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4093651923 { -201315373 } : BV:32
=unaliased_memslot.0
1 : 16843262 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2121932605
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 84 nodece_path
=pc L0%0%1_L0%0%1 nodece 84 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 84 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4093651920 { -201315376 } : BV:32
=symbol.1
1 : 4160663536 { -134303760 } : BV:32
=symbol.2
1 : 3086921712 { -1208045584 } : BV:32
=dst_symbol_addr.1
1 : 4160663536 { -134303760 } : BV:32
=dst_symbol_addr.2
1 : 3086921712 { -1208045584 } : BV:32
=dst_symbol_addr.3
1 : 4093651920 { -201315376 } : BV:32
=input_stack_pointer_const
1 : 2573803516 { -1721163780 } : BV:32
=input.src.llvm-mem
1 : (( 4160663544 ) -> 254, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4160663544 ) -> 254, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3086921712 { -1208045584 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160663536 { -134303760 } : BV:32
=input.dst.mem
1 : (( 4160663544 ) -> 254, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3087049711 { -1207917585 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4093651920 { -201315376 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4160791535 { -134175761 } : BV:32
=memlabel-mem-esp_begin
1 : 972992512 : BV:32
=stack.size
1 : 1600811008 : BV:32
=memlabel-mem-esp_end
1 : 2573803519 { -1721163777 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4093651923 { -201315373 } : BV:32
=unaliased_memslot.0
1 : 16843262 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2121932605
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 85
=pc L0%0%1_L0%0%1 nodece 85 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2608721904 { -1686245392 } : BV:32
=symbol.1
1 : 2487480304 { -1807486992 } : BV:32
=symbol.2
1 : 2541226944 { -1753740352 } : BV:32
=dst_symbol_addr.1
1 : 2487480304 { -1807486992 } : BV:32
=dst_symbol_addr.2
1 : 2541226944 { -1753740352 } : BV:32
=dst_symbol_addr.3
1 : 2608721904 { -1686245392 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1662898172 : BV:32
=input.src.llvm-mem
1 : (( 2541226952 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2541226952 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2541226944 { -1753740352 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2487480304 { -1807486992 } : BV:32
=input.dst.mem
1 : (( 2541226952 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2541354943 { -1753612353 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2608721904 { -1686245392 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2487608303 { -1807358993 } : BV:32
=memlabel-mem-esp_begin
1 : 48234496 : BV:32
=stack.size
1 : 1614663680 : BV:32
=memlabel-mem-esp_end
1 : 1662898175 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2608721907 { -1686245389 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
327472438
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 85 nodece_path
=pc L0%0%1_L0%0%1 nodece 85 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 85 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2608721904 { -1686245392 } : BV:32
=symbol.1
1 : 2487480304 { -1807486992 } : BV:32
=symbol.2
1 : 2541226944 { -1753740352 } : BV:32
=dst_symbol_addr.1
1 : 2487480304 { -1807486992 } : BV:32
=dst_symbol_addr.2
1 : 2541226944 { -1753740352 } : BV:32
=dst_symbol_addr.3
1 : 2608721904 { -1686245392 } : BV:32
=input_stack_pointer_const
1 : 1662898172 : BV:32
=input.src.llvm-mem
1 : (( 2541226952 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2541226952 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2541226944 { -1753740352 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2487480304 { -1807486992 } : BV:32
=input.dst.mem
1 : (( 2541226952 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2541354943 { -1753612353 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2608721904 { -1686245392 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2487608303 { -1807358993 } : BV:32
=memlabel-mem-esp_begin
1 : 48234496 : BV:32
=stack.size
1 : 1614663680 : BV:32
=memlabel-mem-esp_end
1 : 1662898175 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2608721907 { -1686245389 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
327472438
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 86
=pc L0%0%1_L0%0%1 nodece 86 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211144 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 805211144 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 805211144 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 16843008 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
501906049
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 86 nodece_path
=pc L0%0%1_L0%0%1 nodece 86 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 86 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211144 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 805211144 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 805211144 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 16843008 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
501906049
=counter_example_end
=counterexamples at pc Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 0 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 3759038463 ) -> 0, ( 3759038460 ) -> 0, ( 3759038462 ) -> 0, ( 3759038461 ) -> 0, () -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 1
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 1 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 2
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 318767103 ) -> 217, ( 318767100 ) -> 81, ( 318767102 ) -> 65, ( 278595592 ) -> 2, ( 278595593 ) -> 170, ( 278595594 ) -> 120, ( 278595595 ) -> 48, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 318767103 ) -> 217, ( 318767100 ) -> 81, ( 318767102 ) -> 65, ( 278595592 ) -> 2, ( 278595593 ) -> 170, ( 278595594 ) -> 120, ( 278595595 ) -> 48, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 318767103 ) -> 217, ( 318767100 ) -> 81, ( 318767102 ) -> 65, ( 278595592 ) -> 2, ( 278595593 ) -> 170, ( 278595594 ) -> 120, ( 278595595 ) -> 48, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 3644915793 { -650051503 } : BV:32
=unaliased_memslot.1
1 : 813214210 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1047372231
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 2 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 318767103 ) -> 217, ( 318767100 ) -> 81, ( 318767102 ) -> 65, ( 278595592 ) -> 2, ( 278595593 ) -> 170, ( 278595594 ) -> 120, ( 278595595 ) -> 48, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 318767103 ) -> 217, ( 318767100 ) -> 81, ( 318767102 ) -> 65, ( 278595592 ) -> 2, ( 278595593 ) -> 170, ( 278595594 ) -> 120, ( 278595595 ) -> 48, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 318767103 ) -> 217, ( 318767100 ) -> 81, ( 318767102 ) -> 65, ( 278595592 ) -> 2, ( 278595593 ) -> 170, ( 278595594 ) -> 120, ( 278595595 ) -> 48, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 3644915793 { -650051503 } : BV:32
=unaliased_memslot.1
1 : 813214210 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1047372231
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 3
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 318767103 ) -> 255, ( 318767100 ) -> 255, ( 318767101 ) -> 255, ( 318767102 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 318767103 ) -> 255, ( 318767100 ) -> 255, ( 318767101 ) -> 255, ( 318767102 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 318767103 ) -> 255, ( 318767100 ) -> 255, ( 318767101 ) -> 255, ( 318767102 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1707746139
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 3 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 318767103 ) -> 255, ( 318767100 ) -> 255, ( 318767101 ) -> 255, ( 318767102 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 318767103 ) -> 255, ( 318767100 ) -> 255, ( 318767101 ) -> 255, ( 318767102 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 318767103 ) -> 255, ( 318767100 ) -> 255, ( 318767101 ) -> 255, ( 318767102 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1707746139
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 4
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595584 ) -> 129, ( 278595585 ) -> 1, ( 278595586 ) -> 3, ( 278595587 ) -> 128, ( 278595588 ) -> 6, ( 278595589 ) -> 8, ( 278595590 ) -> 140, ( 278595591 ) -> 21, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595584 ) -> 129, ( 278595585 ) -> 1, ( 278595586 ) -> 3, ( 278595587 ) -> 128, ( 278595588 ) -> 6, ( 278595589 ) -> 8, ( 278595590 ) -> 140, ( 278595591 ) -> 21, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595584 ) -> 129, ( 278595585 ) -> 1, ( 278595586 ) -> 3, ( 278595587 ) -> 128, ( 278595588 ) -> 6, ( 278595589 ) -> 8, ( 278595590 ) -> 140, ( 278595591 ) -> 21, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 361498630 : BV:32
=unaliased_memslot.1
1 : 2147680641 { -2147286655 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1502781486
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 4 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595584 ) -> 129, ( 278595585 ) -> 1, ( 278595586 ) -> 3, ( 278595587 ) -> 128, ( 278595588 ) -> 6, ( 278595589 ) -> 8, ( 278595590 ) -> 140, ( 278595591 ) -> 21, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 278595584 ) -> 129, ( 278595585 ) -> 1, ( 278595586 ) -> 3, ( 278595587 ) -> 128, ( 278595588 ) -> 6, ( 278595589 ) -> 8, ( 278595590 ) -> 140, ( 278595591 ) -> 21, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595584 ) -> 129, ( 278595585 ) -> 1, ( 278595586 ) -> 3, ( 278595587 ) -> 128, ( 278595588 ) -> 6, ( 278595589 ) -> 8, ( 278595590 ) -> 140, ( 278595591 ) -> 21, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 361498630 : BV:32
=unaliased_memslot.1
1 : 2147680641 { -2147286655 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1502781486
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 5
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 255, ( 278595589 ) -> 255, ( 278595590 ) -> 255, ( 278595591 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 255, ( 278595589 ) -> 255, ( 278595590 ) -> 255, ( 278595591 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 255, ( 278595589 ) -> 255, ( 278595590 ) -> 255, ( 278595591 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
703550253
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 5 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 255, ( 278595589 ) -> 255, ( 278595590 ) -> 255, ( 278595591 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 255, ( 278595589 ) -> 255, ( 278595590 ) -> 255, ( 278595591 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 255, ( 278595589 ) -> 255, ( 278595590 ) -> 255, ( 278595591 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
703550253
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 6
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1510080967
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 6 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1510080967
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 7
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514176 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514176 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514176 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
714880226
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 7 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514176 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 302514176 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514176 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
714880226
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 8
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514176 ) -> 13, ( 278595584 ) -> 1, ( 302514184 ) -> 216, ( 302514185 ) -> 23, ( 302514186 ) -> 43, ( 302514187 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514176 ) -> 13, ( 278595584 ) -> 1, ( 302514184 ) -> 216, ( 302514185 ) -> 23, ( 302514186 ) -> 43, ( 302514187 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514176 ) -> 13, ( 278595584 ) -> 1, ( 302514184 ) -> 216, ( 302514185 ) -> 23, ( 302514186 ) -> 43, ( 302514187 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 13 : BV:32
=unaliased_memslot.2
1 : 36378584 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1597141723
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 8 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514176 ) -> 13, ( 278595584 ) -> 1, ( 302514184 ) -> 216, ( 302514185 ) -> 23, ( 302514186 ) -> 43, ( 302514187 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 302514176 ) -> 13, ( 278595584 ) -> 1, ( 302514184 ) -> 216, ( 302514185 ) -> 23, ( 302514186 ) -> 43, ( 302514187 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514176 ) -> 13, ( 278595584 ) -> 1, ( 302514184 ) -> 216, ( 302514185 ) -> 23, ( 302514186 ) -> 43, ( 302514187 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 13 : BV:32
=unaliased_memslot.2
1 : 36378584 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1597141723
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 9
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595584 ) -> 1, ( 302514184 ) -> 255, ( 302514185 ) -> 255, ( 302514186 ) -> 255, ( 302514187 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595584 ) -> 1, ( 302514184 ) -> 255, ( 302514185 ) -> 255, ( 302514186 ) -> 255, ( 302514187 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595584 ) -> 1, ( 302514184 ) -> 255, ( 302514185 ) -> 255, ( 302514186 ) -> 255, ( 302514187 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1981208324
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 9 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595584 ) -> 1, ( 302514184 ) -> 255, ( 302514185 ) -> 255, ( 302514186 ) -> 255, ( 302514187 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 278595584 ) -> 1, ( 302514184 ) -> 255, ( 302514185 ) -> 255, ( 302514186 ) -> 255, ( 302514187 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595584 ) -> 1, ( 302514184 ) -> 255, ( 302514185 ) -> 255, ( 302514186 ) -> 255, ( 302514187 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1981208324
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 10
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514188 ) -> 255, ( 302514189 ) -> 255, ( 302514190 ) -> 255, ( 302514191 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514188 ) -> 255, ( 302514189 ) -> 255, ( 302514190 ) -> 255, ( 302514191 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514188 ) -> 255, ( 302514189 ) -> 255, ( 302514190 ) -> 255, ( 302514191 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1862292122
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 10 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514188 ) -> 255, ( 302514189 ) -> 255, ( 302514190 ) -> 255, ( 302514191 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 302514188 ) -> 255, ( 302514189 ) -> 255, ( 302514190 ) -> 255, ( 302514191 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514188 ) -> 255, ( 302514189 ) -> 255, ( 302514190 ) -> 255, ( 302514191 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1862292122
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 11
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595596 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 255 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
134591281
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 11 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595596 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 255 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
134591281
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 12
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2033669086
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 12 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 3759038463 ) -> 255, ( 3759038460 ) -> 255, ( 3759038462 ) -> 255, ( 3759038461 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2033669086
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 13
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 97)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 97)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1225720666
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 13 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 27 , m_adder -> 97)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 3759038463 ) -> 128, ( 3759038460 ) -> 0, ( 3759038462 ) -> 0, ( 3759038461 ) -> 0, () -> (RAC: m_multiplier -> 27 , m_adder -> 97)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1225720666
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 14
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1012836610
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 14 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1012836610
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 15
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1937820969
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 15 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 238 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 3759038463 ) -> 0, ( 3759038460 ) -> 0, ( 3759038462 ) -> 0, ( 3759038461 ) -> 0, () -> (RAC: m_multiplier -> 238 , m_adder -> 203)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1937820969
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 16
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
12548159
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 16 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
12548159
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 17
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 176)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 176)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2174234549
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 17 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 176)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 3759038463 ) -> 0, ( 3759038460 ) -> 0, ( 3759038462 ) -> 0, ( 3759038461 ) -> 0, () -> (RAC: m_multiplier -> 51 , m_adder -> 176)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2174234549
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 18
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
900104667
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 18 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
900104667
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 19
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
929588156
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 19 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 1 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
929588156
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 20
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 9 : BV:32
=unaliased_memslot.3
1 : 2 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1490549207
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 20 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 9 : BV:32
=unaliased_memslot.3
1 : 2 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1490549207
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 21
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.5
1 : 16843039 : BV:32
=unaliased_memslot.3
1 : 16843008 : BV:32
=unaliased_memslot.4
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
38649718
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 21 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 3759038463 ) -> 0, ( 3759038460 ) -> 0, ( 3759038462 ) -> 0, ( 3759038461 ) -> 0, ( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.5
1 : 16843039 : BV:32
=unaliased_memslot.3
1 : 16843008 : BV:32
=unaliased_memslot.4
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
38649718
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 22
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
213952386
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 22 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 302514180 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
213952386
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 23
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
245240853
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 23 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
245240853
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 24
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
724025165
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L2%1%0 nodece 24 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
724025165
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 25
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
240959156
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L2%1%0 nodece 25 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
240959156
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 26
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : ([ 379260928; 3759038463 ] -> 0, () -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3888519296
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L2%1%0 nodece 26 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : ([ 379260928; 3759038463 ] -> 0, () -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3888519296
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 27
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : ([ 379260928; 3759038463 ] -> 0, () -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3888519296
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 27 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 140475335469639914882905676003454795428 : BV:128
=input.dst.exreg.2.1
1 : 140475335469639914882905676003454795428 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 3860876752 { -434090544 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 2557099022 { -1737868274 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 3860876752 { -434090544 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278595596 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 302514188 : BV:32
=input.src.llvm-%arrayidx
1 : 278595596 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : ([ 379260928; 3759038463 ] -> 0, () -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 2557099022 { -1737868274 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302514188 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 1773048004 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 3860876752 { -434090544 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3888519296
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 28
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : ([ 379260928; 3759038463 ] -> 0, () -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3888519296
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.graph_edge_composition
((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 28 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 293577276736304686560604172958312827172 { -46705090184633776902770434473455384284 } : BV:128
=input.dst.exreg.2.1
1 : 93770245205777975465870903936455460808 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 21171616 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 2018122990 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 21171616 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278595612 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%arrayidx1
1 : 302514204 : BV:32
=input.src.llvm-%arrayidx
1 : 278595612 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : ([ 379260928; 3759038463 ] -> 0, () -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 2018122990 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302514204 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%mul
1 : 3705466180 { -589501116 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 21171616 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3888519296
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 29
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : ([ 379260928; 3759038463 ] -> 0, () -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3888519296
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.graph_edge_composition
((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)))
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 29 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 187744160323951087045645486921367640996 { -152538206596987376417729120510400570460 } : BV:128
=input.dst.exreg.2.1
1 : 281514405529729062493069646784113550188 { -58767961391209400970304960647654661268 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 2902410096 { -1392557200 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 1479212238 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 2902410096 { -1392557200 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278595628 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.src.llvm-%arrayidx1
1 : 302514220 : BV:32
=input.src.llvm-%arrayidx
1 : 278595628 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : ([ 379260928; 3759038463 ] -> 0, () -> (RAC: m_multiplier -> 46 , m_adder -> 230)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 1479212238 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302514220 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%mul
1 : 2369664452 { -1925302844 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 2902410096 { -1392557200 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3888519296
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 30
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
240959156
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 30 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278595596 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 302514188 : BV:32
=input.src.llvm-%arrayidx
1 : 278595596 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302514188 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
240959156
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 31
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
245240853
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 31 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 18446744073709551616 : BV:128
=input.dst.exreg.2.1
1 : 18446744073709551616 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 1 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278595596 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 302514188 : BV:32
=input.src.llvm-%arrayidx
1 : 278595596 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595592 ) -> 1, ( 302514184 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302514188 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 1 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
245240853
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 32
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.5
1 : 16843039 : BV:32
=unaliased_memslot.3
1 : 16843008 : BV:32
=unaliased_memslot.4
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
38649718
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 32 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 3998088864412298531567935644024111617 : BV:128
=input.dst.exreg.2.1
1 : 3998088864412298531567935644024111617 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 740828192 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 16843009 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 740828192 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278595596 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 302514188 : BV:32
=input.src.llvm-%arrayidx
1 : 278595596 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 3759038463 ) -> 0, ( 3759038460 ) -> 0, ( 3759038462 ) -> 0, ( 3759038461 ) -> 0, ( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 16843008 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302514188 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 50462976 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 740828192 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.5
1 : 16843039 : BV:32
=unaliased_memslot.3
1 : 16843008 : BV:32
=unaliased_memslot.4
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
38649718
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 33
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.5
1 : 16843039 : BV:32
=unaliased_memslot.3
1 : 16843008 : BV:32
=unaliased_memslot.4
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
38649718
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)))
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 33 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 5332529519004214072319016198046155265 : BV:128
=input.dst.exreg.2.1
1 : 9330618383416512603886951842070266882 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 1010052132 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 16843009 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 1010052132 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278595612 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%arrayidx1
1 : 302514204 : BV:32
=input.src.llvm-%arrayidx
1 : 278595612 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 3759038463 ) -> 0, ( 3759038460 ) -> 0, ( 3759038462 ) -> 0, ( 3759038461 ) -> 0, ( 278595596 ) -> 0, ( 302514180 ) -> 31, ( 302514184 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 16843009 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302514204 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%mul
1 : 67305985 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 1010052132 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.2
1 : 16843008 : BV:32
=unaliased_memslot.5
1 : 16843039 : BV:32
=unaliased_memslot.3
1 : 16843008 : BV:32
=unaliased_memslot.4
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
38649718
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 34
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 9 : BV:32
=unaliased_memslot.3
1 : 2 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1490549207
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 34 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 158456325028528675225742606336 : BV:128
=input.dst.exreg.2.1
1 : 158456325028528675225742606336 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 11 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 1 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 11 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278595596 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 302514188 : BV:32
=input.src.llvm-%arrayidx
1 : 278595596 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (( 278595588 ) -> 1, ( 278595596 ) -> 2, ( 302514180 ) -> 9, ( 302514184 ) -> 1, ( 302514188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 2 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302514188 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 2 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 11 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 9 : BV:32
=unaliased_memslot.3
1 : 2 : BV:32
=unaliased_memslot.4
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1490549207
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 35
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 16 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
557995688
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 35 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 80 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 20 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278595660 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 20 : BV:32
=input.src.llvm-%arrayidx1
1 : 302514252 : BV:32
=input.src.llvm-%arrayidx
1 : 278595660 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302514252 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%inc
1 : 20 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
557995688
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 36
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 32 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
232036437
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 36 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 144 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 36 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278595724 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 36 : BV:32
=input.src.llvm-%arrayidx1
1 : 302514316 : BV:32
=input.src.llvm-%arrayidx
1 : 278595724 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302514316 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%inc
1 : 36 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
232036437
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 37
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 64 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
250105196
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 37 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 272 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 68 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278595852 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 68 : BV:32
=input.src.llvm-%arrayidx1
1 : 302514444 : BV:32
=input.src.llvm-%arrayidx
1 : 278595852 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302514444 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%inc
1 : 68 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
250105196
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 38
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 128 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1003721894
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 38 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 528 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 132 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278596108 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 132 : BV:32
=input.src.llvm-%arrayidx1
1 : 302514700 : BV:32
=input.src.llvm-%arrayidx
1 : 278596108 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302514700 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%inc
1 : 132 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1003721894
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 39
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 256 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1130484028
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 39 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1040 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 260 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278596620 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 260 : BV:32
=input.src.llvm-%arrayidx1
1 : 302515212 : BV:32
=input.src.llvm-%arrayidx
1 : 278596620 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302515212 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%inc
1 : 260 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1130484028
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 40
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 512 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1882848787
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 40 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2064 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 516 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278597644 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 516 : BV:32
=input.src.llvm-%arrayidx1
1 : 302516236 : BV:32
=input.src.llvm-%arrayidx
1 : 278597644 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302516236 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%inc
1 : 516 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1882848787
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 41
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 1024 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
418878187
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 41 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 1028 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278599692 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1028 : BV:32
=input.src.llvm-%arrayidx1
1 : 302518284 : BV:32
=input.src.llvm-%arrayidx
1 : 278599692 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302518284 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%inc
1 : 1028 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
418878187
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 42
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 2048 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1277150859
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 42 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8208 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 2052 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278603788 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2052 : BV:32
=input.src.llvm-%arrayidx1
1 : 302522380 : BV:32
=input.src.llvm-%arrayidx
1 : 278603788 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302522380 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%inc
1 : 2052 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1277150859
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 43
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4096 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
972650123
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 43 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16400 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4100 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278611980 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4100 : BV:32
=input.src.llvm-%arrayidx1
1 : 302530572 : BV:32
=input.src.llvm-%arrayidx
1 : 278611980 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302530572 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%inc
1 : 4100 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
972650123
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 44
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 8192 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2021219654
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 44 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32784 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 8196 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278628364 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8196 : BV:32
=input.src.llvm-%arrayidx1
1 : 302546956 : BV:32
=input.src.llvm-%arrayidx
1 : 278628364 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302546956 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%inc
1 : 8196 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2021219654
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 45
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 16384 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
782926243
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 45 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65552 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 16388 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278661132 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16388 : BV:32
=input.src.llvm-%arrayidx1
1 : 302579724 : BV:32
=input.src.llvm-%arrayidx
1 : 278661132 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302579724 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%inc
1 : 16388 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
782926243
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 46
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1154847471
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 46 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 278723564 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%arrayidx1
1 : 302642156 : BV:32
=input.src.llvm-%arrayidx
1 : 278723564 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 302642156 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%inc
1 : 31996 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1154847471
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 47
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
378344903
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L2%1%0 nodece 47 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
378344903
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 48
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2140753203
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L2%1%0 nodece 48 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2140753203
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 49
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 49 , m_adder -> 132)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : ([ 379260928; 3759038463 ] -> 0, () -> (RAC: m_multiplier -> 49 , m_adder -> 132)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2577778675
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L2%1%0 nodece 49 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3759038460 { -535928836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=symbol.3
1 : 318767100 : BV:32
=symbol.1
1 : 278595584 : BV:32
=symbol.2
1 : 302514176 : BV:32
=dst_symbol_addr.1
1 : 278595584 : BV:32
=dst_symbol_addr.2
1 : 302514176 : BV:32
=dst_symbol_addr.3
1 : 318767100 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 49 , m_adder -> 132)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3759038460 { -535928836 } : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 302514176 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 278595584 : BV:32
=input.dst.mem
1 : ([ 379260928; 3759038463 ] -> 0, () -> (RAC: m_multiplier -> 49 , m_adder -> 132)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 302642175 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 318767100 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 278723583 : BV:32
=memlabel-mem-esp_begin
1 : 379260928 : BV:32
=stack.size
1 : 3379777536 { -915189760 } : BV:32
=memlabel-mem-esp_end
1 : 3759038463 { -535928833 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 318767103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2577778675
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 50
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
495592431
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 50 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 126214140 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 126214140 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
495592431
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 51
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
495592431
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 51 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 126214140 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 126214140 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 293862396 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 2348551116 { -1946416180 } : BV:32
=input.src.llvm-%arrayidx
1 : 293862396 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 2348551116 { -1946416180 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
495592431
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 52
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
495592431
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 52 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 126214140 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 126214140 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 293862412 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%arrayidx1
1 : 2348551132 { -1946416164 } : BV:32
=input.src.llvm-%arrayidx
1 : 293862412 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 2348551132 { -1946416164 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
495592431
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 53
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
495592431
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 53 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 126214140 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 126214140 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 293862428 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.src.llvm-%arrayidx1
1 : 2348551148 { -1946416148 } : BV:32
=input.src.llvm-%arrayidx
1 : 293862428 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 2348551148 { -1946416148 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 44 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
495592431
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 54
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 385875964 : BV:32
=symbol.1
1 : 42339344 : BV:32
=symbol.2
1 : 83827728 : BV:32
=dst_symbol_addr.1
1 : 42339344 : BV:32
=dst_symbol_addr.2
1 : 83827728 : BV:32
=dst_symbol_addr.3
1 : 385875964 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294959100 { -8196 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 83827728 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 42339344 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 83955727 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 385875964 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 42467343 : BV:32
=memlabel-mem-esp_begin
1 : 469762048 : BV:32
=stack.size
1 : 3825197056 { -469770240 } : BV:32
=memlabel-mem-esp_end
1 : 4294959103 { -8193 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 385875967 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1737594374
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 54 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294959100 { -8196 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 385875964 : BV:32
=symbol.1
1 : 42339344 : BV:32
=symbol.2
1 : 83827728 : BV:32
=dst_symbol_addr.1
1 : 42339344 : BV:32
=dst_symbol_addr.2
1 : 83827728 : BV:32
=dst_symbol_addr.3
1 : 385875964 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294959100 { -8196 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294959100 { -8196 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 83827728 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 42339344 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 83955727 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 385875964 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 42467343 : BV:32
=memlabel-mem-esp_begin
1 : 469762048 : BV:32
=stack.size
1 : 3825197056 { -469770240 } : BV:32
=memlabel-mem-esp_end
1 : 4294959103 { -8193 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 385875967 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1737594374
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 55
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2470542159
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 55 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2470542159
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 56
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2470542159
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 56 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 227770780757559766192568118460600433412 { -112511586163378697270806488971167778044 } : BV:128
=input.dst.exreg.2.1
1 : 227770780757559766192568118460600433412 { -112511586163378697270806488971167778044 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 2141044496 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=input.src.llvm-%1
1 : 1517456034 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 2141044496 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 805211148 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 1342311436 : BV:32
=input.src.llvm-%arrayidx
1 : 805211148 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 1517456034 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 1342311436 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 2874871428 { -1420095868 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=input.src.llvm-%add
1 : 2141044496 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2470542159
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 57
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2470542159
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)))
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 57 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 22174606643145962638549494098827524356 : BV:128
=input.dst.exreg.2.1
1 : 249945387400705728831117612559427957768 { -90336979520232734632256994872340253688 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 1798798880 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=input.src.llvm-%1
1 : 3673295394 { -621671902 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 1798798880 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 805211164 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%arrayidx1
1 : 1342311452 : BV:32
=input.src.llvm-%arrayidx
1 : 805211164 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 232 , m_adder -> 194)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 3673295394 { -621671902 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 1342311452 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%mul
1 : 279882884 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=input.src.llvm-%add
1 : 1798798880 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2470542159
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 58
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 751793756 : BV:32
=symbol.1
1 : 3705552752 { -589414544 } : BV:32
=symbol.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.1
1 : 3705552752 { -589414544 } : BV:32
=dst_symbol_addr.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.3
1 : 751793756 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2018271228 : BV:32
=input.src.llvm-mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3959320960 { -335646336 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3705552752 { -589414544 } : BV:32
=input.dst.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3959448959 { -335518337 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 751793756 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3705680751 { -589286545 } : BV:32
=memlabel-mem-esp_begin
1 : 1011781632 : BV:32
=stack.size
1 : 1006489600 : BV:32
=memlabel-mem-esp_end
1 : 2018271231 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 751793759 : BV:32
=unaliased_memslot.0
1 : 4211148413 { -83818883 } : BV:32
=unaliased_memslot.1
1 : 4166222047 { -128745249 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712665044
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 58 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2018271228 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 751793756 : BV:32
=symbol.1
1 : 3705552752 { -589414544 } : BV:32
=symbol.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.1
1 : 3705552752 { -589414544 } : BV:32
=dst_symbol_addr.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.3
1 : 751793756 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2018271228 : BV:32
=input.src.llvm-mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2018271228 : BV:32
=commonMEM.nonstack.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3959320960 { -335646336 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3705552752 { -589414544 } : BV:32
=input.dst.mem
1 : (( 751793756 ) -> 125, ( 2018271231 ) -> 0, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 2018271229 ) -> 0, ( 2018271230 ) -> 0, ( 2018271228 ) -> 0, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3959448959 { -335518337 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 751793756 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3705680751 { -589286545 } : BV:32
=memlabel-mem-esp_begin
1 : 1011781632 : BV:32
=stack.size
1 : 1006489600 : BV:32
=memlabel-mem-esp_end
1 : 2018271231 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 751793759 : BV:32
=unaliased_memslot.0
1 : 4211148413 { -83818883 } : BV:32
=unaliased_memslot.1
1 : 4166222047 { -128745249 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712665044
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 59
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 751793756 : BV:32
=symbol.1
1 : 3705552752 { -589414544 } : BV:32
=symbol.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.1
1 : 3705552752 { -589414544 } : BV:32
=dst_symbol_addr.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.3
1 : 751793756 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2018271228 : BV:32
=input.src.llvm-mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3959320960 { -335646336 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3705552752 { -589414544 } : BV:32
=input.dst.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3959448959 { -335518337 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 751793756 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3705680751 { -589286545 } : BV:32
=memlabel-mem-esp_begin
1 : 1011781632 : BV:32
=stack.size
1 : 1006489600 : BV:32
=memlabel-mem-esp_end
1 : 2018271231 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 751793759 : BV:32
=unaliased_memslot.0
1 : 4211148413 { -83818883 } : BV:32
=unaliased_memslot.1
1 : 4166222047 { -128745249 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712665044
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 59 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2018271228 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 191971062684151706603484583127342661434 { -148311304236786756859890024304425550022 } : BV:128
=input.dst.exreg.2.1
1 : 191971062684151706603484583127342661434 { -148311304236786756859890024304425550022 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 751793756 : BV:32
=symbol.1
1 : 3705552752 { -589414544 } : BV:32
=symbol.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.1
1 : 3705552752 { -589414544 } : BV:32
=dst_symbol_addr.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.3
1 : 751793756 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 3078166438 { -1216800858 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2018271228 : BV:32
=input.src.llvm-mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2018271228 : BV:32
=commonMEM.nonstack.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3959320960 { -335646336 } : BV:32
=input.src.llvm-%1
1 : 101058054 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 3078166438 { -1216800858 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 3705552764 { -589414532 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 3959320972 { -335646324 } : BV:32
=input.src.llvm-%arrayidx
1 : 3705552764 { -589414532 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3705552752 { -589414544 } : BV:32
=input.dst.mem
1 : (( 751793756 ) -> 125, ( 2018271231 ) -> 0, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 2018271229 ) -> 0, ( 2018271230 ) -> 0, ( 2018271228 ) -> 0, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 101058054 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 3959320972 { -335646324 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 2423015460 { -1871951836 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3959448959 { -335518337 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 751793756 : BV:32
=input.src.llvm-%add
1 : 3078166438 { -1216800858 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3705680751 { -589286545 } : BV:32
=memlabel-mem-esp_begin
1 : 1011781632 : BV:32
=stack.size
1 : 1006489600 : BV:32
=memlabel-mem-esp_end
1 : 2018271231 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 751793759 : BV:32
=unaliased_memslot.0
1 : 4211148413 { -83818883 } : BV:32
=unaliased_memslot.1
1 : 4166222047 { -128745249 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712665044
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 60
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 751793756 : BV:32
=symbol.1
1 : 3705552752 { -589414544 } : BV:32
=symbol.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.1
1 : 3705552752 { -589414544 } : BV:32
=dst_symbol_addr.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.3
1 : 751793756 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2018271228 : BV:32
=input.src.llvm-mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3959320960 { -335646336 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3705552752 { -589414544 } : BV:32
=input.dst.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3959448959 { -335518337 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 751793756 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3705680751 { -589286545 } : BV:32
=memlabel-mem-esp_begin
1 : 1011781632 : BV:32
=stack.size
1 : 1006489600 : BV:32
=memlabel-mem-esp_end
1 : 2018271231 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 751793759 : BV:32
=unaliased_memslot.0
1 : 4211148413 { -83818883 } : BV:32
=unaliased_memslot.1
1 : 4166222047 { -128745249 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712665044
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*((Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)))
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 60 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2018271228 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 191971062684151706603484583129661589540 { -148311304236786756859890024302106621916 } : BV:128
=input.dst.exreg.2.1
1 : 43659758368136787210883477157982537566 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 751793756 : BV:32
=symbol.1
1 : 3705552752 { -589414544 } : BV:32
=symbol.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.1
1 : 3705552752 { -589414544 } : BV:32
=dst_symbol_addr.2
1 : 3959320960 { -335646336 } : BV:32
=dst_symbol_addr.3
1 : 751793756 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 4180293686 { -114673610 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2018271228 : BV:32
=input.src.llvm-mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2018271228 : BV:32
=commonMEM.nonstack.mem
1 : (( 751793756 ) -> 125, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3959320960 { -335646336 } : BV:32
=input.src.llvm-%1
1 : 101058054 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 4180293686 { -114673610 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 3705552780 { -589414516 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%arrayidx1
1 : 3959320988 { -335646308 } : BV:32
=input.src.llvm-%arrayidx
1 : 3705552780 { -589414516 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3705552752 { -589414544 } : BV:32
=input.dst.mem
1 : (( 751793756 ) -> 125, ( 2018271231 ) -> 0, ( 751793758 ) -> 1, ( 3705552755 ) -> 248, ( 3705552753 ) -> 128, ( 2018271229 ) -> 0, ( 2018271230 ) -> 0, ( 2018271228 ) -> 0, ( 3705552752 ) -> 223, ( 3705552754 ) -> 83, ( 751793759 ) -> 251, () -> 6) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 101058054 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 3959320988 { -335646308 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 28 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%mul
1 : 2423015460 { -1871951836 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3959448959 { -335518337 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 751793756 : BV:32
=input.src.llvm-%add
1 : 4180293686 { -114673610 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3705680751 { -589286545 } : BV:32
=memlabel-mem-esp_begin
1 : 1011781632 : BV:32
=stack.size
1 : 1006489600 : BV:32
=memlabel-mem-esp_end
1 : 2018271231 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 751793759 : BV:32
=unaliased_memslot.0
1 : 4211148413 { -83818883 } : BV:32
=unaliased_memslot.1
1 : 4166222047 { -128745249 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712665044
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 61
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294932448 { -34848 } : BV:32
=symbol.1
1 : 1476231648 : BV:32
=symbol.2
1 : 1761478608 : BV:32
=dst_symbol_addr.1
1 : 1476231648 : BV:32
=dst_symbol_addr.2
1 : 1761478608 : BV:32
=dst_symbol_addr.3
1 : 4294932448 { -34848 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 872382460 : BV:32
=input.src.llvm-mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1761478608 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1476231648 : BV:32
=input.dst.mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1761606607 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294932448 { -34848 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1476359647 : BV:32
=memlabel-mem-esp_begin
1 : 33566720 : BV:32
=stack.size
1 : 838815744 : BV:32
=memlabel-mem-esp_end
1 : 872382463 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294932451 { -34845 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1752032933
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 61 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 872382460 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4294932448 { -34848 } : BV:32
=symbol.1
1 : 1476231648 : BV:32
=symbol.2
1 : 1761478608 : BV:32
=dst_symbol_addr.1
1 : 1476231648 : BV:32
=dst_symbol_addr.2
1 : 1761478608 : BV:32
=dst_symbol_addr.3
1 : 4294932448 { -34848 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 872382460 : BV:32
=input.src.llvm-mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 872382460 : BV:32
=commonMEM.nonstack.mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1761478608 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1476231648 : BV:32
=input.dst.mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1761606607 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294932448 { -34848 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1476359647 : BV:32
=memlabel-mem-esp_begin
1 : 33566720 : BV:32
=stack.size
1 : 838815744 : BV:32
=memlabel-mem-esp_end
1 : 872382463 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294932451 { -34845 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1752032933
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 62
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294932448 { -34848 } : BV:32
=symbol.1
1 : 1476231648 : BV:32
=symbol.2
1 : 1761478608 : BV:32
=dst_symbol_addr.1
1 : 1476231648 : BV:32
=dst_symbol_addr.2
1 : 1761478608 : BV:32
=dst_symbol_addr.3
1 : 4294932448 { -34848 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 872382460 : BV:32
=input.src.llvm-mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1761478608 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1476231648 : BV:32
=input.dst.mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1761606607 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294932448 { -34848 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1476359647 : BV:32
=memlabel-mem-esp_begin
1 : 33566720 : BV:32
=stack.size
1 : 838815744 : BV:32
=memlabel-mem-esp_end
1 : 872382463 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294932451 { -34845 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1752032933
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 62 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 872382460 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4294932448 { -34848 } : BV:32
=symbol.1
1 : 1476231648 : BV:32
=symbol.2
1 : 1761478608 : BV:32
=dst_symbol_addr.1
1 : 1476231648 : BV:32
=dst_symbol_addr.2
1 : 1761478608 : BV:32
=dst_symbol_addr.3
1 : 4294932448 { -34848 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 872382460 : BV:32
=input.src.llvm-mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 872382460 : BV:32
=commonMEM.nonstack.mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1761478608 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 1476231660 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 1761478620 : BV:32
=input.src.llvm-%arrayidx
1 : 1476231660 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1476231648 : BV:32
=input.dst.mem
1 : (( 1476231648 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 1761478620 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1761606607 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294932448 { -34848 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1476359647 : BV:32
=memlabel-mem-esp_begin
1 : 33566720 : BV:32
=stack.size
1 : 838815744 : BV:32
=memlabel-mem-esp_end
1 : 872382463 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294932451 { -34845 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1752032933
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 63
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1870073347 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1870073347 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 1870073347 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 67108864 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1917372618
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 63 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1870073347 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1870073347 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 1870073347 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 67108864 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1917372618
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 64
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147581392 { -2147385904 } : BV:32
=symbol.1
1 : 1073711568 : BV:32
=symbol.2
1 : 2147382000 : BV:32
=dst_symbol_addr.1
1 : 1073711568 : BV:32
=dst_symbol_addr.2
1 : 2147382000 : BV:32
=dst_symbol_addr.3
1 : 2147581392 { -2147385904 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2147382000 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073711568 : BV:32
=input.dst.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147509999 { -2147457297 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147581392 { -2147385904 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073839567 : BV:32
=memlabel-mem-esp_begin
1 : 2148605952 { -2146361344 } : BV:32
=stack.size
1 : 2146357248 : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147581395 { -2147385901 } : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1448448708
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 64 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294963196 { -4100 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2147581392 { -2147385904 } : BV:32
=symbol.1
1 : 1073711568 : BV:32
=symbol.2
1 : 2147382000 : BV:32
=dst_symbol_addr.1
1 : 1073711568 : BV:32
=dst_symbol_addr.2
1 : 2147382000 : BV:32
=dst_symbol_addr.3
1 : 2147581392 { -2147385904 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294963196 { -4100 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147382000 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073711568 : BV:32
=input.dst.mem
1 : (( 4294963198 ) -> 0, ( 4294963196 ) -> 0, ( 4294963197 ) -> 0, ( 4294963199 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147509999 { -2147457297 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147581392 { -2147385904 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1073839567 : BV:32
=memlabel-mem-esp_begin
1 : 2148605952 { -2146361344 } : BV:32
=stack.size
1 : 2146357248 : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147581395 { -2147385901 } : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1448448708
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 65
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147581392 { -2147385904 } : BV:32
=symbol.1
1 : 1073711568 : BV:32
=symbol.2
1 : 2147382000 : BV:32
=dst_symbol_addr.1
1 : 1073711568 : BV:32
=dst_symbol_addr.2
1 : 2147382000 : BV:32
=dst_symbol_addr.3
1 : 2147581392 { -2147385904 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2147382000 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073711568 : BV:32
=input.dst.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2147509999 { -2147457297 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147581392 { -2147385904 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1073839567 : BV:32
=memlabel-mem-esp_begin
1 : 2148605952 { -2146361344 } : BV:32
=stack.size
1 : 2146357248 : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147581395 { -2147385901 } : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1448448708
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 65 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294963196 { -4100 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 5332529519004214072319016198046155265 : BV:128
=input.dst.exreg.2.1
1 : 5332529519004214072319016198046155265 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2147581392 { -2147385904 } : BV:32
=symbol.1
1 : 1073711568 : BV:32
=symbol.2
1 : 2147382000 : BV:32
=dst_symbol_addr.1
1 : 1073711568 : BV:32
=dst_symbol_addr.2
1 : 2147382000 : BV:32
=dst_symbol_addr.3
1 : 2147581392 { -2147385904 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 269223940 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294963196 { -4100 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147382000 : BV:32
=input.src.llvm-%1
1 : 16843009 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 269223940 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 1073711580 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 2147382012 : BV:32
=input.src.llvm-%arrayidx
1 : 1073711580 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073711568 : BV:32
=input.dst.mem
1 : (( 4294963198 ) -> 0, ( 4294963196 ) -> 0, ( 4294963197 ) -> 0, ( 4294963199 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 16843009 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 2147382012 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 67305985 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147509999 { -2147457297 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147581392 { -2147385904 } : BV:32
=input.src.llvm-%add
1 : 269223940 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1073839567 : BV:32
=memlabel-mem-esp_begin
1 : 2148605952 { -2146361344 } : BV:32
=stack.size
1 : 2146357248 : BV:32
=memlabel-mem-esp_end
1 : 4294963199 { -4097 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147581395 { -2147385901 } : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1448448708
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 66
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1618973847
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 66 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 126214140 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 126214140 : BV:32
=commonMEM.nonstack.mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1618973847
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 67
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1618973847
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 67 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 126214140 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2617114608 { -1677852688 } : BV:32
=symbol.1
1 : 293862384 : BV:32
=symbol.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.1
1 : 293862384 : BV:32
=dst_symbol_addr.2
1 : 2348551104 { -1946416192 } : BV:32
=dst_symbol_addr.3
1 : 2617114608 { -1677852688 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 126214140 : BV:32
=input.src.llvm-mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 126214140 : BV:32
=commonMEM.nonstack.mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2348551104 { -1946416192 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 293862396 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 2348551116 { -1946416180 } : BV:32
=input.src.llvm-%arrayidx
1 : 293862396 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 293862384 : BV:32
=input.dst.mem
1 : (( 2348551104 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 2348551116 { -1946416180 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2348679103 { -1946288193 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2617114608 { -1677852688 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 293990383 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 59105280 : BV:32
=memlabel-mem-esp_end
1 : 126214143 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2617114611 { -1677852685 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1618973847
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 68
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
90568974
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 68 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
90568974
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 69
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1123548156 : BV:32
=symbol.1
1 : 1258200160 : BV:32
=symbol.2
1 : 1694497472 : BV:32
=dst_symbol_addr.1
1 : 1258200160 : BV:32
=dst_symbol_addr.2
1 : 1694497472 : BV:32
=dst_symbol_addr.3
1 : 1123548156 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 478216188 : BV:32
=input.src.llvm-mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1694497472 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1258200160 : BV:32
=input.dst.mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1694625471 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1123548156 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1258328159 : BV:32
=memlabel-mem-esp_begin
1 : 150532096 : BV:32
=stack.size
1 : 327684096 : BV:32
=memlabel-mem-esp_end
1 : 478216191 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1123548159 : BV:32
=unaliased_memslot.0
1 : 18350757 : BV:32
=unaliased_memslot.1
1 : 2822459327 { -1472507969 } : BV:32
=unaliased_memslot.2
1 : 1801453625 : BV:32
=unaliased_memslot.3
1 : 737824815 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1273860542
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 69 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 478216188 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1123548156 : BV:32
=symbol.1
1 : 1258200160 : BV:32
=symbol.2
1 : 1694497472 : BV:32
=dst_symbol_addr.1
1 : 1258200160 : BV:32
=dst_symbol_addr.2
1 : 1694497472 : BV:32
=dst_symbol_addr.3
1 : 1123548156 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 478216188 : BV:32
=input.src.llvm-mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 478216188 : BV:32
=commonMEM.nonstack.mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1694497472 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1258200160 : BV:32
=input.dst.mem
1 : (( 478216188 ) -> 0, ( 478216191 ) -> 0, ( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 478216190 ) -> 0, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 478216189 ) -> 0, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1694625471 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1123548156 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1258328159 : BV:32
=memlabel-mem-esp_begin
1 : 150532096 : BV:32
=stack.size
1 : 327684096 : BV:32
=memlabel-mem-esp_end
1 : 478216191 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1123548159 : BV:32
=unaliased_memslot.0
1 : 18350757 : BV:32
=unaliased_memslot.1
1 : 2822459327 { -1472507969 } : BV:32
=unaliased_memslot.2
1 : 1801453625 : BV:32
=unaliased_memslot.3
1 : 737824815 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1273860542
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 70
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1123548156 : BV:32
=symbol.1
1 : 1258200160 : BV:32
=symbol.2
1 : 1694497472 : BV:32
=dst_symbol_addr.1
1 : 1258200160 : BV:32
=dst_symbol_addr.2
1 : 1694497472 : BV:32
=dst_symbol_addr.3
1 : 1123548156 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 478216188 : BV:32
=input.src.llvm-mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1694497472 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1258200160 : BV:32
=input.dst.mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1694625471 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1123548156 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1258328159 : BV:32
=memlabel-mem-esp_begin
1 : 150532096 : BV:32
=stack.size
1 : 327684096 : BV:32
=memlabel-mem-esp_end
1 : 478216191 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1123548159 : BV:32
=unaliased_memslot.0
1 : 18350757 : BV:32
=unaliased_memslot.1
1 : 2822459327 { -1472507969 } : BV:32
=unaliased_memslot.2
1 : 1801453625 : BV:32
=unaliased_memslot.3
1 : 737824815 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1273860542
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 70 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 478216188 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 148717154370186562795326840736050190592 : BV:128
=input.dst.exreg.2.1
1 : 148717154370186562795326840736050190592 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1123548156 : BV:32
=symbol.1
1 : 1258200160 : BV:32
=symbol.2
1 : 1694497472 : BV:32
=dst_symbol_addr.1
1 : 1258200160 : BV:32
=dst_symbol_addr.2
1 : 1694497472 : BV:32
=dst_symbol_addr.3
1 : 1123548156 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 1738237921 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 478216188 : BV:32
=input.src.llvm-mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 478216188 : BV:32
=commonMEM.nonstack.mem
1 : (( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1694497472 : BV:32
=input.src.llvm-%1
1 : 1347440720 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 1738237921 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 1258200172 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 1694497484 : BV:32
=input.src.llvm-%arrayidx
1 : 1258200172 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1258200160 : BV:32
=input.dst.mem
1 : (( 478216188 ) -> 0, ( 478216191 ) -> 0, ( 1258200172 ) -> 57, ( 1694497479 ) -> 43, ( 1258200164 ) -> 191, ( 478216190 ) -> 0, ( 1694497476 ) -> 47, ( 1258200165 ) -> 79, ( 1258200166 ) -> 59, ( 1123548159 ) -> 1, ( 1123548156 ) -> 165, ( 478216189 ) -> 0, ( 1123548158 ) -> 24, ( 1258200167 ) -> 168, ( 1123548157 ) -> 2, ( 1258200173 ) -> 0, ( 1258200174 ) -> 96, ( 1258200175 ) -> 107, ( 1694497478 ) -> 250, () -> 80) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 1801453625 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 1694497484 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 1877074384 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1694625471 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1123548156 : BV:32
=input.src.llvm-%add
1 : 1738237921 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1258328159 : BV:32
=memlabel-mem-esp_begin
1 : 150532096 : BV:32
=stack.size
1 : 327684096 : BV:32
=memlabel-mem-esp_end
1 : 478216191 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1123548159 : BV:32
=unaliased_memslot.0
1 : 18350757 : BV:32
=unaliased_memslot.1
1 : 2822459327 { -1472507969 } : BV:32
=unaliased_memslot.2
1 : 1801453625 : BV:32
=unaliased_memslot.3
1 : 737824815 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1273860542
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 71
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3842498816 { -452468480 } : BV:32
=symbol.1
1 : 1258614016 : BV:32
=symbol.2
1 : 1815446528 : BV:32
=dst_symbol_addr.1
1 : 1258614016 : BV:32
=dst_symbol_addr.2
1 : 1815446528 : BV:32
=dst_symbol_addr.3
1 : 3842498816 { -452468480 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073741820 : BV:32
=input.src.llvm-mem
1 : (( 1258614028 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1258614028 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1815446528 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1258614016 : BV:32
=input.dst.mem
1 : (( 1258614028 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1815574527 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3842498816 { -452468480 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1258742015 : BV:32
=memlabel-mem-esp_begin
1 : 360402944 : BV:32
=stack.size
1 : 713338880 : BV:32
=memlabel-mem-esp_end
1 : 1073741823 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3842498819 { -452468477 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1551030183
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 71 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073741820 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3842498816 { -452468480 } : BV:32
=symbol.1
1 : 1258614016 : BV:32
=symbol.2
1 : 1815446528 : BV:32
=dst_symbol_addr.1
1 : 1258614016 : BV:32
=dst_symbol_addr.2
1 : 1815446528 : BV:32
=dst_symbol_addr.3
1 : 3842498816 { -452468480 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073741820 : BV:32
=input.src.llvm-mem
1 : (( 1258614028 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1073741820 : BV:32
=commonMEM.nonstack.mem
1 : (( 1258614028 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1815446528 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1258614016 : BV:32
=input.dst.mem
1 : (( 1258614028 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1815574527 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3842498816 { -452468480 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1258742015 : BV:32
=memlabel-mem-esp_begin
1 : 360402944 : BV:32
=stack.size
1 : 713338880 : BV:32
=memlabel-mem-esp_end
1 : 1073741823 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3842498819 { -452468477 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1551030183
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 72
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1870073347 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1870073347 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 1870073347 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 16777216 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
259299706
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 72 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1870073347 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1870073347 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 1870073347 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 16777216 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
259299706
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 73
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2186149892 { -2108817404 } : BV:32
=symbol.1
1 : 2188265472 { -2106701824 } : BV:32
=symbol.2
1 : 2186151920 { -2108815376 } : BV:32
=dst_symbol_addr.1
1 : 2188265472 { -2106701824 } : BV:32
=dst_symbol_addr.2
1 : 2186151920 { -2108815376 } : BV:32
=dst_symbol_addr.3
1 : 2186149892 { -2108817404 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2186084348 { -2108882948 } : BV:32
=input.src.llvm-mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2186151920 { -2108815376 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2188265472 { -2106701824 } : BV:32
=input.dst.mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2186279919 { -2108687377 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2186149892 { -2108817404 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2188393471 { -2106573825 } : BV:32
=memlabel-mem-esp_begin
1 : 37748736 : BV:32
=stack.size
1 : 2148335616 { -2146631680 } : BV:32
=memlabel-mem-esp_end
1 : 2186084351 { -2108882945 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2186149895 { -2108817401 } : BV:32
=unaliased_memslot.6
1 : 256 : BV:32
=unaliased_memslot.0
1 : 256 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 22528 : BV:32
=unaliased_memslot.3
1 : 256 : BV:32
=unaliased_memslot.4
1 : 256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1636958517
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 73 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2186084348 { -2108882948 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2186149892 { -2108817404 } : BV:32
=symbol.1
1 : 2188265472 { -2106701824 } : BV:32
=symbol.2
1 : 2186151920 { -2108815376 } : BV:32
=dst_symbol_addr.1
1 : 2188265472 { -2106701824 } : BV:32
=dst_symbol_addr.2
1 : 2186151920 { -2108815376 } : BV:32
=dst_symbol_addr.3
1 : 2186149892 { -2108817404 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2186084348 { -2108882948 } : BV:32
=input.src.llvm-mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2186084348 { -2108882948 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2186151920 { -2108815376 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2188265472 { -2106701824 } : BV:32
=input.dst.mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2186279919 { -2108687377 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2186149892 { -2108817404 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 2188393471 { -2106573825 } : BV:32
=memlabel-mem-esp_begin
1 : 37748736 : BV:32
=stack.size
1 : 2148335616 { -2146631680 } : BV:32
=memlabel-mem-esp_end
1 : 2186084351 { -2108882945 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2186149895 { -2108817401 } : BV:32
=unaliased_memslot.6
1 : 256 : BV:32
=unaliased_memslot.0
1 : 256 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 22528 : BV:32
=unaliased_memslot.3
1 : 256 : BV:32
=unaliased_memslot.4
1 : 256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1636958517
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 74
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2186149892 { -2108817404 } : BV:32
=symbol.1
1 : 2188265472 { -2106701824 } : BV:32
=symbol.2
1 : 2186151920 { -2108815376 } : BV:32
=dst_symbol_addr.1
1 : 2188265472 { -2106701824 } : BV:32
=dst_symbol_addr.2
1 : 2186151920 { -2108815376 } : BV:32
=dst_symbol_addr.3
1 : 2186149892 { -2108817404 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2186084348 { -2108882948 } : BV:32
=input.src.llvm-mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2186151920 { -2108815376 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2188265472 { -2106701824 } : BV:32
=input.dst.mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2186279919 { -2108687377 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2186149892 { -2108817404 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2188393471 { -2106573825 } : BV:32
=memlabel-mem-esp_begin
1 : 37748736 : BV:32
=stack.size
1 : 2148335616 { -2146631680 } : BV:32
=memlabel-mem-esp_end
1 : 2186084351 { -2108882945 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2186149895 { -2108817401 } : BV:32
=unaliased_memslot.6
1 : 256 : BV:32
=unaliased_memslot.0
1 : 256 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 22528 : BV:32
=unaliased_memslot.3
1 : 256 : BV:32
=unaliased_memslot.4
1 : 256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1636958517
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 74 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2186084348 { -2108882948 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 281474976710656 : BV:128
=input.dst.exreg.2.1
1 : 281474976710656 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2186149892 { -2108817404 } : BV:32
=symbol.1
1 : 2188265472 { -2106701824 } : BV:32
=symbol.2
1 : 2186151920 { -2108815376 } : BV:32
=dst_symbol_addr.1
1 : 2188265472 { -2106701824 } : BV:32
=dst_symbol_addr.2
1 : 2186151920 { -2108815376 } : BV:32
=dst_symbol_addr.3
1 : 2186149892 { -2108817404 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 65536 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2186084348 { -2108882948 } : BV:32
=input.src.llvm-mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2186084348 { -2108882948 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2186151920 { -2108815376 } : BV:32
=input.src.llvm-%1
1 : 22528 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 65536 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 2188265484 { -2106701812 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 2186151932 { -2108815364 } : BV:32
=input.src.llvm-%arrayidx
1 : 2188265484 { -2106701812 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2188265472 { -2106701824 } : BV:32
=input.dst.mem
1 : (( 2188265477 ) -> 1, ( 2188265481 ) -> 1, ( 2186151933 ) -> 88, ( 2186151925 ) -> 1, ( 2186149893 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 2186151932 { -2108815364 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2186279919 { -2108687377 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2186149892 { -2108817404 } : BV:32
=input.src.llvm-%add
1 : 65536 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 2188393471 { -2106573825 } : BV:32
=memlabel-mem-esp_begin
1 : 37748736 : BV:32
=stack.size
1 : 2148335616 { -2146631680 } : BV:32
=memlabel-mem-esp_end
1 : 2186084351 { -2108882945 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2186149895 { -2108817401 } : BV:32
=unaliased_memslot.6
1 : 256 : BV:32
=unaliased_memslot.0
1 : 256 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 22528 : BV:32
=unaliased_memslot.3
1 : 256 : BV:32
=unaliased_memslot.4
1 : 256 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1636958517
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 75
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3216895996 { -1078071300 } : BV:32
=symbol.1
1 : 2679894000 { -1615073296 } : BV:32
=symbol.2
1 : 3216509888 { -1078457408 } : BV:32
=dst_symbol_addr.1
1 : 2679894000 { -1615073296 } : BV:32
=dst_symbol_addr.2
1 : 3216509888 { -1078457408 } : BV:32
=dst_symbol_addr.3
1 : 3216895996 { -1078071300 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1633538044 : BV:32
=input.src.llvm-mem
1 : (( 3216509900 ) -> 15, ( 2679894008 ) -> 16, ( 2679894004 ) -> 10, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3216509900 ) -> 15, ( 2679894008 ) -> 16, ( 2679894004 ) -> 10, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3216509888 { -1078457408 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2679894000 { -1615073296 } : BV:32
=input.dst.mem
1 : (( 3216509900 ) -> 15, ( 2679894008 ) -> 16, ( 2679894004 ) -> 10, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3216637887 { -1078329409 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3216895996 { -1078071300 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2680021999 { -1614945297 } : BV:32
=memlabel-mem-esp_begin
1 : 272891904 : BV:32
=stack.size
1 : 1360646144 : BV:32
=memlabel-mem-esp_end
1 : 1633538047 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3216895999 { -1078071297 } : BV:32
=unaliased_memslot.6
1 : 16 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 15 : BV:32
=unaliased_memslot.3
1 : 10 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1946035280
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 75 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1633538044 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3216895996 { -1078071300 } : BV:32
=symbol.1
1 : 2679894000 { -1615073296 } : BV:32
=symbol.2
1 : 3216509888 { -1078457408 } : BV:32
=dst_symbol_addr.1
1 : 2679894000 { -1615073296 } : BV:32
=dst_symbol_addr.2
1 : 3216509888 { -1078457408 } : BV:32
=dst_symbol_addr.3
1 : 3216895996 { -1078071300 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1633538044 : BV:32
=input.src.llvm-mem
1 : (( 3216509900 ) -> 15, ( 2679894008 ) -> 16, ( 2679894004 ) -> 10, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1633538044 : BV:32
=commonMEM.nonstack.mem
1 : (( 3216509900 ) -> 15, ( 2679894008 ) -> 16, ( 2679894004 ) -> 10, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3216509888 { -1078457408 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2679894000 { -1615073296 } : BV:32
=input.dst.mem
1 : (( 3216509900 ) -> 15, ( 2679894008 ) -> 16, ( 2679894004 ) -> 10, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3216637887 { -1078329409 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3216895996 { -1078071300 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 2680021999 { -1614945297 } : BV:32
=memlabel-mem-esp_begin
1 : 272891904 : BV:32
=stack.size
1 : 1360646144 : BV:32
=memlabel-mem-esp_end
1 : 1633538047 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3216895999 { -1078071297 } : BV:32
=unaliased_memslot.6
1 : 16 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.5
1 : 15 : BV:32
=unaliased_memslot.3
1 : 10 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1946035280
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 76
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
215207056
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 76 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
215207056
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 77
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
215207056
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 77 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 1 : BV:128
=input.dst.exreg.2.1
1 : 1 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 1 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 805211148 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 1342311436 : BV:32
=input.src.llvm-%arrayidx
1 : 805211148 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 805211136 ) -> 1, ( 1342311424 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 1342311436 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=input.src.llvm-%add
1 : 1 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
215207056
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 78
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294963196 { -4100 } : BV:32
=symbol.1
1 : 4294707216 { -260080 } : BV:32
=symbol.2
1 : 101392 : BV:32
=dst_symbol_addr.1
1 : 4294707216 { -260080 } : BV:32
=dst_symbol_addr.2
1 : 101392 : BV:32
=dst_symbol_addr.3
1 : 4294963196 { -4100 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (( 4294707220 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4294707220 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 101392 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294707216 { -260080 } : BV:32
=input.dst.mem
1 : (( 4294707220 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 229391 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294963196 { -4100 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294835215 { -132081 } : BV:32
=memlabel-mem-esp_begin
1 : 245760 : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294963199 { -4097 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
934490504
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 78 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294692860 { -274436 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4294963196 { -4100 } : BV:32
=symbol.1
1 : 4294707216 { -260080 } : BV:32
=symbol.2
1 : 101392 : BV:32
=dst_symbol_addr.1
1 : 4294707216 { -260080 } : BV:32
=dst_symbol_addr.2
1 : 101392 : BV:32
=dst_symbol_addr.3
1 : 4294963196 { -4100 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294692860 { -274436 } : BV:32
=input.src.llvm-mem
1 : (( 4294707220 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294692860 { -274436 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4294707220 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 101392 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294707216 { -260080 } : BV:32
=input.dst.mem
1 : (( 4294707220 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 229391 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294963196 { -4100 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4294835215 { -132081 } : BV:32
=memlabel-mem-esp_begin
1 : 245760 : BV:32
=stack.size
1 : 4294447104 { -520192 } : BV:32
=memlabel-mem-esp_end
1 : 4294692863 { -274433 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294963199 { -4097 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
934490504
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 79
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2087145472
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 79 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, ( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2087145472
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 80
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2087145472
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 80 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 5332529519004214072029939193646088705 : BV:128
=input.dst.exreg.2.1
1 : 5332529519004214072029939193646088705 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1870073344 : BV:32
=symbol.1
1 : 805211136 : BV:32
=symbol.2
1 : 1342311424 : BV:32
=dst_symbol_addr.1
1 : 805211136 : BV:32
=dst_symbol_addr.2
1 : 1342311424 : BV:32
=dst_symbol_addr.3
1 : 1870073344 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 201917955 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1342311424 : BV:32
=input.src.llvm-%1
1 : 16843009 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 201917955 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 805211148 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 1342311436 : BV:32
=input.src.llvm-%arrayidx
1 : 805211148 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 805211136 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, ( 805211142 ) -> 0, ( 805211141 ) -> 0, ( 1342311430 ) -> 0, ( 1342311429 ) -> 0, ( 1342311431 ) -> 0, ( 1342311428 ) -> 0, ( 805211143 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 16843009 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 1342311436 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 67305985 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1342439423 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1870073344 : BV:32
=input.src.llvm-%add
1 : 201917955 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 805339135 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1870073347 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2087145472
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 81
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4223544816 { -71422480 } : BV:32
=symbol.1
1 : 3938201072 { -356766224 } : BV:32
=symbol.2
1 : 4068114944 { -226852352 } : BV:32
=dst_symbol_addr.1
1 : 3938201072 { -356766224 } : BV:32
=dst_symbol_addr.2
1 : 4068114944 { -226852352 } : BV:32
=dst_symbol_addr.3
1 : 4223544816 { -71422480 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1337819132 : BV:32
=input.src.llvm-mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4068114944 { -226852352 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3938201072 { -356766224 } : BV:32
=input.dst.mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4068242943 { -226724353 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4223544816 { -71422480 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3938329071 { -356638225 } : BV:32
=memlabel-mem-esp_begin
1 : 981237760 : BV:32
=stack.size
1 : 356581376 : BV:32
=memlabel-mem-esp_end
1 : 1337819135 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4223544819 { -71422477 } : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 3 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.4
1 : 121 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
837836795
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 81 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1337819132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4223544816 { -71422480 } : BV:32
=symbol.1
1 : 3938201072 { -356766224 } : BV:32
=symbol.2
1 : 4068114944 { -226852352 } : BV:32
=dst_symbol_addr.1
1 : 3938201072 { -356766224 } : BV:32
=dst_symbol_addr.2
1 : 4068114944 { -226852352 } : BV:32
=dst_symbol_addr.3
1 : 4223544816 { -71422480 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1337819132 : BV:32
=input.src.llvm-mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1337819132 : BV:32
=commonMEM.nonstack.mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4068114944 { -226852352 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3938201072 { -356766224 } : BV:32
=input.dst.mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4068242943 { -226724353 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4223544816 { -71422480 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3938329071 { -356638225 } : BV:32
=memlabel-mem-esp_begin
1 : 981237760 : BV:32
=stack.size
1 : 356581376 : BV:32
=memlabel-mem-esp_end
1 : 1337819135 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4223544819 { -71422477 } : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 3 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.4
1 : 121 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
837836795
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 82
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4223544816 { -71422480 } : BV:32
=symbol.1
1 : 3938201072 { -356766224 } : BV:32
=symbol.2
1 : 4068114944 { -226852352 } : BV:32
=dst_symbol_addr.1
1 : 3938201072 { -356766224 } : BV:32
=dst_symbol_addr.2
1 : 4068114944 { -226852352 } : BV:32
=dst_symbol_addr.3
1 : 4223544816 { -71422480 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1337819132 : BV:32
=input.src.llvm-mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4068114944 { -226852352 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3938201072 { -356766224 } : BV:32
=input.dst.mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4068242943 { -226724353 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4223544816 { -71422480 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3938329071 { -356638225 } : BV:32
=memlabel-mem-esp_begin
1 : 981237760 : BV:32
=stack.size
1 : 356581376 : BV:32
=memlabel-mem-esp_end
1 : 1337819135 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4223544819 { -71422477 } : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 3 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.4
1 : 121 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
837836795
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)*(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 82 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1337819132 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 2232056032944625549312 : BV:128
=input.dst.exreg.2.1
1 : 2232056032944625549312 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4223544816 { -71422480 } : BV:32
=symbol.1
1 : 3938201072 { -356766224 } : BV:32
=symbol.2
1 : 4068114944 { -226852352 } : BV:32
=dst_symbol_addr.1
1 : 3938201072 { -356766224 } : BV:32
=dst_symbol_addr.2
1 : 4068114944 { -226852352 } : BV:32
=dst_symbol_addr.3
1 : 4223544816 { -71422480 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 127 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1337819132 : BV:32
=input.src.llvm-mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1337819132 : BV:32
=commonMEM.nonstack.mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4068114944 { -226852352 } : BV:32
=input.src.llvm-%1
1 : 1 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 127 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 3938201084 { -356766212 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 4068114956 { -226852340 } : BV:32
=input.src.llvm-%arrayidx
1 : 3938201084 { -356766212 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3938201072 { -356766224 } : BV:32
=input.dst.mem
1 : (( 4068114956 ) -> 1, ( 4068114948 ) -> 3, ( 3938201076 ) -> 2, ( 4068114952 ) -> 1, ( 3938201080 ) -> 121, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 4068114956 { -226852340 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 12 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4068242943 { -226724353 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4223544816 { -71422480 } : BV:32
=input.src.llvm-%add
1 : 127 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3938329071 { -356638225 } : BV:32
=memlabel-mem-esp_begin
1 : 981237760 : BV:32
=stack.size
1 : 356581376 : BV:32
=memlabel-mem-esp_end
1 : 1337819135 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4223544819 { -71422477 } : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.2
1 : 3 : BV:32
=unaliased_memslot.5
1 : 1 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.4
1 : 121 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
837836795
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 83
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4292870140 { -2097156 } : BV:32
=symbol.1
1 : 920592 : BV:32
=symbol.2
1 : 4292340752 { -2626544 } : BV:32
=dst_symbol_addr.1
1 : 920592 : BV:32
=dst_symbol_addr.2
1 : 4292340752 { -2626544 } : BV:32
=dst_symbol_addr.3
1 : 4292870140 { -2097156 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292337660 { -2629636 } : BV:32
=input.src.llvm-mem
1 : (( 920600 ) -> 115, ( 920597 ) -> 0, ( 4292340761 ) -> 0, ( 920605 ) -> 0, ( 920601 ) -> 0, ( 4292340757 ) -> 0, ( 4292340764 ) -> 31, ( 4292340765 ) -> 0, ( 920604 ) -> 31, ( 4292340756 ) -> 0, ( 920596 ) -> 0, () -> 107) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 920600 ) -> 115, ( 920597 ) -> 0, ( 4292340761 ) -> 0, ( 920605 ) -> 0, ( 920601 ) -> 0, ( 4292340757 ) -> 0, ( 4292340764 ) -> 31, ( 4292340765 ) -> 0, ( 920604 ) -> 31, ( 4292340756 ) -> 0, ( 920596 ) -> 0, () -> 107) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292340752 { -2626544 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 920592 : BV:32
=input.dst.mem
1 : (( 920600 ) -> 115, ( 920597 ) -> 0, ( 4292340761 ) -> 0, ( 920605 ) -> 0, ( 920601 ) -> 0, ( 4292340757 ) -> 0, ( 4292340764 ) -> 31, ( 4292340765 ) -> 0, ( 920604 ) -> 31, ( 4292340756 ) -> 0, ( 920596 ) -> 0, () -> 107) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4292468751 { -2498545 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4292870140 { -2097156 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1048591 : BV:32
=memlabel-mem-esp_begin
1 : 1052672 : BV:32
=stack.size
1 : 4291284992 { -3682304 } : BV:32
=memlabel-mem-esp_end
1 : 4292337663 { -2629633 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4292870143 { -2097153 } : BV:32
=unaliased_memslot.0
1 : 1802174464 : BV:32
=unaliased_memslot.1
1 : 1802174495 : BV:32
=unaliased_memslot.2
1 : 1802174464 : BV:32
=unaliased_memslot.5
1 : 1802174571 : BV:32
=unaliased_memslot.3
1 : 1802174495 : BV:32
=unaliased_memslot.4
1 : 1802174579 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1409985199
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 83 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4292337660 { -2629636 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4292870140 { -2097156 } : BV:32
=symbol.1
1 : 920592 : BV:32
=symbol.2
1 : 4292340752 { -2626544 } : BV:32
=dst_symbol_addr.1
1 : 920592 : BV:32
=dst_symbol_addr.2
1 : 4292340752 { -2626544 } : BV:32
=dst_symbol_addr.3
1 : 4292870140 { -2097156 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292337660 { -2629636 } : BV:32
=input.src.llvm-mem
1 : (( 920600 ) -> 115, ( 920597 ) -> 0, ( 4292340761 ) -> 0, ( 920605 ) -> 0, ( 920601 ) -> 0, ( 4292340757 ) -> 0, ( 4292340764 ) -> 31, ( 4292340765 ) -> 0, ( 920604 ) -> 31, ( 4292340756 ) -> 0, ( 920596 ) -> 0, () -> 107) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4292337660 { -2629636 } : BV:32
=commonMEM.nonstack.mem
1 : (( 920600 ) -> 115, ( 920597 ) -> 0, ( 4292340761 ) -> 0, ( 920605 ) -> 0, ( 920601 ) -> 0, ( 4292340757 ) -> 0, ( 4292340764 ) -> 31, ( 4292340765 ) -> 0, ( 920604 ) -> 31, ( 4292340756 ) -> 0, ( 920596 ) -> 0, () -> 107) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4292340752 { -2626544 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 920592 : BV:32
=input.dst.mem
1 : (( 920600 ) -> 115, ( 920597 ) -> 0, ( 4292340761 ) -> 0, ( 920605 ) -> 0, ( 920601 ) -> 0, ( 4292340757 ) -> 0, ( 4292340764 ) -> 31, ( 4292340765 ) -> 0, ( 920604 ) -> 31, ( 4292340756 ) -> 0, ( 920596 ) -> 0, ( 4292337660 ) -> 0, ( 4292337663 ) -> 0, ( 4292337661 ) -> 0, ( 4292337662 ) -> 0, () -> 107) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4292468751 { -2498545 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4292870140 { -2097156 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1048591 : BV:32
=memlabel-mem-esp_begin
1 : 1052672 : BV:32
=stack.size
1 : 4291284992 { -3682304 } : BV:32
=memlabel-mem-esp_end
1 : 4292337663 { -2629633 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4292870143 { -2097153 } : BV:32
=unaliased_memslot.0
1 : 1802174464 : BV:32
=unaliased_memslot.1
1 : 1802174495 : BV:32
=unaliased_memslot.2
1 : 1802174464 : BV:32
=unaliased_memslot.5
1 : 1802174571 : BV:32
=unaliased_memslot.3
1 : 1802174495 : BV:32
=unaliased_memslot.4
1 : 1802174579 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1409985199
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 84
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1778249712 : BV:32
=symbol.1
1 : 972815344 : BV:32
=symbol.2
1 : 1777863616 : BV:32
=dst_symbol_addr.1
1 : 972815344 : BV:32
=dst_symbol_addr.2
1 : 1777863616 : BV:32
=dst_symbol_addr.3
1 : 1778249712 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 902148092 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1777863616 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 972815344 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1777991615 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1778249712 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 972943343 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 835039232 : BV:32
=memlabel-mem-esp_end
1 : 902148095 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1778249715 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1696233114
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 84 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 902148092 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1778249712 : BV:32
=symbol.1
1 : 972815344 : BV:32
=symbol.2
1 : 1777863616 : BV:32
=dst_symbol_addr.1
1 : 972815344 : BV:32
=dst_symbol_addr.2
1 : 1777863616 : BV:32
=dst_symbol_addr.3
1 : 1778249712 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 902148092 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 902148092 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1777863616 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 972815344 : BV:32
=input.dst.mem
1 : (( 902148092 ) -> 255, ( 902148093 ) -> 255, ( 902148094 ) -> 255, ( 902148095 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1777991615 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1778249712 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 972943343 : BV:32
=memlabel-mem-esp_begin
1 : 67108864 : BV:32
=stack.size
1 : 835039232 : BV:32
=memlabel-mem-esp_end
1 : 902148095 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1778249715 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1696233114
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 85
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
784052567
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 85 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 1163505660 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1163505660 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
784052567
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 86
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1225382524
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 86 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1163505660 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 1 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1163505660 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1225382524
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 87
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1669516833
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 87 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1163505660 : BV:32
=input.dst.exreg.0.5
1 : 1 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2361257968 { -1933709328 } : BV:32
=symbol.1
1 : 1686371312 : BV:32
=symbol.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.1
1 : 1686371312 : BV:32
=dst_symbol_addr.2
1 : 2318928832 { -1976038464 } : BV:32
=dst_symbol_addr.3
1 : 2361257968 { -1933709328 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1163505660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1163505660 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2318928832 { -1976038464 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1686371312 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2319056831 { -1975910465 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2361257968 { -1933709328 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 1686499311 : BV:32
=memlabel-mem-esp_begin
1 : 610271232 : BV:32
=stack.size
1 : 553234432 : BV:32
=memlabel-mem-esp_end
1 : 1163505663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2361257971 { -1933709325 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1669516833
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 88
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294967292 { -4 } : BV:32
=symbol.1
1 : 4292918272 { -2049024 } : BV:32
=symbol.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.1
1 : 4292918272 { -2049024 } : BV:32
=dst_symbol_addr.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.3
1 : 4294967292 { -4 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292898812 { -2068484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4294788096 { -179200 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292918272 { -2049024 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294916095 { -51201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4293046271 { -1921025 } : BV:32
=memlabel-mem-esp_begin
1 : 12288 : BV:32
=stack.size
1 : 4292886528 { -2080768 } : BV:32
=memlabel-mem-esp_end
1 : 4292898815 { -2068481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
248945629
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 88 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4292898812 { -2068484 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4294967292 { -4 } : BV:32
=symbol.1
1 : 4292918272 { -2049024 } : BV:32
=symbol.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.1
1 : 4292918272 { -2049024 } : BV:32
=dst_symbol_addr.2
1 : 4294788096 { -179200 } : BV:32
=dst_symbol_addr.3
1 : 4294967292 { -4 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292898812 { -2068484 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4292898812 { -2068484 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294788096 { -179200 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4292918272 { -2049024 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294916095 { -51201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4293046271 { -1921025 } : BV:32
=memlabel-mem-esp_begin
1 : 12288 : BV:32
=stack.size
1 : 4292886528 { -2080768 } : BV:32
=memlabel-mem-esp_end
1 : 4292898815 { -2068481 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
248945629
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 89
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 67108348 : BV:32
=symbol.1
1 : 54418448 : BV:32
=symbol.2
1 : 25099712 : BV:32
=dst_symbol_addr.1
1 : 54418448 : BV:32
=dst_symbol_addr.2
1 : 25099712 : BV:32
=dst_symbol_addr.3
1 : 67108348 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 25099724 ) -> 1, ( 25099716 ) -> 1, ( 54418452 ) -> 1, ( 54418460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25099724 ) -> 1, ( 25099716 ) -> 1, ( 54418452 ) -> 1, ( 54418460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 25099712 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 54418448 : BV:32
=input.dst.mem
1 : (( 25099724 ) -> 1, ( 25099716 ) -> 1, ( 54418452 ) -> 1, ( 54418460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 25227711 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 67108348 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 54546447 : BV:32
=memlabel-mem-esp_begin
1 : 100663296 : BV:32
=stack.size
1 : 4194304000 { -100663296 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 67108351 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1143447997
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 89 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 67108348 : BV:32
=symbol.1
1 : 54418448 : BV:32
=symbol.2
1 : 25099712 : BV:32
=dst_symbol_addr.1
1 : 54418448 : BV:32
=dst_symbol_addr.2
1 : 25099712 : BV:32
=dst_symbol_addr.3
1 : 67108348 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 25099724 ) -> 1, ( 25099716 ) -> 1, ( 54418452 ) -> 1, ( 54418460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 25099724 ) -> 1, ( 25099716 ) -> 1, ( 54418452 ) -> 1, ( 54418460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 25099712 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 54418448 : BV:32
=input.dst.mem
1 : (( 25099724 ) -> 1, ( 25099716 ) -> 1, ( 54418452 ) -> 1, ( 54418460 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 25227711 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 67108348 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 54546447 : BV:32
=memlabel-mem-esp_begin
1 : 100663296 : BV:32
=stack.size
1 : 4194304000 { -100663296 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 67108351 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1143447997
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 90
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 763320 : BV:32
=symbol.1
1 : 1456 : BV:32
=symbol.2
1 : 229632 : BV:32
=dst_symbol_addr.1
1 : 1456 : BV:32
=dst_symbol_addr.2
1 : 229632 : BV:32
=dst_symbol_addr.3
1 : 763320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 229640 ) -> 8, ( 1464 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 229640 ) -> 8, ( 1464 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 229632 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1456 : BV:32
=input.dst.mem
1 : (( 229640 ) -> 8, ( 1464 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 357631 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 763320 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 129455 : BV:32
=memlabel-mem-esp_begin
1 : 999424 : BV:32
=stack.size
1 : 4293967872 { -999424 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 763323 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=unaliased_memslot.1
1 : 8 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
107302800
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 90 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 763320 : BV:32
=symbol.1
1 : 1456 : BV:32
=symbol.2
1 : 229632 : BV:32
=dst_symbol_addr.1
1 : 1456 : BV:32
=dst_symbol_addr.2
1 : 229632 : BV:32
=dst_symbol_addr.3
1 : 763320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 229640 ) -> 8, ( 1464 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 229640 ) -> 8, ( 1464 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 229632 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1456 : BV:32
=input.dst.mem
1 : (( 229640 ) -> 8, ( 1464 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 357631 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 763320 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 129455 : BV:32
=memlabel-mem-esp_begin
1 : 999424 : BV:32
=stack.size
1 : 4293967872 { -999424 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 763323 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=unaliased_memslot.1
1 : 8 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
107302800
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 91
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4093651920 { -201315376 } : BV:32
=symbol.1
1 : 4160663536 { -134303760 } : BV:32
=symbol.2
1 : 3086921712 { -1208045584 } : BV:32
=dst_symbol_addr.1
1 : 4160663536 { -134303760 } : BV:32
=dst_symbol_addr.2
1 : 3086921712 { -1208045584 } : BV:32
=dst_symbol_addr.3
1 : 4093651920 { -201315376 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2573803516 { -1721163780 } : BV:32
=input.src.llvm-mem
1 : (( 4160663544 ) -> 254, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4160663544 ) -> 254, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3086921712 { -1208045584 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160663536 { -134303760 } : BV:32
=input.dst.mem
1 : (( 4160663544 ) -> 254, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3087049711 { -1207917585 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4093651920 { -201315376 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4160791535 { -134175761 } : BV:32
=memlabel-mem-esp_begin
1 : 972992512 : BV:32
=stack.size
1 : 1600811008 : BV:32
=memlabel-mem-esp_end
1 : 2573803519 { -1721163777 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4093651923 { -201315373 } : BV:32
=unaliased_memslot.0
1 : 16843262 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2121932605
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%dot.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((start_pc_edge*  br label %for.cond, !dbg !18)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !18))*  br label %for.cond, !dbg !18)*(  br label %for.cond, !dbg !18*  br label %for.cond, !dbg !18))
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : 0 : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 91 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2573803516 { -1721163780 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4093651920 { -201315376 } : BV:32
=symbol.1
1 : 4160663536 { -134303760 } : BV:32
=symbol.2
1 : 3086921712 { -1208045584 } : BV:32
=dst_symbol_addr.1
1 : 4160663536 { -134303760 } : BV:32
=dst_symbol_addr.2
1 : 3086921712 { -1208045584 } : BV:32
=dst_symbol_addr.3
1 : 4093651920 { -201315376 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2573803516 { -1721163780 } : BV:32
=input.src.llvm-mem
1 : (( 4160663544 ) -> 254, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2573803516 { -1721163780 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4160663544 ) -> 254, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3086921712 { -1208045584 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160663536 { -134303760 } : BV:32
=input.dst.mem
1 : (( 2573803518 ) -> 0, ( 2573803519 ) -> 0, ( 2573803516 ) -> 0, ( 2573803517 ) -> 0, ( 4160663544 ) -> 254, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3087049711 { -1207917585 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4093651920 { -201315376 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4160791535 { -134175761 } : BV:32
=memlabel-mem-esp_begin
1 : 972992512 : BV:32
=stack.size
1 : 1600811008 : BV:32
=memlabel-mem-esp_end
1 : 2573803519 { -1721163777 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4093651923 { -201315373 } : BV:32
=unaliased_memslot.0
1 : 16843262 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2121932605
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 92
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2185207804 { -2109759492 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2190475268 { -2104492028 } : BV:32
=symbol.1
1 : 3428715296 { -866252000 } : BV:32
=symbol.2
1 : 3221225424 { -1073741872 } : BV:32
=dst_symbol_addr.1
1 : 3428715296 { -866252000 } : BV:32
=dst_symbol_addr.2
1 : 3221225424 { -1073741872 } : BV:32
=dst_symbol_addr.3
1 : 2190475268 { -2104492028 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2185207804 { -2109759492 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2185207804 { -2109759492 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 16 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221225424 { -1073741872 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3428715296 { -866252000 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3221353423 { -1073613873 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2190475268 { -2104492028 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3428843295 { -866124001 } : BV:32
=memlabel-mem-esp_begin
1 : 190058496 : BV:32
=stack.size
1 : 1995149312 : BV:32
=memlabel-mem-esp_end
1 : 2185207807 { -2109759489 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2190475271 { -2104492025 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1988315741
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 92 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 80 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2185207804 { -2109759492 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2190475268 { -2104492028 } : BV:32
=symbol.1
1 : 3428715296 { -866252000 } : BV:32
=symbol.2
1 : 3221225424 { -1073741872 } : BV:32
=dst_symbol_addr.1
1 : 3428715296 { -866252000 } : BV:32
=dst_symbol_addr.2
1 : 3221225424 { -1073741872 } : BV:32
=dst_symbol_addr.3
1 : 2190475268 { -2104492028 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2185207804 { -2109759492 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2185207804 { -2109759492 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 20 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221225424 { -1073741872 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 3428715372 { -866251924 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 20 : BV:32
=input.src.llvm-%arrayidx1
1 : 3221225500 { -1073741796 } : BV:32
=input.src.llvm-%arrayidx
1 : 3428715372 { -866251924 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3428715296 { -866252000 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 3221225500 { -1073741796 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 76 : BV:32
=input.src.llvm-%inc
1 : 20 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221353423 { -1073613873 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2190475268 { -2104492028 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3428843295 { -866124001 } : BV:32
=memlabel-mem-esp_begin
1 : 190058496 : BV:32
=stack.size
1 : 1995149312 : BV:32
=memlabel-mem-esp_end
1 : 2185207807 { -2109759489 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2190475271 { -2104492025 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1988315741
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 93
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1566441468 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1705902080 : BV:32
=symbol.1
1 : 3959325728 { -335641568 } : BV:32
=symbol.2
1 : 2511209600 { -1783757696 } : BV:32
=dst_symbol_addr.1
1 : 3959325728 { -335641568 } : BV:32
=dst_symbol_addr.2
1 : 2511209600 { -1783757696 } : BV:32
=dst_symbol_addr.3
1 : 1705902080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1566441468 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1566441468 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 32 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2511209600 { -1783757696 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3959325728 { -335641568 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2511337599 { -1783629697 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1705902080 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3959453727 { -335513569 } : BV:32
=memlabel-mem-esp_begin
1 : 1517813760 : BV:32
=stack.size
1 : 48627712 : BV:32
=memlabel-mem-esp_end
1 : 1566441471 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1705902083 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1766952788
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 93 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 144 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1566441468 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1705902080 : BV:32
=symbol.1
1 : 3959325728 { -335641568 } : BV:32
=symbol.2
1 : 2511209600 { -1783757696 } : BV:32
=dst_symbol_addr.1
1 : 3959325728 { -335641568 } : BV:32
=dst_symbol_addr.2
1 : 2511209600 { -1783757696 } : BV:32
=dst_symbol_addr.3
1 : 1705902080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1566441468 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1566441468 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 36 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2511209600 { -1783757696 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 3959325868 { -335641428 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 36 : BV:32
=input.src.llvm-%arrayidx1
1 : 2511209740 { -1783757556 } : BV:32
=input.src.llvm-%arrayidx
1 : 3959325868 { -335641428 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3959325728 { -335641568 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 2511209740 { -1783757556 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 140 : BV:32
=input.src.llvm-%inc
1 : 36 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2511337599 { -1783629697 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1705902080 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3959453727 { -335513569 } : BV:32
=memlabel-mem-esp_begin
1 : 1517813760 : BV:32
=stack.size
1 : 48627712 : BV:32
=memlabel-mem-esp_end
1 : 1566441471 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1705902083 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1766952788
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 94
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 905969660 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1705902080 : BV:32
=symbol.1
1 : 3959350304 { -335616992 } : BV:32
=symbol.2
1 : 3048080512 { -1246886784 } : BV:32
=dst_symbol_addr.1
1 : 3959350304 { -335616992 } : BV:32
=dst_symbol_addr.2
1 : 3048080512 { -1246886784 } : BV:32
=dst_symbol_addr.3
1 : 1705902080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 905969660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 905969660 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 64 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3048080512 { -1246886784 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3959350304 { -335616992 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3048208511 { -1246758785 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1705902080 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3959478303 { -335488993 } : BV:32
=memlabel-mem-esp_begin
1 : 444071936 : BV:32
=stack.size
1 : 461897728 : BV:32
=memlabel-mem-esp_end
1 : 905969663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1705902083 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
515947209
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 94 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 272 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 905969660 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1705902080 : BV:32
=symbol.1
1 : 3959350304 { -335616992 } : BV:32
=symbol.2
1 : 3048080512 { -1246886784 } : BV:32
=dst_symbol_addr.1
1 : 3959350304 { -335616992 } : BV:32
=dst_symbol_addr.2
1 : 3048080512 { -1246886784 } : BV:32
=dst_symbol_addr.3
1 : 1705902080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 905969660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 905969660 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 68 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3048080512 { -1246886784 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 3959350572 { -335616724 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 68 : BV:32
=input.src.llvm-%arrayidx1
1 : 3048080780 { -1246886516 } : BV:32
=input.src.llvm-%arrayidx
1 : 3959350572 { -335616724 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3959350304 { -335616992 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 3048080780 { -1246886516 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 268 : BV:32
=input.src.llvm-%inc
1 : 68 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3048208511 { -1246758785 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1705902080 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3959478303 { -335488993 } : BV:32
=memlabel-mem-esp_begin
1 : 444071936 : BV:32
=stack.size
1 : 461897728 : BV:32
=memlabel-mem-esp_end
1 : 905969663 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1705902083 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
515947209
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 95
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1692270588 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1700659200 : BV:32
=symbol.1
1 : 4184744992 { -110222304 } : BV:32
=symbol.2
1 : 3973972096 { -320995200 } : BV:32
=dst_symbol_addr.1
1 : 4184744992 { -110222304 } : BV:32
=dst_symbol_addr.2
1 : 3973972096 { -320995200 } : BV:32
=dst_symbol_addr.3
1 : 1700659200 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1692270588 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1692270588 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 128 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3973972096 { -320995200 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4184744992 { -110222304 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3974100095 { -320867201 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1700659200 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4184872991 { -110094305 } : BV:32
=memlabel-mem-esp_begin
1 : 1067450368 : BV:32
=stack.size
1 : 624820224 : BV:32
=memlabel-mem-esp_end
1 : 1692270591 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1700659203 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1900375786
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 95 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 528 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1692270588 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1700659200 : BV:32
=symbol.1
1 : 4184744992 { -110222304 } : BV:32
=symbol.2
1 : 3973972096 { -320995200 } : BV:32
=dst_symbol_addr.1
1 : 4184744992 { -110222304 } : BV:32
=dst_symbol_addr.2
1 : 3973972096 { -320995200 } : BV:32
=dst_symbol_addr.3
1 : 1700659200 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1692270588 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1692270588 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 132 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3973972096 { -320995200 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 4184745516 { -110221780 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 132 : BV:32
=input.src.llvm-%arrayidx1
1 : 3973972620 { -320994676 } : BV:32
=input.src.llvm-%arrayidx
1 : 4184745516 { -110221780 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4184744992 { -110222304 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 3973972620 { -320994676 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 524 : BV:32
=input.src.llvm-%inc
1 : 132 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3974100095 { -320867201 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1700659200 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4184872991 { -110094305 } : BV:32
=memlabel-mem-esp_begin
1 : 1067450368 : BV:32
=stack.size
1 : 624820224 : BV:32
=memlabel-mem-esp_end
1 : 1692270591 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1700659203 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1900375786
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 96
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1432223740 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1705902080 : BV:32
=symbol.1
1 : 3422430240 { -872537056 } : BV:32
=symbol.2
1 : 3048080512 { -1246886784 } : BV:32
=dst_symbol_addr.1
1 : 3422430240 { -872537056 } : BV:32
=dst_symbol_addr.2
1 : 3048080512 { -1246886784 } : BV:32
=dst_symbol_addr.3
1 : 1705902080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1432223740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1432223740 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 256 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3048080512 { -1246886784 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3422430240 { -872537056 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3048208511 { -1246758785 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1705902080 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3422558239 { -872409057 } : BV:32
=memlabel-mem-esp_begin
1 : 444071936 : BV:32
=stack.size
1 : 988151808 : BV:32
=memlabel-mem-esp_end
1 : 1432223743 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1705902083 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
145847749
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 96 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1040 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1432223740 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1705902080 : BV:32
=symbol.1
1 : 3422430240 { -872537056 } : BV:32
=symbol.2
1 : 3048080512 { -1246886784 } : BV:32
=dst_symbol_addr.1
1 : 3422430240 { -872537056 } : BV:32
=dst_symbol_addr.2
1 : 3048080512 { -1246886784 } : BV:32
=dst_symbol_addr.3
1 : 1705902080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1432223740 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1432223740 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 260 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3048080512 { -1246886784 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 3422431276 { -872536020 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 260 : BV:32
=input.src.llvm-%arrayidx1
1 : 3048081548 { -1246885748 } : BV:32
=input.src.llvm-%arrayidx
1 : 3422431276 { -872536020 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3422430240 { -872537056 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 3048081548 { -1246885748 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 1036 : BV:32
=input.src.llvm-%inc
1 : 260 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3048208511 { -1246758785 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1705902080 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3422558239 { -872409057 } : BV:32
=memlabel-mem-esp_begin
1 : 444071936 : BV:32
=stack.size
1 : 988151808 : BV:32
=memlabel-mem-esp_end
1 : 1432223743 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1705902083 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
145847749
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 97
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1073741704 : BV:32
=symbol.1
1 : 0 : BV:32
=symbol.2
1 : 1065861120 : BV:32
=dst_symbol_addr.1
1 : 0 : BV:32
=dst_symbol_addr.2
1 : 1065861120 : BV:32
=dst_symbol_addr.3
1 : 1073741704 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 512 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1065861120 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1065989119 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1073741704 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 127999 : BV:32
=memlabel-mem-esp_begin
1 : 1073741824 : BV:32
=stack.size
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1073741707 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
647336451
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 97 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2064 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1073741704 : BV:32
=symbol.1
1 : 0 : BV:32
=symbol.2
1 : 1065861120 : BV:32
=dst_symbol_addr.1
1 : 0 : BV:32
=dst_symbol_addr.2
1 : 1065861120 : BV:32
=dst_symbol_addr.3
1 : 1073741704 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 516 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1065861120 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 2060 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 516 : BV:32
=input.src.llvm-%arrayidx1
1 : 1065863180 : BV:32
=input.src.llvm-%arrayidx
1 : 2060 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 1065863180 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 2060 : BV:32
=input.src.llvm-%inc
1 : 516 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1065989119 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1073741704 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 127999 : BV:32
=memlabel-mem-esp_begin
1 : 1073741824 : BV:32
=stack.size
1 : 3221225472 { -1073741824 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1073741707 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
647336451
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 98
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 17035252 : BV:32
=symbol.1
1 : 16902128 : BV:32
=symbol.2
1 : 134128 : BV:32
=dst_symbol_addr.1
1 : 16902128 : BV:32
=dst_symbol_addr.2
1 : 134128 : BV:32
=dst_symbol_addr.3
1 : 17035252 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 1024 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 134128 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 16902128 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 262127 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 17035252 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 17030127 : BV:32
=memlabel-mem-esp_begin
1 : 17035264 : BV:32
=stack.size
1 : 4277932032 { -17035264 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 17035255 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
500212242
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 98 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 17035252 : BV:32
=symbol.1
1 : 16902128 : BV:32
=symbol.2
1 : 134128 : BV:32
=dst_symbol_addr.1
1 : 16902128 : BV:32
=dst_symbol_addr.2
1 : 134128 : BV:32
=dst_symbol_addr.3
1 : 17035252 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 1028 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 134128 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 16906236 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1028 : BV:32
=input.src.llvm-%arrayidx1
1 : 138236 : BV:32
=input.src.llvm-%arrayidx
1 : 16906236 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 16902128 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 138236 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 4108 : BV:32
=input.src.llvm-%inc
1 : 1028 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 262127 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 17035252 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 17030127 : BV:32
=memlabel-mem-esp_begin
1 : 17035264 : BV:32
=stack.size
1 : 4277932032 { -17035264 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 17035255 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
500212242
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 99
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221028860 { -1073938436 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3252734084 { -1042233212 } : BV:32
=symbol.1
1 : 3418171920 { -876795376 } : BV:32
=symbol.2
1 : 3521212672 { -773754624 } : BV:32
=dst_symbol_addr.1
1 : 3418171920 { -876795376 } : BV:32
=dst_symbol_addr.2
1 : 3521212672 { -773754624 } : BV:32
=dst_symbol_addr.3
1 : 3252734084 { -1042233212 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221028860 { -1073938436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221028860 { -1073938436 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 2048 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3521212672 { -773754624 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3418171920 { -876795376 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3521340671 { -773626625 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3252734084 { -1042233212 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3418299919 { -876667377 } : BV:32
=memlabel-mem-esp_begin
1 : 77824 : BV:32
=stack.size
1 : 3220951040 { -1074016256 } : BV:32
=memlabel-mem-esp_end
1 : 3221028863 { -1073938433 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3252734087 { -1042233209 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2015142536
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 99 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8208 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221028860 { -1073938436 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3252734084 { -1042233212 } : BV:32
=symbol.1
1 : 3418171920 { -876795376 } : BV:32
=symbol.2
1 : 3521212672 { -773754624 } : BV:32
=dst_symbol_addr.1
1 : 3418171920 { -876795376 } : BV:32
=dst_symbol_addr.2
1 : 3521212672 { -773754624 } : BV:32
=dst_symbol_addr.3
1 : 3252734084 { -1042233212 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221028860 { -1073938436 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221028860 { -1073938436 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 2052 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3521212672 { -773754624 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 3418180124 { -876787172 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2052 : BV:32
=input.src.llvm-%arrayidx1
1 : 3521220876 { -773746420 } : BV:32
=input.src.llvm-%arrayidx
1 : 3418180124 { -876787172 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3418171920 { -876795376 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 3521220876 { -773746420 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 8204 : BV:32
=input.src.llvm-%inc
1 : 2052 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3521340671 { -773626625 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3252734084 { -1042233212 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3418299919 { -876667377 } : BV:32
=memlabel-mem-esp_begin
1 : 77824 : BV:32
=stack.size
1 : 3220951040 { -1074016256 } : BV:32
=memlabel-mem-esp_end
1 : 3221028863 { -1073938433 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3252734087 { -1042233209 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2015142536
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 100
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 492699644 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 632160256 : BV:32
=symbol.1
1 : 3959333920 { -335633376 } : BV:32
=symbol.2
1 : 3048080512 { -1246886784 } : BV:32
=dst_symbol_addr.1
1 : 3959333920 { -335633376 } : BV:32
=dst_symbol_addr.2
1 : 3048080512 { -1246886784 } : BV:32
=dst_symbol_addr.3
1 : 632160256 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 492699644 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 492699644 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4096 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3048080512 { -1246886784 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3959333920 { -335633376 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3048208511 { -1246758785 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 632160256 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3959461919 { -335505377 } : BV:32
=memlabel-mem-esp_begin
1 : 444071936 : BV:32
=stack.size
1 : 48627712 : BV:32
=memlabel-mem-esp_end
1 : 492699647 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 632160259 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1205111398
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 100 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16400 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 492699644 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 632160256 : BV:32
=symbol.1
1 : 3959333920 { -335633376 } : BV:32
=symbol.2
1 : 3048080512 { -1246886784 } : BV:32
=dst_symbol_addr.1
1 : 3959333920 { -335633376 } : BV:32
=dst_symbol_addr.2
1 : 3048080512 { -1246886784 } : BV:32
=dst_symbol_addr.3
1 : 632160256 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 492699644 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 492699644 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 4100 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3048080512 { -1246886784 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 3959350316 { -335616980 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4100 : BV:32
=input.src.llvm-%arrayidx1
1 : 3048096908 { -1246870388 } : BV:32
=input.src.llvm-%arrayidx
1 : 3959350316 { -335616980 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3959333920 { -335633376 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 3048096908 { -1246870388 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 16396 : BV:32
=input.src.llvm-%inc
1 : 4100 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3048208511 { -1246758785 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 632160256 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 3959461919 { -335505377 } : BV:32
=memlabel-mem-esp_begin
1 : 444071936 : BV:32
=stack.size
1 : 48627712 : BV:32
=memlabel-mem-esp_end
1 : 492699647 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 632160259 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1205111398
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 101
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294762492 { -204804 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1569384764 : BV:32
=symbol.1
1 : 4294774288 { -193008 } : BV:32
=symbol.2
1 : 631483760 : BV:32
=dst_symbol_addr.1
1 : 4294774288 { -193008 } : BV:32
=dst_symbol_addr.2
1 : 631483760 : BV:32
=dst_symbol_addr.3
1 : 1569384764 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294762492 { -204804 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294762492 { -204804 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 8192 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 631483760 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294774288 { -193008 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 631611759 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1569384764 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4294902287 { -65009 } : BV:32
=memlabel-mem-esp_begin
1 : 2147528704 { -2147438592 } : BV:32
=stack.size
1 : 2147233792 : BV:32
=memlabel-mem-esp_end
1 : 4294762495 { -204801 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1569384767 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
384422605
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 101 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32784 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294762492 { -204804 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1569384764 : BV:32
=symbol.1
1 : 4294774288 { -193008 } : BV:32
=symbol.2
1 : 631483760 : BV:32
=dst_symbol_addr.1
1 : 4294774288 { -193008 } : BV:32
=dst_symbol_addr.2
1 : 631483760 : BV:32
=dst_symbol_addr.3
1 : 1569384764 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294762492 { -204804 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294762492 { -204804 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 8196 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 631483760 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 4294807068 { -160228 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8196 : BV:32
=input.src.llvm-%arrayidx1
1 : 631516540 : BV:32
=input.src.llvm-%arrayidx
1 : 4294807068 { -160228 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294774288 { -193008 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 631516540 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 32780 : BV:32
=input.src.llvm-%inc
1 : 8196 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 631611759 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1569384764 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4294902287 { -65009 } : BV:32
=memlabel-mem-esp_begin
1 : 2147528704 { -2147438592 } : BV:32
=stack.size
1 : 2147233792 : BV:32
=memlabel-mem-esp_end
1 : 4294762495 { -204801 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1569384767 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
384422605
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 102
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1972240380 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1972240384 : BV:32
=symbol.1
1 : 4226679936 { -68287360 } : BV:32
=symbol.2
1 : 2511209600 { -1783757696 } : BV:32
=dst_symbol_addr.1
1 : 4226679936 { -68287360 } : BV:32
=dst_symbol_addr.2
1 : 2511209600 { -1783757696 } : BV:32
=dst_symbol_addr.3
1 : 1972240384 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1972240380 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1972240380 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 16384 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2511209600 { -1783757696 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4226679936 { -68287360 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2511337599 { -1783629697 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1972240384 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4226807935 { -68159361 } : BV:32
=memlabel-mem-esp_begin
1 : 198705152 : BV:32
=stack.size
1 : 1773535232 : BV:32
=memlabel-mem-esp_end
1 : 1972240383 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1972240387 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
914218486
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 102 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65552 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1972240380 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1972240384 : BV:32
=symbol.1
1 : 4226679936 { -68287360 } : BV:32
=symbol.2
1 : 2511209600 { -1783757696 } : BV:32
=dst_symbol_addr.1
1 : 4226679936 { -68287360 } : BV:32
=dst_symbol_addr.2
1 : 2511209600 { -1783757696 } : BV:32
=dst_symbol_addr.3
1 : 1972240384 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1972240380 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1972240380 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 16388 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2511209600 { -1783757696 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 4226745484 { -68221812 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16388 : BV:32
=input.src.llvm-%arrayidx1
1 : 2511275148 { -1783692148 } : BV:32
=input.src.llvm-%arrayidx
1 : 4226745484 { -68221812 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4226679936 { -68287360 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 2511275148 { -1783692148 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 65548 : BV:32
=input.src.llvm-%inc
1 : 16388 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2511337599 { -1783629697 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1972240384 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4226807935 { -68159361 } : BV:32
=memlabel-mem-esp_begin
1 : 198705152 : BV:32
=stack.size
1 : 1773535232 : BV:32
=memlabel-mem-esp_end
1 : 1972240383 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1972240387 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
914218486
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 103
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L2%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2456944636 { -1838022660 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2456944640 { -1838022656 } : BV:32
=symbol.1
1 : 4067558432 { -227408864 } : BV:32
=symbol.2
1 : 3539076224 { -755891072 } : BV:32
=dst_symbol_addr.1
1 : 4067558432 { -227408864 } : BV:32
=dst_symbol_addr.2
1 : 3539076224 { -755891072 } : BV:32
=dst_symbol_addr.3
1 : 2456944640 { -1838022656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2456944636 { -1838022660 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2456944636 { -1838022660 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3539076224 { -755891072 } : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=input.src.llvm-callee-save.1
1 : 0 : BV:32
=input.src.llvm-callee-save.2
1 : 0 : BV:32
=input.src.llvm-callee-save.3
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4067558432 { -227408864 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-callee-save.0
1 : 0 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3539204223 { -755763073 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2456944640 { -1838022656 } : BV:32
=input.src.llvm-%hidden-reg
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4067686431 { -227280865 } : BV:32
=memlabel-mem-esp_begin
1 : 1546911744 : BV:32
=stack.size
1 : 910032896 : BV:32
=memlabel-mem-esp_end
1 : 2456944639 { -1838022657 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2456944643 { -1838022653 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1362372127
=counter_example_end
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.graph_edge_composition
(Lfor.body%1%1_L2%1%0=>Lfor.body%1%1_L2%1%0)
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge: Lfor.body%1%1_L2%1%0 => Lfor.body%1%1_L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%dot.0.phi.tmpvar
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%arrayidx1
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%dot.0
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%add
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
3 : mlvar.llvm.vdotr.0 : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 : BV:32
6 : 128000 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : bvadd(4, 12) : BV:32
14 : 4 : INT
15 : 0 : BOOL
16 : select(2, 3, 13, 14, 15) : BV:32
17 : mlvar.llvm.vdotr.1 : MEMLABEL
18 : symbol.2 : BV:32
19 : bvadd(18, 12) : BV:32
20 : select(2, 17, 19, 14, 15) : BV:32
21 : bvmul(16, 20) : BV:32
22 : bvadd(1, 21) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vdotr.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vdotr.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : bvmul(15, 19) : BV:32
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !22)))*((  %0 = load i32, i32* %arrayidx, align 4, !dbg !22*  %0 = load i32, i32* %arrayidx, align 4, !dbg !22)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24))*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !24)))*((((  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24*  %1 = load i32, i32* %arrayidx1, align 4, !dbg !24)*  %mul = mul nsw i32 %0, %1, !dbg !25)*(((  %add = add nsw i32 %dot.0, %mul, !dbg !26*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27)*  br label %for.inc, !dbg !27))*(((((  %inc = add nsw i32 %i.0, 1, !dbg !28*  br label %for.cond, !dbg !29, !llvm.loop !30)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !17)*(  %dot.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ], !dbg !14*  br label %for.cond, !dbg !29, !llvm.loop !30))*  br label %for.cond, !dbg !29, !llvm.loop !30)*(  br label %for.cond, !dbg !29, !llvm.loop !30*  br label %for.cond, !dbg !29, !llvm.loop !30))))
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !19)
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !21*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)*  br i1 %cmp, label %for.body, label %for.end, !dbg !21)
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.ec from L2%1%0 to L2%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L2%1%0=>L7%1%1)*(L7%1%1=>L2%1%0))
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge: L2%1%0 => L7%1%1
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : 1 : INT
14 : bvzero_ext(3, 13) : BV:33
15 : 16 : BV:32
16 : bvzero_ext(15, 13) : BV:33
17 : bvadd(14, 16) : BV:33
18 : 31 : INT
19 : 0 : INT
20 : bvextract(17, 18, 19) : BV:32
21 : dst_symbol_addr.2 : BV:32
22 : 1 : BV:64
23 : bvextract(22, 18, 19) : BV:32
24 : bvmul(21, 23) : BV:32
25 : 18446744073709551600 { -16 } : BV:64
26 : bvextract(25, 18, 19) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(20, 27) : BV:32
29 : select(1, 12, 28, 6, 7) : BV:128
30 : bvextract(29, 9, 10) : BV:32
31 : bvmul(11, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(8, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(8, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(8, 18, 19) : BV:32
44 : bvextract(29, 18, 19) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.dst.0 : MEMLABEL
7 : input.dst.exreg.0.0 : BV:32
8 : dst_symbol_addr.1 : BV:32
9 : bvadd(7, 8) : BV:32
10 : 16 : INT
11 : 0 : BOOL
12 : select(5, 6, 9, 10, 11) : BV:128
13 : bvextract(12, 2, 3) : BV:32
14 : mlvar.dst.1 : MEMLABEL
15 : 1 : INT
16 : bvzero_ext(7, 15) : BV:33
17 : 16 : BV:32
18 : bvzero_ext(17, 15) : BV:33
19 : bvadd(16, 18) : BV:33
20 : 31 : INT
21 : 0 : INT
22 : bvextract(19, 20, 21) : BV:32
23 : dst_symbol_addr.2 : BV:32
24 : 1 : BV:64
25 : bvextract(24, 20, 21) : BV:32
26 : bvmul(23, 25) : BV:32
27 : 18446744073709551600 { -16 } : BV:64
28 : bvextract(27, 20, 21) : BV:32
29 : bvadd(26, 28) : BV:32
30 : bvadd(22, 29) : BV:32
31 : select(5, 14, 30, 10, 11) : BV:128
32 : bvextract(31, 2, 3) : BV:32
33 : bvmul(13, 32) : BV:32
34 : 95 : INT
35 : 64 : INT
36 : bvextract(12, 34, 35) : BV:32
37 : bvextract(31, 34, 35) : BV:32
38 : bvmul(36, 37) : BV:32
39 : bvconcat(33, 38) : BV:64
40 : 63 : INT
41 : 32 : INT
42 : bvextract(12, 40, 41) : BV:32
43 : bvextract(31, 40, 41) : BV:32
44 : bvmul(42, 43) : BV:32
45 : bvextract(12, 20, 21) : BV:32
46 : bvextract(31, 20, 21) : BV:32
47 : bvmul(45, 46) : BV:32
48 : bvconcat(44, 47) : BV:64
49 : bvconcat(39, 48) : BV:128
50 : bvextract(49, 2, 3) : BV:32
51 : bvadd(4, 50) : BV:32
52 : bvextract(1, 34, 35) : BV:32
53 : bvextract(49, 34, 35) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(1, 40, 41) : BV:32
57 : bvextract(49, 40, 41) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(1, 20, 21) : BV:32
60 : bvextract(49, 20, 21) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge: L7%1%1 => L2%1%0
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L2%1%0 nodece 103 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2456944636 { -1838022660 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2456944640 { -1838022656 } : BV:32
=symbol.1
1 : 4067558432 { -227408864 } : BV:32
=symbol.2
1 : 3539076224 { -755891072 } : BV:32
=dst_symbol_addr.1
1 : 4067558432 { -227408864 } : BV:32
=dst_symbol_addr.2
1 : 3539076224 { -755891072 } : BV:32
=dst_symbol_addr.3
1 : 2456944640 { -1838022656 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%dot.0.phi.tmpvar
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2456944636 { -1838022660 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2456944636 { -1838022660 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3539076224 { -755891072 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%dot.0
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.3.total_offset
1 : 4067686412 { -227280884 } : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%arrayidx1
1 : 3539204204 { -755763092 } : BV:32
=input.src.llvm-%arrayidx
1 : 4067686412 { -227280884 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4067558432 { -227408864 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%696ccdfab56fb98a0abdc8721ff18b.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.3.total_offset
1 : 3539204204 { -755763092 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.gepoffset.2.total_offset
1 : 127980 : BV:32
=input.src.llvm-%inc
1 : 31996 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3539204223 { -755763073 } : BV:32
=input.src.llvm-%f26904631285e3443c0c7742a85c73d.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2456944640 { -1838022656 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-symbol.1.0_end
1 : 4067686431 { -227280865 } : BV:32
=memlabel-mem-esp_begin
1 : 1546911744 : BV:32
=stack.size
1 : 910032896 : BV:32
=memlabel-mem-esp_end
1 : 2456944639 { -1838022657 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2456944643 { -1838022653 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1362372127
=counter_example_end
=graph_with_ce done
=graph_with_guessing begin
=Invariant states
=Invariant state at node L0%0%1_L0%0%1:
=pc L0%0%1_L0%0%1 invariant_state
is_top 0
is_stable 1
=pc L0%0%1_L0%0%1 invariant_state done
=Invariant state at node Lfor.body%1%1_L2%1%0:
=pc Lfor.body%1%1_L2%1%0 invariant_state
is_top 0
is_stable 1
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr expr_group_type ARR_EQ
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr expr 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 0 type arr predicate_set done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr_group_type BV_EQ
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 0
1 : symbol.1 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 1
1 : symbol.2 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 2
1 : retaddr_const : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 3
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 4
1 : input.src.llvm-%dot.0 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 5
1 : input.src.llvm-%dot.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 6
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 7
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 8
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 9
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 10
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 11
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvmul(10, 14) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 12
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 13
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 14
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 15
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 16
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 17
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 18
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 19
1 : input.src.llvm-%i.0 : BV:32
2 : 2 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 20
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : bvadd(12, 4, 6) : BV:32
14 : select(1, 11, 13, 8, 9) : BV:32
15 : bvmul(10, 14) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 21
1 : input.src.llvm-%i.0 : BV:32
2 : 3 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 22
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 6, 7) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : bvmul(11, 15) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 23
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : memlabel-mem-symbol.2.0 : MEMLABEL
13 : symbol.2 : BV:32
14 : bvadd(13, 6, 7) : BV:32
15 : select(1, 12, 14, 9, 10) : BV:32
16 : bvmul(11, 15) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 24
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 25
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 26
1 : input.dst.exreg.0.6 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 27
1 : input.dst.exreg.0.7 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 28
1 : input.dst.exreg.0.3 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 29
1 : input.dst.exreg.0.5 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 30
1 : input.dst.exreg.0.4 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 31
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 32
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 33
1 : input.dst.exreg.2.1 : BV:128
2 : 95 : INT
3 : 64 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 34
1 : input.dst.exreg.2.1 : BV:128
2 : 63 : INT
3 : 32 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 35
1 : input.dst.exreg.2.1 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 36
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv expr 37
1 : input.dst.esp.L0%1%1 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 0
=Comment
linear2-32-free_var_idx.37
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.esp.L0%1%1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 1
=Comment
linear2-32-free_var_idx.36
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 2
=Comment
linear2-4-free_var_idx.0
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : input.src.llvm-%i.0 : BV:32
7 : bvextract(6, 2, 3) : BV:4
8 : 12 { -4 } : BV:4
9 : bvmul(7, 8) : BV:4
10 : bvadd(5, 9) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 3
=Comment
linear2-4-free_var_idx.1
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : symbol.1 : BV:32
7 : bvextract(6, 2, 3) : BV:4
8 : 10 { -6 } : BV:4
9 : bvmul(7, 8) : BV:4
10 : bvadd(5, 9) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 4
=Comment
linear1-32-free_var_idx.3
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BV:32
2 : 0 : BV:31
3 : input.src.llvm-%cmp : BOOL
4 : bool_to_bv(3) : BV:1
5 : bvconcat(2, 4) : BV:32
6 : bvneg(5) : BV:32
7 : bvadd(1, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 5
=Comment
linear2-32-free_var_idx.5
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%dot.0 : BV:32
2 : input.src.llvm-%dot.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 6
=Comment
linear1-2-free_var_idx.6
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:2
5 : bvneg(4) : BV:2
=RhsExpr
1 : 0 : BV:2
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 7
=Comment
linear2-32-free_var_idx.7
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : input.src.llvm-%i.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 8
=Comment
linear2-32-free_var_idx.19
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 2 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 9
=Comment
linear2-32-free_var_idx.17
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 10
=Comment
linear2-32-free_var_idx.31
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 11
=Comment
linear2-32-free_var_idx.21
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 3 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 12
=Comment
linear2-32-free_var_idx.25
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 13
=Comment
linear3-12-free_var_idx.30
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4092 { -4 } : BV:12
2 : symbol.2 : BV:32
3 : 11 : INT
4 : 0 : INT
5 : bvextract(2, 3, 4) : BV:12
6 : 1280 : BV:12
7 : bvmul(5, 6) : BV:12
8 : symbol.1 : BV:32
9 : bvextract(8, 3, 4) : BV:12
10 : 3072 { -1024 } : BV:12
11 : bvmul(9, 10) : BV:12
12 : bvadd(1, 7, 11) : BV:12
=RhsExpr
1 : input.dst.exreg.0.4 : BV:32
2 : 11 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:12
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv pred 14
=Comment
linear5-32-free_var_idx.35
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%dot.0 : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : 95 : INT
6 : 64 : INT
7 : bvextract(1, 5, 6) : BV:32
8 : 63 : INT
9 : 32 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : 31 : INT
12 : 0 : INT
13 : bvextract(1, 11, 12) : BV:32
14 : bvadd(4, 7, 10, 13) : BV:32
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 1 type bv predicate_set done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose expr 0
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose pred 1
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose pred 2
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 2 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose expr 0
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose pred 1
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose pred 2
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 3 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr_group_type HOUDINI
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 0
1 : 1 : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 1
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 2
1 : dst_symbol_addr.3 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 3
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 4
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 5
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 6
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 7
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 8
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini expr 9
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 0
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 1
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.2.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 2
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 3
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 4
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 5
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 6
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.2 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.2.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 7
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.3 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 8
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini pred 9
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L2%1%0 invariant_state_eqclass 4 type houdini predicate_set done
=pc Lfor.body%1%1_L2%1%0 invariant_state done
=Invariant state at node E0%0%1_E0%0%1:
=pc E0%0%1_E0%0%1 invariant_state
is_top 0
is_stable 1
=pc E0%0%1_E0%0%1 invariant_state done
=graph_with_guessing done
=corr_graph_done
