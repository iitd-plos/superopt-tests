=FunctionName: s1351
=result: 1
=corr_graph s1351
=src_tfg
=TFG_LLVM llvm.s1351:
=TFG:
=Nodes: L0%0%1 Lfor.cond%1%0 Lfor.cond%2%1 Lfor.body%1%1 Lfor.end%1%1 E0%0%1
=Edges:
Lfor.end%1%1 => E0%0%1
Lfor.cond%2%1 => Lfor.body%1%1
Lfor.cond%2%1 => Lfor.end%1%1
Lfor.cond%1%0 => Lfor.cond%2%1
L0%0%1 => Lfor.cond%1%0
Lfor.body%1%1 => Lfor.cond%1%0
=graph done
=Node outputs: E0%0%1
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: symbol.1.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : 0 : BV:32
=Output: symbol.2.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.3.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
C_SYMBOL3 : c : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.cond%1%0
=Lfor.cond%1%0 assume predicate_set done
=Lfor.cond%1%0 assert predicate_set done
=Node assumes and asserts: Lfor.cond%2%1
=Lfor.cond%2%1 assume predicate_set done
=Lfor.cond%2%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1
=Lfor.body%1%1 assume predicate_set done
=Lfor.body%1%1 assert predicate_set done
=Node assumes and asserts: Lfor.end%1%1
=Lfor.end%1%1 assume predicate_set done
=Lfor.end%1%1 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.llvm.s1351.0 : memlabel-mem-symbol.2.0
=memlabel_map.1
mlvar.llvm.s1351.1 : memlabel-mem-symbol.3.0
=memlabel_map.2
mlvar.llvm.s1351.2 : memlabel-mem-symbol.1.0
=Edge: Lfor.end%1%1 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:  ret i32 0, !dbg !39

=Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)

=Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)

=Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)

=Edge: L0%0%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))

=Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lentry%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%1=>Lentry%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100003=>Lentry%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100004=>Lentry%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100005=>Lentry%1%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100006=>Lentry%1%100007
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100007=>Lentry%1%100008
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100008=>Lentry%1%100009
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100009=>Lentry%1%100010
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100010=>Lentry%1%100011
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100011=>Lentry%1%100012
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100012=>Lentry%1%100013
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100013=>Lentry%1%100014
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100014=>Lentry%1%100015
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100015=>Lentry%1%100016
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100016=>Lentry%1%100017
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100017=>Lentry%1%100018
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100018=>Lentry%1%100019
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100019=>Lentry%1%100020
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100020=>Lentry%1%100021
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100021=>Lentry%1%100022
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100022=>Lentry%1%100023
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100023=>Lentry%1%100024
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100024=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%1=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100003
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100005
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.body%1%1
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.end%1%1
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100003=>Lfor.cond%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100004=>Lfor.body%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100005=>Lfor.cond%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100006=>Lfor.end%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.body%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100003=>Lfor.body%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%1=>Lfor.body%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100003=>Lfor.body%3%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%1=>Lfor.body%4%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%1=>Lfor.body%5%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%1=>Lfor.body%5%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100003=>Lfor.body%5%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100004=>Lfor.body%6%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%1=>Lfor.body%6%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%100003=>Lfor.body%6%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%100004=>Lfor.body%7%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%1=>Lfor.body%7%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100003=>Lfor.body%7%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%100004=>Lfor.body%8%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%8%1=>Lfor.body%8%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%8%100003=>Lfor.body%8%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%8%100004=>Lfor.inc%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%1%1=>Lfor.inc%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%1=>Lfor.inc%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100003=>Lfor.inc%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100004=>Lfor.inc%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100005=>Lfor.inc%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100006=>Lfor.inc%2%100007
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100007=>Lfor.inc%2%100008
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100008=>Lfor.inc%2%100009
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100009=>Lfor.inc%2%100010
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100010=>Lfor.inc%2%100011
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100011=>Lfor.inc%2%100012
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100012=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lentry%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lfor.cond%1%0
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%1=>Lentry%1%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100003=>Lentry%1%100004
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100004=>Lentry%1%100005
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100005=>Lentry%1%100006
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100006=>Lentry%1%100007
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100007=>Lentry%1%100008
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100008=>Lentry%1%100009
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100009=>Lentry%1%100010
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100010=>Lentry%1%100011
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100011=>Lentry%1%100012
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100012=>Lentry%1%100013
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100013=>Lentry%1%100014
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100014=>Lentry%1%100015
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100015=>Lentry%1%100016
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100016=>Lentry%1%100017
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100017=>Lentry%1%100018
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100018=>Lentry%1%100019
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100019=>Lentry%1%100020
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100020=>Lentry%1%100021
=src.llvm-%A.0
1 : symbol.1 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100021=>Lentry%1%100022
=src.llvm-%B.0
1 : symbol.2 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100022=>Lentry%1%100023
=src.llvm-%C.0
1 : symbol.3 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100023=>Lentry%1%100024
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100024=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%1=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100003=>Lfor.cond%2%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100004=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100005=>Lfor.cond%2%100006
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100006=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.cond%1%0
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : memlabel-mem-symbol.2.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : memlabel-mem-symbol.3.0 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%A.0
1 : 4 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=src.llvm-%incdec.ptr
1 : 4 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=src.llvm-%incdec.ptr1
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : 4 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%B.0
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.body%1%100003
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100003=>Lfor.body%2%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%1=>Lfor.body%2%100003
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100003=>Lfor.body%3%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%1=>Lfor.body%4%1
=src.llvm-%add
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%1=>Lfor.body%5%1
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%1=>Lfor.body%5%100003
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100003=>Lfor.body%5%100004
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100004=>Lfor.body%6%1
=src.llvm-%incdec.ptr
1 : input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%1=>Lfor.body%6%100003
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%100003=>Lfor.body%6%100004
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%100004=>Lfor.body%7%1
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%1=>Lfor.body%7%100003
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100003=>Lfor.body%7%100004
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%100004=>Lfor.body%8%1
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%8%1=>Lfor.body%8%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%8%100003=>Lfor.body%8%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%8%100004=>Lfor.inc%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%1=>E0%0%1
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%1%1=>Lfor.inc%2%1
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%1=>Lfor.inc%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100003=>Lfor.inc%2%100004
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%inc : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100004=>Lfor.inc%2%100005
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%incdec.ptr2 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100005=>Lfor.inc%2%100006
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%incdec.ptr1 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100006=>Lfor.inc%2%100007
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%incdec.ptr : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100007=>Lfor.inc%2%100008
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100008=>Lfor.inc%2%100009
=src.llvm-%A.0
1 : input.src.llvm-%A.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100009=>Lfor.inc%2%100010
=src.llvm-%B.0
1 : input.src.llvm-%B.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100010=>Lfor.inc%2%100011
=src.llvm-%C.0
1 : input.src.llvm-%C.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100011=>Lfor.inc%2%100012
=src.llvm-%i.0
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100012=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 assume# 0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 assume# 2
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 assume# 3
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005 assume# 0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006 assume# 0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lentry%1%100007
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lentry%1%100007 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100007=>Lentry%1%100008
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100007=>Lentry%1%100008 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100008=>Lentry%1%100009
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100008=>Lentry%1%100009 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100009=>Lentry%1%100010
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100009=>Lentry%1%100010 assume# 0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100009=>Lentry%1%100010 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100009=>Lentry%1%100010 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100010=>Lentry%1%100011
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100010=>Lentry%1%100011 assume# 0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100010=>Lentry%1%100011 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100010=>Lentry%1%100011 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100011=>Lentry%1%100012
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100011=>Lentry%1%100012 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100012=>Lentry%1%100013
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100012=>Lentry%1%100013 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100013=>Lentry%1%100014
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100013=>Lentry%1%100014 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100014=>Lentry%1%100015
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100014=>Lentry%1%100015 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100014=>Lentry%1%100015 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100014=>Lentry%1%100015 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100015=>Lentry%1%100016
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100015=>Lentry%1%100016 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100015=>Lentry%1%100016 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100015=>Lentry%1%100016 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100016=>Lentry%1%100017
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100016=>Lentry%1%100017 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100017=>Lentry%1%100018
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100017=>Lentry%1%100018 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100018=>Lentry%1%100019
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100018=>Lentry%1%100019 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100019=>Lentry%1%100020
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100019=>Lentry%1%100020 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100020=>Lentry%1%100021
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100020=>Lentry%1%100021 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100021=>Lentry%1%100022
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100021=>Lentry%1%100022 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100022=>Lentry%1%100023
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100022=>Lentry%1%100023 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100023=>Lentry%1%100024
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100023=>Lentry%1%100024 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100024=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100024=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 0
1 : input.src.llvm-%A.0 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 1
1 : input.src.llvm-%B.0 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 2
1 : input.src.llvm-%C.0 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 3
1 : 4 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : isgepoffset(3, 1) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 4
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : isgepoffset(3, 1) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 5
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 6
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : isgepoffset(3, 1) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 0
1 : input.src.llvm-%B.0 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 0
1 : input.src.llvm-%C.0 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%4%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%4%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%5%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%5%1 assume# 0
1 : input.src.llvm-%A.0 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%5%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 assume# 0
1 : 4 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : isgepoffset(3, 1) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100004=>Lfor.body%6%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100004=>Lfor.body%6%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%6%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%6%100003 assume# 0
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : isgepoffset(3, 1) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%6%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%6%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%100003=>Lfor.body%6%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%100003=>Lfor.body%6%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%100004=>Lfor.body%7%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%100004=>Lfor.body%7%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 assume# 0
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : isgepoffset(3, 1) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.body%8%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%100004=>Lfor.body%8%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%8%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%8%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%100003=>Lfor.body%8%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%100003=>Lfor.body%8%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.inc%2%100007
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.inc%2%100007 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100007=>Lfor.inc%2%100008
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100007=>Lfor.inc%2%100008 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100008=>Lfor.inc%2%100009
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100008=>Lfor.inc%2%100009 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100009=>Lfor.inc%2%100010
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100009=>Lfor.inc%2%100010 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100010=>Lfor.inc%2%100011
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100010=>Lfor.inc%2%100011 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100011=>Lfor.inc%2%100012
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100011=>Lfor.inc%2%100012 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100012=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100012=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1004
1 : symbol.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1005
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1006
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1007
1 : symbol.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1008
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1009
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1016
1 : symbol.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1017
1 : symbol.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1018
1 : symbol.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1019
1 : symbol.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1020
1 : symbol.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1021
1 : symbol.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1027
1 : symbol.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1028
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1029
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1030
1 : symbol.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1031
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1032
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1033
1 : symbol.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1034
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1035
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1036
1 : symbol.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1037
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1038
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1040
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1041
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 for loc_id 1041
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 for loc_id 1028
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 for loc_id 1031
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 for loc_id 1029
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 for loc_id 1032
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lentry%1%100007
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lentry%1%100007 for loc_id 1030
1 : symbol.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lentry%1%100007 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100007=>Lentry%1%100008
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100007=>Lentry%1%100008 for loc_id 1027
1 : symbol.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100007=>Lentry%1%100008 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100008=>Lentry%1%100009
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100008=>Lentry%1%100009 for loc_id 1021
1 : symbol.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100008=>Lentry%1%100009 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100009=>Lentry%1%100010
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100009=>Lentry%1%100010 for loc_id 1034
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100009=>Lentry%1%100010 for loc_id 1037
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100009=>Lentry%1%100010 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100010=>Lentry%1%100011
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100010=>Lentry%1%100011 for loc_id 1035
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100010=>Lentry%1%100011 for loc_id 1038
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100010=>Lentry%1%100011 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100011=>Lentry%1%100012
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100011=>Lentry%1%100012 for loc_id 1036
1 : symbol.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100011=>Lentry%1%100012 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100012=>Lentry%1%100013
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100012=>Lentry%1%100013 for loc_id 1033
1 : symbol.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100012=>Lentry%1%100013 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100013=>Lentry%1%100014
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100013=>Lentry%1%100014 for loc_id 1019
1 : symbol.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100013=>Lentry%1%100014 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100014=>Lentry%1%100015
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100014=>Lentry%1%100015 for loc_id 1005
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100014=>Lentry%1%100015 for loc_id 1008
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100014=>Lentry%1%100015 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100015=>Lentry%1%100016
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100015=>Lentry%1%100016 for loc_id 1006
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100015=>Lentry%1%100016 for loc_id 1009
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100015=>Lentry%1%100016 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100016=>Lentry%1%100017
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100016=>Lentry%1%100017 for loc_id 1007
1 : symbol.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100016=>Lentry%1%100017 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100017=>Lentry%1%100018
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100017=>Lentry%1%100018 for loc_id 1004
1 : symbol.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100017=>Lentry%1%100018 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100018=>Lentry%1%100019
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100018=>Lentry%1%100019 for loc_id 1017
1 : symbol.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100018=>Lentry%1%100019 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100019=>Lentry%1%100020
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100019=>Lentry%1%100020 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100020=>Lentry%1%100021
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100020=>Lentry%1%100021 for loc_id 1016
1 : symbol.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100020=>Lentry%1%100021 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100021=>Lentry%1%100022
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100021=>Lentry%1%100022 for loc_id 1018
1 : symbol.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100021=>Lentry%1%100022 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100022=>Lentry%1%100023
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100022=>Lentry%1%100023 for loc_id 1020
1 : symbol.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100022=>Lentry%1%100023 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100023=>Lentry%1%100024
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100023=>Lentry%1%100024 for loc_id 1040
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100023=>Lentry%1%100024 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100024=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100024=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 for loc_id 1026
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 for loc_id 1026
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1010
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1011
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1012
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1013
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1014
1 : 4 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1015
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1016
1 : 4 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1017
1 : 4 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1018
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1019
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1020
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1021
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1022
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1023
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1024
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1025
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1040
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1041
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1042
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1043
1 : 4 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1044
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1045
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1051
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : memlabel-mem-symbol.2.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : memlabel-mem-symbol.3.0 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
14 : memmask(13, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%4%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%4%1 for loc_id 1022
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%4%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%5%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%5%1 for loc_id 1051
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%5%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 for loc_id 1013
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 for loc_id 1015
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 for loc_id 1014
1 : 4 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%6%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%6%1 for loc_id 1043
1 : input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%6%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%6%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%6%100003 for loc_id 1023
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%6%100003 for loc_id 1025
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%6%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%100003=>Lfor.body%6%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%100003=>Lfor.body%6%100004 for loc_id 1024
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%100003=>Lfor.body%6%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%100004=>Lfor.body%7%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%100004=>Lfor.body%7%1 for loc_id 1044
1 : input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%100004=>Lfor.body%7%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 for loc_id 1010
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 for loc_id 1012
1 : 4 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%7%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 for loc_id 1011
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100003=>Lfor.body%7%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%8%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%8%1 for loc_id 1045
1 : input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%100004=>Lfor.body%8%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%8%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%8%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%100003=>Lfor.body%8%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%100003=>Lfor.body%8%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1001
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1039
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1046
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 for loc_id 1042
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 for loc_id 1041
1 : input.src.llvm-%inc : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005 for loc_id 1021
1 : input.src.llvm-%incdec.ptr2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 for loc_id 1019
1 : input.src.llvm-%incdec.ptr1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.inc%2%100007
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.inc%2%100007 for loc_id 1017
1 : input.src.llvm-%incdec.ptr : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.inc%2%100007 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100007=>Lfor.inc%2%100008
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100007=>Lfor.inc%2%100008 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100008=>Lfor.inc%2%100009
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100008=>Lfor.inc%2%100009 for loc_id 1016
1 : input.src.llvm-%A.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100008=>Lfor.inc%2%100009 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100009=>Lfor.inc%2%100010
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100009=>Lfor.inc%2%100010 for loc_id 1018
1 : input.src.llvm-%B.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100009=>Lfor.inc%2%100010 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100010=>Lfor.inc%2%100011
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100010=>Lfor.inc%2%100011 for loc_id 1020
1 : input.src.llvm-%C.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100010=>Lfor.inc%2%100011 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100011=>Lfor.inc%2%100012
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100011=>Lfor.inc%2%100012 for loc_id 1040
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100011=>Lfor.inc%2%100012 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100012=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100012=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in llvm.s1351
=Loc 1001 in llvm.s1351.
LLVMVAR
llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Loc 1002 in llvm.s1351.
LLVMVAR
src.llvm-%0
1 : input.src.llvm-%0 : BV:32
=Loc 1003 in llvm.s1351.
LLVMVAR
src.llvm-%1
1 : input.src.llvm-%1 : BV:32
=Loc 1004 in llvm.s1351.
LLVMVAR
src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr : BV:32
=Loc 1005 in llvm.s1351.
LLVMVAR
src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset : BV:32
=Loc 1006 in llvm.s1351.
LLVMVAR
src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset : BV:32
=Loc 1007 in llvm.s1351.
LLVMVAR
src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset : BV:32
=Loc 1008 in llvm.s1351.
LLVMVAR
src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset : BV:32
=Loc 1009 in llvm.s1351.
LLVMVAR
src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset : BV:32
=Loc 1010 in llvm.s1351.
LLVMVAR
src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset : BV:32
=Loc 1011 in llvm.s1351.
LLVMVAR
src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset : BV:32
=Loc 1012 in llvm.s1351.
LLVMVAR
src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset : BV:32
=Loc 1013 in llvm.s1351.
LLVMVAR
src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset : BV:32
=Loc 1014 in llvm.s1351.
LLVMVAR
src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset : BV:32
=Loc 1015 in llvm.s1351.
LLVMVAR
src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset : BV:32
=Loc 1016 in llvm.s1351.
LLVMVAR
src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
=Loc 1017 in llvm.s1351.
LLVMVAR
src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0.phi.tmpvar : BV:32
=Loc 1018 in llvm.s1351.
LLVMVAR
src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
=Loc 1019 in llvm.s1351.
LLVMVAR
src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0.phi.tmpvar : BV:32
=Loc 1020 in llvm.s1351.
LLVMVAR
src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
=Loc 1021 in llvm.s1351.
LLVMVAR
src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0.phi.tmpvar : BV:32
=Loc 1022 in llvm.s1351.
LLVMVAR
src.llvm-%add
1 : input.src.llvm-%add : BV:32
=Loc 1023 in llvm.s1351.
LLVMVAR
src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset : BV:32
=Loc 1024 in llvm.s1351.
LLVMVAR
src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset : BV:32
=Loc 1025 in llvm.s1351.
LLVMVAR
src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset : BV:32
=Loc 1026 in llvm.s1351.
LLVMVAR
src.llvm-%cmp
1 : input.src.llvm-%cmp : BOOL
=Loc 1027 in llvm.s1351.
LLVMVAR
src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr : BV:32
=Loc 1028 in llvm.s1351.
LLVMVAR
src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset : BV:32
=Loc 1029 in llvm.s1351.
LLVMVAR
src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset : BV:32
=Loc 1030 in llvm.s1351.
LLVMVAR
src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset : BV:32
=Loc 1031 in llvm.s1351.
LLVMVAR
src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset : BV:32
=Loc 1032 in llvm.s1351.
LLVMVAR
src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset : BV:32
=Loc 1033 in llvm.s1351.
LLVMVAR
src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr : BV:32
=Loc 1034 in llvm.s1351.
LLVMVAR
src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset : BV:32
=Loc 1035 in llvm.s1351.
LLVMVAR
src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset : BV:32
=Loc 1036 in llvm.s1351.
LLVMVAR
src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset : BV:32
=Loc 1037 in llvm.s1351.
LLVMVAR
src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset : BV:32
=Loc 1038 in llvm.s1351.
LLVMVAR
src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset : BV:32
=Loc 1039 in llvm.s1351.
LLVMVAR
src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=Loc 1040 in llvm.s1351.
LLVMVAR
src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
=Loc 1041 in llvm.s1351.
LLVMVAR
src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=Loc 1042 in llvm.s1351.
LLVMVAR
src.llvm-%inc
1 : input.src.llvm-%inc : BV:32
=Loc 1043 in llvm.s1351.
LLVMVAR
src.llvm-%incdec.ptr
1 : input.src.llvm-%incdec.ptr : BV:32
=Loc 1044 in llvm.s1351.
LLVMVAR
src.llvm-%incdec.ptr1
1 : input.src.llvm-%incdec.ptr1 : BV:32
=Loc 1045 in llvm.s1351.
LLVMVAR
src.llvm-%incdec.ptr2
1 : input.src.llvm-%incdec.ptr2 : BV:32
=Loc 1046 in llvm.s1351.
LLVMVAR
src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Loc 1047 in llvm.s1351.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1048 in llvm.s1351.
REGMEM
uset_visit_expr
1 : input.uset_visit_expr : BOOL
=Loc 1049 in llvm.s1351.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1050 in llvm.s1351.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1051 in llvm.s1351.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1052 in llvm.s1351.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1053 in llvm.s1351.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.3.0

=Alias analysis results in llvm.s1351
=Alias analysis result in llvm.s1351 at L0%0%1
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1004 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1005 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1006 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1007 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1008 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1009 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1010 (input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1011 (input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1012 (input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1013 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1014 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1015 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1016 (input.src.llvm-%A.0)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1017 (input.src.llvm-%A.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1018 (input.src.llvm-%B.0)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1019 (input.src.llvm-%B.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1020 (input.src.llvm-%C.0)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1021 (input.src.llvm-%C.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1022 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1023 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1024 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1025 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1026 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1027 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1028 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1029 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1030 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1031 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1032 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1033 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1034 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1035 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1036 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1037 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1038 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1039 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1040 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1041 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1042 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1043 (input.src.llvm-%incdec.ptr)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1044 (input.src.llvm-%incdec.ptr1)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1045 (input.src.llvm-%incdec.ptr2)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1046 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1047 (input.econd)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1048 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1049 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1050 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1051 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1052 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1351 at L0%0%1 for loc 1053 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1004 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr)
lr_status
lr_status_linearly_related(symbol.1, ; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1005 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1006 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1007 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.1, ; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1008 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1009 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1010 (input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1011 (input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1012 (input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1013 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1014 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1015 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1016 (input.src.llvm-%A.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1017 (input.src.llvm-%A.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1018 (input.src.llvm-%B.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1019 (input.src.llvm-%B.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1020 (input.src.llvm-%C.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1021 (input.src.llvm-%C.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1022 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1023 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1024 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1025 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1026 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1027 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr)
lr_status
lr_status_linearly_related(symbol.3, ; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1028 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1029 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1030 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.3, ; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1031 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1032 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1033 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr)
lr_status
lr_status_linearly_related(symbol.2, ; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1034 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1035 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1036 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.2, ; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1037 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1038 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1039 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1040 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1041 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1042 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1043 (input.src.llvm-%incdec.ptr)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1044 (input.src.llvm-%incdec.ptr1)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1045 (input.src.llvm-%incdec.ptr2)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1046 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1047 (input.econd)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1048 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1049 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1050 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1051 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1052 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%1%0 for loc 1053 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1004 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr)
lr_status
lr_status_linearly_related(symbol.1, ; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1005 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1006 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1007 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.1, ; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1008 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1009 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1010 (input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1011 (input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1012 (input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1013 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1014 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1015 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1016 (input.src.llvm-%A.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1017 (input.src.llvm-%A.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1018 (input.src.llvm-%B.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1019 (input.src.llvm-%B.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1020 (input.src.llvm-%C.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1021 (input.src.llvm-%C.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1022 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1023 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1024 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1025 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1026 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1027 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr)
lr_status
lr_status_linearly_related(symbol.3, ; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1028 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1029 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1030 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.3, ; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1031 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1032 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1033 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr)
lr_status
lr_status_linearly_related(symbol.2, ; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1034 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1035 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1036 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.2, ; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1037 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1038 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1039 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1040 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1041 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1042 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1043 (input.src.llvm-%incdec.ptr)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1044 (input.src.llvm-%incdec.ptr1)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1045 (input.src.llvm-%incdec.ptr2)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1046 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1047 (input.econd)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1048 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1049 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1050 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1051 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1052 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.cond%2%1 for loc 1053 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1004 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr)
lr_status
lr_status_linearly_related(symbol.1, ; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1005 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1006 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1007 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.1, ; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1008 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1009 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1010 (input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1011 (input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1012 (input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1013 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1014 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1015 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1016 (input.src.llvm-%A.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1017 (input.src.llvm-%A.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1018 (input.src.llvm-%B.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1019 (input.src.llvm-%B.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1020 (input.src.llvm-%C.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1021 (input.src.llvm-%C.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1022 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1023 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1024 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1025 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1026 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1027 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr)
lr_status
lr_status_linearly_related(symbol.3, ; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1028 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1029 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1030 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.3, ; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1031 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1032 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1033 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr)
lr_status
lr_status_linearly_related(symbol.2, ; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1034 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1035 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1036 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.2, ; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1037 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1038 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1039 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1040 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1041 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1042 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1043 (input.src.llvm-%incdec.ptr)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1044 (input.src.llvm-%incdec.ptr1)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1045 (input.src.llvm-%incdec.ptr2)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1046 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1047 (input.econd)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1048 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1049 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1050 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1051 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1052 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.body%1%1 for loc 1053 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1004 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr)
lr_status
lr_status_linearly_related(symbol.1, ; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1005 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1006 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1007 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.1, ; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1008 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1009 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1010 (input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1011 (input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1012 (input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1013 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1014 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1015 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1016 (input.src.llvm-%A.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1017 (input.src.llvm-%A.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1018 (input.src.llvm-%B.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1019 (input.src.llvm-%B.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1020 (input.src.llvm-%C.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1021 (input.src.llvm-%C.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1022 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1023 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1024 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1025 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1026 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1027 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr)
lr_status
lr_status_linearly_related(symbol.3, ; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1028 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1029 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1030 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.3, ; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1031 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1032 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1033 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr)
lr_status
lr_status_linearly_related(symbol.2, ; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1034 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1035 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1036 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.2, ; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1037 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1038 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1039 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1040 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1041 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1042 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1043 (input.src.llvm-%incdec.ptr)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1044 (input.src.llvm-%incdec.ptr1)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1045 (input.src.llvm-%incdec.ptr2)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1046 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1047 (input.econd)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1048 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1049 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1050 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1051 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1052 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1351 at Lfor.end%1%1 for loc 1053 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1001 (input.llvm-%ret-reg)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1004 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr)
lr_status
lr_status_linearly_related(symbol.1, ; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1005 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1006 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1007 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.1, ; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1008 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1009 (input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1010 (input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1011 (input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1012 (input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1013 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1014 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1015 (input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1016 (input.src.llvm-%A.0)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1017 (input.src.llvm-%A.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1018 (input.src.llvm-%B.0)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1019 (input.src.llvm-%B.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1020 (input.src.llvm-%C.0)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1021 (input.src.llvm-%C.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1022 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1023 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1024 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1025 (input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1026 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1027 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr)
lr_status
lr_status_linearly_related(symbol.3, ; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1028 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1029 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1030 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.3, ; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1031 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1032 (input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1033 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr)
lr_status
lr_status_linearly_related(symbol.2, ; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1034 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1035 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1036 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset)
lr_status
lr_status_linearly_related(symbol.2, ; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1037 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1038 (input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1039 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1040 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1041 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1042 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1043 (input.src.llvm-%incdec.ptr)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1044 (input.src.llvm-%incdec.ptr1)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1045 (input.src.llvm-%incdec.ptr2)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1046 (input.src.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1047 (input.econd)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1048 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1049 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1050 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1051 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1052 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.s1351 at E0%0%1 for loc 1053 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr

=Liveness in llvm.s1351
=live locs at L0%0%1
1049, 1051, 1052, 1053
=live locs at Lfor.cond%1%0
1016, 1018, 1020, 1040, 1049, 1051, 1052, 1053
=live locs at Lfor.cond%2%1
1016, 1018, 1020, 1026, 1040, 1049, 1051, 1052, 1053
=live locs at Lfor.body%1%1
1016, 1018, 1020, 1040, 1049, 1051, 1052, 1053
=live locs at Lfor.end%1%1
1049, 1051, 1052, 1053
=live locs at E0%0%1
1049, 1051, 1052, 1053

=Available expressions in llvm.s1351
=available expressions at L0%0%1 in llvm.s1351
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%1%0 in llvm.s1351
=avail_exprs begin
=loc 1004
=from_expr
17532 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr : BV:32
=to_expr
258 : symbol.1 : BV:32
=loc 1005
=from_expr
17444 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1006
=from_expr
17448 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1007
=from_expr
17450 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset : BV:32
=to_expr
258 : symbol.1 : BV:32
=loc 1008
=from_expr
17533 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1009
=from_expr
17534 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1027
=from_expr
17538 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr : BV:32
=to_expr
260 : symbol.3 : BV:32
=loc 1028
=from_expr
17420 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1029
=from_expr
17430 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1030
=from_expr
17432 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset : BV:32
=to_expr
260 : symbol.3 : BV:32
=loc 1031
=from_expr
17539 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1032
=from_expr
17540 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1033
=from_expr
17541 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr : BV:32
=to_expr
259 : symbol.2 : BV:32
=loc 1034
=from_expr
17435 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1035
=from_expr
17439 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1036
=from_expr
17441 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset : BV:32
=to_expr
259 : symbol.2 : BV:32
=loc 1037
=from_expr
17542 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1038
=from_expr
17543 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=avail_exprs end
=available expressions at Lfor.cond%2%1 in llvm.s1351
=avail_exprs begin
=loc 1004
=from_expr
17532 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr : BV:32
=to_expr
258 : symbol.1 : BV:32
=loc 1005
=from_expr
17444 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1006
=from_expr
17448 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1007
=from_expr
17450 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset : BV:32
=to_expr
258 : symbol.1 : BV:32
=loc 1008
=from_expr
17533 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1009
=from_expr
17534 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1026
=from_expr
17455 : input.src.llvm-%cmp : BOOL
=to_expr
17452 : input.src.llvm-%i.0 : BV:32
17453 : 32000 : BV:32
17454 : bvslt(17452, 17453) : BOOL
=loc 1027
=from_expr
17538 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr : BV:32
=to_expr
260 : symbol.3 : BV:32
=loc 1028
=from_expr
17420 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1029
=from_expr
17430 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1030
=from_expr
17432 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset : BV:32
=to_expr
260 : symbol.3 : BV:32
=loc 1031
=from_expr
17539 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1032
=from_expr
17540 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1033
=from_expr
17541 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr : BV:32
=to_expr
259 : symbol.2 : BV:32
=loc 1034
=from_expr
17435 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1035
=from_expr
17439 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1036
=from_expr
17441 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset : BV:32
=to_expr
259 : symbol.2 : BV:32
=loc 1037
=from_expr
17542 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1038
=from_expr
17543 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=avail_exprs end
=available expressions at Lfor.body%1%1 in llvm.s1351
=avail_exprs begin
=loc 1004
=from_expr
17532 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr : BV:32
=to_expr
258 : symbol.1 : BV:32
=loc 1005
=from_expr
17444 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1006
=from_expr
17448 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1007
=from_expr
17450 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset : BV:32
=to_expr
258 : symbol.1 : BV:32
=loc 1008
=from_expr
17533 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1009
=from_expr
17534 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1026
=from_expr
17455 : input.src.llvm-%cmp : BOOL
=to_expr
17452 : input.src.llvm-%i.0 : BV:32
17453 : 32000 : BV:32
17454 : bvslt(17452, 17453) : BOOL
=loc 1027
=from_expr
17538 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr : BV:32
=to_expr
260 : symbol.3 : BV:32
=loc 1028
=from_expr
17420 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1029
=from_expr
17430 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1030
=from_expr
17432 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset : BV:32
=to_expr
260 : symbol.3 : BV:32
=loc 1031
=from_expr
17539 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1032
=from_expr
17540 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1033
=from_expr
17541 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr : BV:32
=to_expr
259 : symbol.2 : BV:32
=loc 1034
=from_expr
17435 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1035
=from_expr
17439 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1036
=from_expr
17441 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset : BV:32
=to_expr
259 : symbol.2 : BV:32
=loc 1037
=from_expr
17542 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1038
=from_expr
17543 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=avail_exprs end
=available expressions at Lfor.end%1%1 in llvm.s1351
=avail_exprs begin
=loc 1004
=from_expr
17532 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr : BV:32
=to_expr
258 : symbol.1 : BV:32
=loc 1005
=from_expr
17444 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1006
=from_expr
17448 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1007
=from_expr
17450 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset : BV:32
=to_expr
258 : symbol.1 : BV:32
=loc 1008
=from_expr
17533 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1009
=from_expr
17534 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1026
=from_expr
17455 : input.src.llvm-%cmp : BOOL
=to_expr
17452 : input.src.llvm-%i.0 : BV:32
17453 : 32000 : BV:32
17454 : bvslt(17452, 17453) : BOOL
=loc 1027
=from_expr
17538 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr : BV:32
=to_expr
260 : symbol.3 : BV:32
=loc 1028
=from_expr
17420 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1029
=from_expr
17430 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1030
=from_expr
17432 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset : BV:32
=to_expr
260 : symbol.3 : BV:32
=loc 1031
=from_expr
17539 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1032
=from_expr
17540 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1033
=from_expr
17541 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr : BV:32
=to_expr
259 : symbol.2 : BV:32
=loc 1034
=from_expr
17435 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1035
=from_expr
17439 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1036
=from_expr
17441 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset : BV:32
=to_expr
259 : symbol.2 : BV:32
=loc 1037
=from_expr
17542 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1038
=from_expr
17543 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=avail_exprs end
=available expressions at E0%0%1 in llvm.s1351
=avail_exprs begin
=loc 1001
=from_expr
17531 : input.llvm-%ret-reg : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1004
=from_expr
17532 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr : BV:32
=to_expr
258 : symbol.1 : BV:32
=loc 1005
=from_expr
17444 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1006
=from_expr
17448 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1007
=from_expr
17450 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset : BV:32
=to_expr
258 : symbol.1 : BV:32
=loc 1008
=from_expr
17533 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1009
=from_expr
17534 : input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1026
=from_expr
17455 : input.src.llvm-%cmp : BOOL
=to_expr
17452 : input.src.llvm-%i.0 : BV:32
17453 : 32000 : BV:32
17454 : bvslt(17452, 17453) : BOOL
=loc 1027
=from_expr
17538 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr : BV:32
=to_expr
260 : symbol.3 : BV:32
=loc 1028
=from_expr
17420 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1029
=from_expr
17430 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1030
=from_expr
17432 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset : BV:32
=to_expr
260 : symbol.3 : BV:32
=loc 1031
=from_expr
17539 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1032
=from_expr
17540 : input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1033
=from_expr
17541 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr : BV:32
=to_expr
259 : symbol.2 : BV:32
=loc 1034
=from_expr
17435 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1035
=from_expr
17439 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1036
=from_expr
17441 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset : BV:32
=to_expr
259 : symbol.2 : BV:32
=loc 1037
=from_expr
17542 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1038
=from_expr
17543 : input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1046
=from_expr
17544 : input.src.llvm-indir_tgt : BV:32
=to_expr
17387 : retaddr_const : BV:32
=avail_exprs end

=sprel_maps in llvm.s1351
=sprel_map at L0%0%1 in llvm.s1351
=sprel_map at Lfor.cond%1%0 in llvm.s1351
=loc 1004
258 : symbol.1 : BV:32
=loc 1005
17389 : 0 : BV:32
=loc 1006
17389 : 0 : BV:32
=loc 1007
258 : symbol.1 : BV:32
=loc 1008
17389 : 0 : BV:32
=loc 1009
17389 : 0 : BV:32
=loc 1027
260 : symbol.3 : BV:32
=loc 1028
17389 : 0 : BV:32
=loc 1029
17389 : 0 : BV:32
=loc 1030
260 : symbol.3 : BV:32
=loc 1031
17389 : 0 : BV:32
=loc 1032
17389 : 0 : BV:32
=loc 1033
259 : symbol.2 : BV:32
=loc 1034
17389 : 0 : BV:32
=loc 1035
17389 : 0 : BV:32
=loc 1036
259 : symbol.2 : BV:32
=loc 1037
17389 : 0 : BV:32
=loc 1038
17389 : 0 : BV:32
=sprel_map at Lfor.cond%2%1 in llvm.s1351
=loc 1004
258 : symbol.1 : BV:32
=loc 1005
17389 : 0 : BV:32
=loc 1006
17389 : 0 : BV:32
=loc 1007
258 : symbol.1 : BV:32
=loc 1008
17389 : 0 : BV:32
=loc 1009
17389 : 0 : BV:32
=loc 1027
260 : symbol.3 : BV:32
=loc 1028
17389 : 0 : BV:32
=loc 1029
17389 : 0 : BV:32
=loc 1030
260 : symbol.3 : BV:32
=loc 1031
17389 : 0 : BV:32
=loc 1032
17389 : 0 : BV:32
=loc 1033
259 : symbol.2 : BV:32
=loc 1034
17389 : 0 : BV:32
=loc 1035
17389 : 0 : BV:32
=loc 1036
259 : symbol.2 : BV:32
=loc 1037
17389 : 0 : BV:32
=loc 1038
17389 : 0 : BV:32
=sprel_map at Lfor.body%1%1 in llvm.s1351
=loc 1004
258 : symbol.1 : BV:32
=loc 1005
17389 : 0 : BV:32
=loc 1006
17389 : 0 : BV:32
=loc 1007
258 : symbol.1 : BV:32
=loc 1008
17389 : 0 : BV:32
=loc 1009
17389 : 0 : BV:32
=loc 1027
260 : symbol.3 : BV:32
=loc 1028
17389 : 0 : BV:32
=loc 1029
17389 : 0 : BV:32
=loc 1030
260 : symbol.3 : BV:32
=loc 1031
17389 : 0 : BV:32
=loc 1032
17389 : 0 : BV:32
=loc 1033
259 : symbol.2 : BV:32
=loc 1034
17389 : 0 : BV:32
=loc 1035
17389 : 0 : BV:32
=loc 1036
259 : symbol.2 : BV:32
=loc 1037
17389 : 0 : BV:32
=loc 1038
17389 : 0 : BV:32
=sprel_map at Lfor.end%1%1 in llvm.s1351
=loc 1004
258 : symbol.1 : BV:32
=loc 1005
17389 : 0 : BV:32
=loc 1006
17389 : 0 : BV:32
=loc 1007
258 : symbol.1 : BV:32
=loc 1008
17389 : 0 : BV:32
=loc 1009
17389 : 0 : BV:32
=loc 1027
260 : symbol.3 : BV:32
=loc 1028
17389 : 0 : BV:32
=loc 1029
17389 : 0 : BV:32
=loc 1030
260 : symbol.3 : BV:32
=loc 1031
17389 : 0 : BV:32
=loc 1032
17389 : 0 : BV:32
=loc 1033
259 : symbol.2 : BV:32
=loc 1034
17389 : 0 : BV:32
=loc 1035
17389 : 0 : BV:32
=loc 1036
259 : symbol.2 : BV:32
=loc 1037
17389 : 0 : BV:32
=loc 1038
17389 : 0 : BV:32
=sprel_map at E0%0%1 in llvm.s1351
=loc 1001
17389 : 0 : BV:32
=loc 1004
258 : symbol.1 : BV:32
=loc 1005
17389 : 0 : BV:32
=loc 1006
17389 : 0 : BV:32
=loc 1007
258 : symbol.1 : BV:32
=loc 1008
17389 : 0 : BV:32
=loc 1009
17389 : 0 : BV:32
=loc 1027
260 : symbol.3 : BV:32
=loc 1028
17389 : 0 : BV:32
=loc 1029
17389 : 0 : BV:32
=loc 1030
260 : symbol.3 : BV:32
=loc 1031
17389 : 0 : BV:32
=loc 1032
17389 : 0 : BV:32
=loc 1033
259 : symbol.2 : BV:32
=loc 1034
17389 : 0 : BV:32
=loc 1035
17389 : 0 : BV:32
=loc 1036
259 : symbol.2 : BV:32
=loc 1037
17389 : 0 : BV:32
=loc 1038
17389 : 0 : BV:32
=loc 1046
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=PC_to_linename:
=pc
Lentry%1%1
=linename
(line 11 at column 8)
=pc
Lfor.cond%1%1
=linename
(line 11 at column 21)
=pc
Lfor.cond%2%1
=linename
(line 11 at column 3)
=pc
Lfor.body%1%1
=linename
(line 12 at column 9)
=pc
Lfor.body%2%1
=linename
(line 12 at column 12)
=pc
Lfor.body%3%1
=linename
(line 12 at column 11)
=pc
Lfor.body%4%1
=linename
(line 12 at column 7)
=pc
Lfor.body%5%1
=linename
line 13
=pc
Lfor.body%6%1
=linename
line 14
=pc
Lfor.body%7%1
=linename
line 15
=pc
Lfor.body%8%1
=linename
line 16
=pc
Lfor.end%1%1
=linename
line 17
=pc
Lfor.inc%1%1
=linename
(line 11 at column 29)
=pc
Lfor.inc%2%1
=linename
line 11
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%1%1
=column_name
 at column 8
=pc
Lfor.cond%1%1
=column_name
 at column 21
=pc
Lfor.cond%2%1
=column_name
 at column 3
=pc
Lfor.body%1%1
=column_name
 at column 9
=pc
Lfor.body%2%1
=column_name
 at column 12
=pc
Lfor.body%3%1
=column_name
 at column 11
=pc
Lfor.body%4%1
=column_name
 at column 7
=pc
Lfor.body%5%1
=column_name
 at column 5
=pc
Lfor.body%6%1
=column_name
 at column 5
=pc
Lfor.body%7%1
=column_name
 at column 5
=pc
Lfor.body%8%1
=column_name
 at column 3
=pc
Lfor.end%1%1
=column_name
 at column 2
=pc
Lfor.inc%1%1
=column_name
 at column 29
=pc
Lfor.inc%2%1
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%1%1
=line_and_column
line 11
=pc
Lfor.cond%1%1
=line_and_column
line 11
=pc
Lfor.cond%2%1
=line_and_column
line 11
=pc
Lfor.body%1%1
=line_and_column
line 12
=pc
Lfor.body%2%1
=line_and_column
line 12
=pc
Lfor.body%3%1
=line_and_column
line 12
=pc
Lfor.body%4%1
=line_and_column
line 12
=pc
Lfor.body%5%1
=line_and_column
line 13
=pc
Lfor.body%6%1
=line_and_column
line 14
=pc
Lfor.body%7%1
=line_and_column
line 15
=pc
Lfor.body%8%1
=line_and_column
line 16
=pc
Lfor.end%1%1
=line_and_column
line 17
=pc
Lfor.inc%1%1
=line_and_column
line 11
=pc
Lfor.inc%2%1
=line_and_column
line 11
=PC_to_line_and_column done
=SourceToLLVMVarnames:
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset : 0
input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset : 0
input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset : @c
input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset : 0
input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset : 0
input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset : 0
input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset : 0
input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset : @a
input.src.llvm-%add : (input.src.llvm-%0 + input.src.llvm-%1)
input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset : 4
input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset : (4 + A)
input.src.llvm-%A.0 : A
input.src.llvm-%C.0 : C
input.src.llvm-%cmp : (i&lt;<sub>s</sub>32000)
input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset : @b
input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset : 4
input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset : 0
input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr : @c
input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset : 0
input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset : 4
input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset : 0
input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr : @b
input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset : 0
input.src.llvm-indir_tgt : retaddr_const
input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr : @a
input.llvm-%ret-reg : 0
input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset : 0
input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset : 0
input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset : 4
input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset : 4
input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset : (4 + B)
input.src.llvm-%inc : i
input.src.llvm-%B.0 : B
input.src.llvm-%i.0.phi.tmpvar : 0
input.src.llvm-%i.0 : i
input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset : 4
input.src.llvm-%B.0.phi.tmpvar : @b
input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset : (4 + C)
input.src.llvm-%incdec.ptr2 : C
input.src.llvm-%incdec.ptr : A
input.src.llvm-%A.0.phi.tmpvar : @a
input.src.llvm-%incdec.ptr1 : B
input.src.llvm-%C.0.phi.tmpvar : @c
=InputLLVMToSourceVarnames done
=TFG_LLVM_done
=dst_tfg
=TFG:
=Nodes: L0%0%1 L1%1%0 L6%1%1 L7%1%0 E0%0%1
=Edges:
L6%1%1 => L1%1%0
L6%1%1 => L7%1%0
L0%0%1 => L1%1%0
L7%1%0 => E0%0%1
L1%1%0 => L6%1%1
=graph done
=Node outputs: E0%0%1
=Output: heap
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Output: symbol.1.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.dst.exreg.0.0 : BV:32
=Output: symbol.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.3.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
C_SYMBOL3 : c : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: L1%1%0
=L1%1%0 assume predicate_set done
=L1%1%0 assert predicate_set done
=Node assumes and asserts: L6%1%1
=L6%1%1 assume predicate_set done
=L6%1%1 assert predicate_set done
=Node assumes and asserts: L7%1%0
=L7%1%0 assume predicate_set done
=L7%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-esp
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-esp
=Edge: L6%1%1 => L1%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L6%1%1 => L7%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L0%0%1 => L1%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)

=Edge: L7%1%0 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.4 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)

=Edge: L1%1%0 => L6%1%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L0%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L1%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%1%1=>L1%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%0=>L1%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%0=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%1=>L2%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%1=>L3%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%1=>L4%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L4%1%1=>L5%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L5%1%1=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L1%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L7%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%0=>L7%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%0=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%1=>L8%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L0%1%1
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L1%1%0
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%1%1=>L1%1%0
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%0=>L1%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%0=>L6%1%1
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127984 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839312 { -127984 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127984 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 128000 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 12 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : bvadd(10, 4, 5) : BV:32
12 : select(1, 2, 11, 7, 8) : BV:32
13 : bvadd(9, 12) : BV:32
14 : 8 : BV:32
15 : bvadd(3, 4, 14) : BV:32
16 : select(1, 2, 15, 7, 8) : BV:32
17 : bvadd(10, 4, 14) : BV:32
18 : select(1, 2, 17, 7, 8) : BV:32
19 : bvadd(16, 18) : BV:32
20 : 4 : BV:32
21 : bvadd(3, 20, 4) : BV:32
22 : select(1, 2, 21, 7, 8) : BV:32
23 : bvadd(10, 20, 4) : BV:32
24 : select(1, 2, 23, 7, 8) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 4) : BV:32
27 : select(1, 2, 26, 7, 8) : BV:32
28 : bvadd(10, 4) : BV:32
29 : select(1, 2, 28, 7, 8) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(13, 19, 25, 30) : BV:128
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : bvadd(12, 4, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 4, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(12, 22, 4) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(12, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127984 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%1=>L2%1%1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%1=>L3%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 8 : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4 : BV:32
26 : bvadd(7, 25, 8) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : bvadd(7, 8) : BV:32
33 : select(5, 6, 32, 11, 12) : BV:32
34 : bvadd(31, 33) : BV:32
35 : bvconcat(14, 21, 28, 34) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%1=>L4%1%1
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=dst.exreg.11.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L4%1%1=>L5%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L5%1%1=>L6%1%1
=dst.exreg.7.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 128000 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839296 { -128000 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 128000 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.14.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839296 { -128000 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L1%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L7%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%0=>L7%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%0=>E0%0%1
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
=dst.llvm-indir_tgt
1 : retaddr_const : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%1=>L8%1%1
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%1=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L1%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L1%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%0=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L1%1%0
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L1%1%0 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%0
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%0 done
=graph_with_simplified_assets.simplified_assumes at L7%1%0=>L7%1%1
=graph_with_simplified_assets.simplified_assumes at L7%1%0=>L7%1%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%0=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L7%1%0=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1017
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1050
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1054
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1017
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1050
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 for loc_id 1054
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L1%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L1%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127984 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127984 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 12 : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : 4 : INT
8 : 0 : BOOL
9 : select(1, 2, 6, 7, 8) : BV:32
10 : dst_symbol_addr.3 : BV:32
11 : bvadd(10, 4, 5) : BV:32
12 : select(1, 2, 11, 7, 8) : BV:32
13 : bvadd(9, 12) : BV:32
14 : 8 : BV:32
15 : bvadd(3, 4, 14) : BV:32
16 : select(1, 2, 15, 7, 8) : BV:32
17 : bvadd(10, 4, 14) : BV:32
18 : select(1, 2, 17, 7, 8) : BV:32
19 : bvadd(16, 18) : BV:32
20 : 4 : BV:32
21 : bvadd(3, 20, 4) : BV:32
22 : select(1, 2, 21, 7, 8) : BV:32
23 : bvadd(10, 20, 4) : BV:32
24 : select(1, 2, 23, 7, 8) : BV:32
25 : bvadd(22, 24) : BV:32
26 : bvadd(3, 4) : BV:32
27 : select(1, 2, 26, 7, 8) : BV:32
28 : bvadd(10, 4) : BV:32
29 : select(1, 2, 28, 7, 8) : BV:32
30 : bvadd(27, 29) : BV:32
31 : bvconcat(13, 19, 25, 30) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839312 { -127984 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127984 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 128000 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1049
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : bvadd(12, 4, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 4, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(12, 22, 4) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(12, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : memlabel-mem-heap : MEMLABEL
37 : memmask(35, 36) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1051
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : bvadd(12, 4, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 4, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(12, 22, 4) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(12, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : memlabel-mem-symbol.1.0 : MEMLABEL
37 : memmask(35, 36) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1052
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : bvadd(12, 4, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 4, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(12, 22, 4) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(12, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : memlabel-mem-symbol.2.0 : MEMLABEL
37 : memmask(35, 36) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 for loc_id 1053
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : dst_symbol_addr.2 : BV:32
7 : 12 : BV:32
8 : bvadd(6, 4, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : bvadd(12, 4, 7) : BV:32
14 : select(1, 2, 13, 9, 10) : BV:32
15 : bvadd(11, 14) : BV:32
16 : 8 : BV:32
17 : bvadd(6, 4, 16) : BV:32
18 : select(1, 2, 17, 9, 10) : BV:32
19 : bvadd(12, 4, 16) : BV:32
20 : select(1, 2, 19, 9, 10) : BV:32
21 : bvadd(18, 20) : BV:32
22 : 4 : BV:32
23 : bvadd(6, 22, 4) : BV:32
24 : select(1, 2, 23, 9, 10) : BV:32
25 : bvadd(12, 22, 4) : BV:32
26 : select(1, 2, 25, 9, 10) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvadd(6, 4) : BV:32
29 : select(1, 2, 28, 9, 10) : BV:32
30 : bvadd(12, 4) : BV:32
31 : select(1, 2, 30, 9, 10) : BV:32
32 : bvadd(29, 31) : BV:32
33 : bvconcat(15, 21, 27, 32) : BV:128
34 : 16 : INT
35 : store(1, 2, 5, 33, 34, 10) : ARRAY[BV:32 -> BV:8]
36 : memlabel-mem-symbol.3.0 : MEMLABEL
37 : memmask(35, 36) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L1%1%0=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.2 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 8 : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4 : BV:32
26 : bvadd(7, 25, 8) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : bvadd(7, 8) : BV:32
33 : select(5, 6, 32, 11, 12) : BV:32
34 : bvadd(31, 33) : BV:32
35 : bvconcat(14, 21, 28, 34) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1002
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1012
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1013
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1014
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1018
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1049
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-heap : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1051
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.1.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1052
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1053
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 128000 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1005
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839296 { -128000 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839296 { -128000 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 128000 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1012
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1013
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1018
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1019
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1020
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1021
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1022
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1023
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1024
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1025
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1026
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1027
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 for loc_id 1028
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L1%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1018
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1019
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1020
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1021
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1022
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1023
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1024
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1025
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1026
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1027
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 for loc_id 1028
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>L7%1%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>L7%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1015
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1016
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1018
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1019
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1021
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1022
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1023
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1024
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 for loc_id 1025
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%0=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1011
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1012
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1013
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1014
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1015
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1016
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1018
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1019
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1021
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1022
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1023
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1024
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 for loc_id 1025
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in dst
=Loc 0 in dst.
REGMEM
dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=Loc 2 in dst.
REGMEM
dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=Loc 3 in dst.
REGMEM
dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=Loc 4 in dst.
REGMEM
dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=Loc 5 in dst.
REGMEM
dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=Loc 6 in dst.
REGMEM
dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=Loc 7 in dst.
REGMEM
dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=Loc 1001 in dst.
REGMEM
dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=Loc 1002 in dst.
REGMEM
dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=Loc 1003 in dst.
REGMEM
dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=Loc 1004 in dst.
REGMEM
dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=Loc 1005 in dst.
REGMEM
dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=Loc 1006 in dst.
REGMEM
dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=Loc 1007 in dst.
REGMEM
dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=Loc 1008 in dst.
REGMEM
dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=Loc 1009 in dst.
REGMEM
dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=Loc 1010 in dst.
REGMEM
dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=Loc 1011 in dst.
REGMEM
dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=Loc 1012 in dst.
REGMEM
dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=Loc 1013 in dst.
REGMEM
dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=Loc 1014 in dst.
REGMEM
dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=Loc 1015 in dst.
LLVMVAR
dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Loc 1016 in dst.
REGMEM
dst.esp.E0%0%1
1 : input.dst.esp.E0%0%1 : BV:32
=Loc 1017 in dst.
REGMEM
dst.esp.L0%1%1
1 : input.dst.esp.L0%1%1 : BV:32
=Loc 1018 in dst.
REGMEM
dst.hidden_reg.0
1 : input.dst.hidden_reg.0 : BV:32
=Loc 1019 in dst.
REGMEM
dst.hidden_reg.1
1 : input.dst.hidden_reg.1 : BOOL
=Loc 1020 in dst.
REGMEM
dst.hidden_reg.10
1 : input.dst.hidden_reg.10 : BOOL
=Loc 1021 in dst.
REGMEM
dst.hidden_reg.2
1 : input.dst.hidden_reg.2 : BOOL
=Loc 1022 in dst.
REGMEM
dst.hidden_reg.3
1 : input.dst.hidden_reg.3 : BOOL
=Loc 1023 in dst.
REGMEM
dst.hidden_reg.4
1 : input.dst.hidden_reg.4 : BOOL
=Loc 1024 in dst.
REGMEM
dst.hidden_reg.5
1 : input.dst.hidden_reg.5 : BOOL
=Loc 1025 in dst.
REGMEM
dst.hidden_reg.6
1 : input.dst.hidden_reg.6 : BOOL
=Loc 1026 in dst.
REGMEM
dst.hidden_reg.7
1 : input.dst.hidden_reg.7 : BOOL
=Loc 1027 in dst.
REGMEM
dst.hidden_reg.8
1 : input.dst.hidden_reg.8 : BOOL
=Loc 1028 in dst.
REGMEM
dst.hidden_reg.9
1 : input.dst.hidden_reg.9 : BOOL
=Loc 1029 in dst.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1049 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-heap
=Loc 1050 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-esp
=Loc 1051 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1052 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1053 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.3.0
=Loc 1054 in dst.
SLOT
=memname
dst.mem
=addr
1 : input_stack_pointer_const : BV:32
=nbytes
4
=bigendian
false

=Alias analysis results in dst
=Alias analysis result in dst at L0%0%1
=Alias analysis result in dst at L0%0%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 3 (input.dst.exreg.0.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 4 (input.dst.exreg.0.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 5 (input.dst.exreg.0.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 6 (input.dst.exreg.0.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 7 (input.dst.exreg.0.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1017 (input.dst.esp.L0%1%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1049 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1050 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1051 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1052 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1053 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1054 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
nullptr
=Alias analysis result in dst at L1%1%0
=Alias analysis result in dst at L1%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L1%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L1%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L1%1%0 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1049 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1050 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1051 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1052 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1053 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L1%1%0 for loc 1054 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1
=Alias analysis result in dst at L6%1%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L6%1%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L6%1%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L6%1%1 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1049 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1050 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1051 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1052 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1053 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L6%1%1 for loc 1054 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0
=Alias analysis result in dst at L7%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L7%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L7%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1012 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1013 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1014 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1015 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1016 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L7%1%0 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1049 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1050 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1051 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1052 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1053 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L7%1%0 for loc 1054 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1
=Alias analysis result in dst at E0%0%1 for loc 0 (input.dst.exreg.0.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1001 (input.dst.exreg.10.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1002 (input.dst.exreg.11.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1003 (input.dst.exreg.12.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1004 (input.dst.exreg.13.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1005 (input.dst.exreg.14.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1006 (input.dst.exreg.15.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1007 (input.dst.exreg.16.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1009 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1010 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1011 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1012 (input.dst.exreg.7.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1013 (input.dst.exreg.8.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1014 (input.dst.exreg.9.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1015 (input.dst.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1016 (input.dst.esp.E0%0%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1017 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1018 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1019 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1020 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1021 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1022 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1023 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1024 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1025 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1026 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1027 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1028 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1029 (input.econd)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1049 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1050 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1051 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1052 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1053 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1054 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )

=Liveness in dst
=live locs at L0%0%1
1049, 1051, 1052, 1053
=live locs at L1%1%0
0, 1049, 1051, 1052, 1053
=live locs at L6%1%1
0, 1013, 1049, 1051, 1052, 1053
=live locs at L7%1%0
1049, 1051, 1052, 1053
=live locs at E0%0%1
0, 1015, 1049, 1051, 1052, 1053

=Available expressions in dst

=sprel_maps in dst
=sprel_map at L0%0%1 in dst
=sprel_map at L1%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1054
17387 : retaddr_const : BV:32
=sprel_map at L6%1%1 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1054
17387 : retaddr_const : BV:32
=sprel_map at L7%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1054
17387 : retaddr_const : BV:32
=sprel_map at E0%0%1 in dst
=loc 0
17389 : 0 : BV:32
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
17418 : 4 : BV:32
18001 : bvadd(17386, 17418) : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1001
17641 : 0 : BV:1
=loc 1002
17641 : 0 : BV:1
=loc 1003
17641 : 0 : BV:1
=loc 1004
17638 : 1 : BV:1
=loc 1005
17638 : 1 : BV:1
=loc 1006
17638 : 1 : BV:1
=loc 1007
17638 : 1 : BV:1
=loc 1012
17638 : 1 : BV:1
=loc 1013
17641 : 0 : BV:1
=loc 1014
17641 : 0 : BV:1
=loc 1015
17387 : retaddr_const : BV:32
=loc 1016
17386 : input_stack_pointer_const : BV:32
17418 : 4 : BV:32
18001 : bvadd(17386, 17418) : BV:32
=loc 1017
17386 : input_stack_pointer_const : BV:32
=loc 1054
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=eqcheck_info
=eqcheck
=proof_filename s1351_s1351.gcc.eqchecker.O3.i386.ALL.proof
=function_name s1351
=fixed_reg_mappings begin
0 : 0 : 0
0 : 4 : 4
=fixed_reg_mappings end
=rodata_map begin
=rodata_map end
=dst_iseq
.i0: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i1: movdqa %exvr5.3w:C_SYMBOL0(%exvr0.0d),%exvr2.0 #
.i2: paddd %exvr5.3w:C_SYMBOL1(%exvr0.0d),%exvr2.0 #
.i3: addl $0x10,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i4: movaps %exvr2.0,%exvr5.3w:C_SYMBOL2*1+-16/umask/32(%exvr0.0d) #
.i5: cmpl $0x1f400,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i6: jne .i1 #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i7: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i8: retl  #%exvr0.4d,%exvr5.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
=dst_iseq done
=dst_insn_pcs
0 : 0x0
1 : 0x4
2 : 0x6
3 : 0xd
4 : 0x10
5 : 0x18
6 : 0x20
7 : 0x23
8 : 0x2a
=dst_insn_pcs done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
C_SYMBOL3 : c : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.2.0_begin : BV:32
2 : memlabel-mem-symbol.2.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.1.0_begin : BV:32
11 : memlabel-mem-symbol.1.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-symbol.3.0_begin : BV:32
18 : memlabel-mem-symbol.3.0_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : bvadd(17, 6) : BV:32
22 : eq(18, 21) : BOOL
23 : and(20, 22) : BOOL
24 : memlabel-mem-esp_begin : BV:32
25 : memlabel-mem-esp_end : BV:32
26 : bvule(24, 25) : BOOL
27 : and(23, 26) : BOOL
28 : stack.size : BV:32
29 : bvadd(28, 5) : BV:32
30 : bvadd(24, 29) : BV:32
31 : eq(25, 30) : BOOL
32 : and(27, 31) : BOOL
33 : bvuge(1, 10) : BOOL
34 : bvule(1, 11) : BOOL
35 : and(33, 34) : BOOL
36 : bvuge(2, 10) : BOOL
37 : bvule(2, 11) : BOOL
38 : and(36, 37) : BOOL
39 : not(38) : BOOL
40 : andnot1(35, 39) : BOOL
41 : bvuge(1, 17) : BOOL
42 : bvule(1, 18) : BOOL
43 : and(41, 42) : BOOL
44 : bvuge(2, 17) : BOOL
45 : bvule(2, 18) : BOOL
46 : and(44, 45) : BOOL
47 : not(46) : BOOL
48 : andnot1(43, 47) : BOOL
49 : and(40, 48) : BOOL
50 : bvuge(1, 24) : BOOL
51 : bvule(1, 25) : BOOL
52 : and(50, 51) : BOOL
53 : bvuge(2, 24) : BOOL
54 : bvule(2, 25) : BOOL
55 : and(53, 54) : BOOL
56 : not(55) : BOOL
57 : andnot1(52, 56) : BOOL
58 : and(49, 57) : BOOL
59 : bvuge(10, 1) : BOOL
60 : bvule(10, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(11, 1) : BOOL
63 : bvule(11, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(10, 17) : BOOL
69 : bvule(10, 18) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(11, 17) : BOOL
72 : bvule(11, 18) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(10, 24) : BOOL
78 : bvule(10, 25) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(11, 24) : BOOL
81 : bvule(11, 25) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(17, 1) : BOOL
87 : bvule(17, 2) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(18, 1) : BOOL
90 : bvule(18, 2) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(17, 10) : BOOL
96 : bvule(17, 11) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(18, 10) : BOOL
99 : bvule(18, 11) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(17, 24) : BOOL
105 : bvule(17, 25) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(18, 24) : BOOL
108 : bvule(18, 25) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(24, 1) : BOOL
114 : bvule(24, 2) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(25, 1) : BOOL
117 : bvule(25, 2) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(24, 10) : BOOL
123 : bvule(24, 11) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(25, 10) : BOOL
126 : bvule(25, 11) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(24, 17) : BOOL
132 : bvule(24, 18) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(25, 17) : BOOL
135 : bvule(25, 18) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : and(32, 139) : BOOL
141 : symbol.2 : BV:32
142 : 15 : BV:32
143 : bvand(141, 142) : BV:32
144 : 0 : BV:32
145 : eq(143, 144) : BOOL
146 : and(140, 145) : BOOL
147 : symbol.1 : BV:32
148 : bvand(147, 142) : BV:32
149 : eq(148, 144) : BOOL
150 : and(146, 149) : BOOL
151 : symbol.3 : BV:32
152 : bvand(151, 142) : BV:32
153 : eq(152, 144) : BOOL
154 : and(150, 153) : BOOL
155 : eq(147, 10) : BOOL
156 : eq(141, 1) : BOOL
157 : and(155, 156) : BOOL
158 : eq(151, 17) : BOOL
159 : and(157, 158) : BOOL
160 : and(154, 159) : BOOL
161 : input_stack_pointer_const : BV:32
162 : bvule(24, 161) : BOOL
163 : bvule(161, 25) : BOOL
164 : and(162, 163) : BOOL
165 : 3 : BV:32
166 : bvadd(161, 165) : BV:32
167 : eq(166, 25) : BOOL
168 : and(164, 167) : BOOL
169 : and(160, 168) : BOOL
170 : 4294963200 { -4096 } : BV:32
171 : bvand(24, 170) : BV:32
172 : eq(171, 24) : BOOL
173 : 1 : BV:32
174 : bvadd(25, 173) : BV:32
175 : bvand(174, 170) : BV:32
176 : eq(175, 174) : BOOL
177 : and(172, 176) : BOOL
178 : and(169, 177) : BOOL
179 : dst_symbol_addr.1 : BV:32
180 : eq(147, 179) : BOOL
181 : dst_symbol_addr.2 : BV:32
182 : eq(141, 181) : BOOL
183 : and(180, 182) : BOOL
184 : dst_symbol_addr.3 : BV:32
185 : eq(151, 184) : BOOL
186 : and(183, 185) : BOOL
187 : and(178, 186) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 3076932624 { -1218034672 } : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 3077479712 { -1217487584 } : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : symbol.3 : BV:32
9 : 3074823184 { -1220144112 } : BV:32
10 : eq(8, 9) : BOOL
11 : and(7, 10) : BOOL
12 : dst_symbol_addr.1 : BV:32
13 : eq(12, 2) : BOOL
14 : and(11, 13) : BOOL
15 : dst_symbol_addr.2 : BV:32
16 : eq(15, 5) : BOOL
17 : and(14, 16) : BOOL
18 : dst_symbol_addr.3 : BV:32
19 : eq(18, 9) : BOOL
20 : and(17, 19) : BOOL
21 : input_stack_pointer_const : BV:32
22 : 2955415548 { -1339551748 } : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.2.0_begin : BV:32
26 : eq(25, 5) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.2.0_end : BV:32
29 : 3077607711 { -1217359585 } : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-symbol.1.0_begin : BV:32
33 : eq(32, 2) : BOOL
34 : and(31, 33) : BOOL
35 : memlabel-mem-symbol.1.0_end : BV:32
36 : 3077060623 { -1217906673 } : BV:32
37 : eq(35, 36) : BOOL
38 : and(34, 37) : BOOL
39 : memlabel-mem-symbol.3.0_begin : BV:32
40 : eq(39, 9) : BOOL
41 : and(38, 40) : BOOL
42 : memlabel-mem-symbol.3.0_end : BV:32
43 : 3074951183 { -1220016113 } : BV:32
44 : eq(42, 43) : BOOL
45 : and(41, 44) : BOOL
46 : memlabel-mem-esp_begin : BV:32
47 : 1176010752 : BV:32
48 : eq(46, 47) : BOOL
49 : and(45, 48) : BOOL
50 : memlabel-mem-esp_end : BV:32
51 : 2955415551 { -1339551745 } : BV:32
52 : eq(50, 51) : BOOL
53 : and(49, 52) : BOOL
54 : stack.size : BV:32
55 : 1779404800 : BV:32
56 : eq(54, 55) : BOOL
57 : and(53, 56) : BOOL
=use_concrete_assertion : 1
=Memlabel assertions done
=llvm2ir 0
=eqcheck done
=graph_with_guessing
=Nodes: L0%0%1_L0%0%1 Lfor.body%1%1_L1%1%0 E0%0%1_E0%0%1
=Edges:
L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
Lfor.body%1%1_L1%1%0 => E0%0%1_E0%0%1
=graph done
=Node outputs: E0%0%1_E0%0%1
=Node outputs done for E0%0%1_E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
C_SYMBOL3 : c : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=state_end

=Node assumes and asserts: L0%0%1_L0%0%1
=L0%0%1_L0%0%1 assume pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=L0%0%1_L0%0%1 assume predicate_set done
=L0%0%1_L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1_L1%1%0
=Lfor.body%1%1_L1%1%0 assume predicate_set done
=Lfor.body%1%1_L1%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1_E0%0%1
=E0%0%1_E0%0%1 assume predicate_set done
=E0%0%1_E0%0%1 assert pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=E0%0%1_E0%0%1 assert pred 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=E0%0%1_E0%0%1 assert pred 2
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.llvm-indir_tgt : BV:32
=predicate done
=E0%0%1_E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-esp
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-esp
=memlabel_map.5
mlvar.llvm.s1351.0 : memlabel-mem-symbol.2.0
=memlabel_map.6
mlvar.llvm.s1351.1 : memlabel-mem-symbol.3.0
=memlabel_map.7
mlvar.llvm.s1351.2 : memlabel-mem-symbol.1.0
=Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L1%1%0 => E0%0%1_E0%0%1
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to E0%0%1 at unroll 8 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))+((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge3
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge4
=Edge.src_tfg_full_pathset.Edge: Lfor.end%1%1 => E0%0%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:  ret i32 0, !dbg !39
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L1%1%0 to E0%0%1 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*((L6%1%1=>L7%1%0)*(L7%1%0=>E0%0%1)))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L7%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.dst_tfg_full_pathset.Edge: L7%1%0 => E0%0%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.4 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset done

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicates at E0%0%1_E0%0%1
=predicates at E0%0%1_E0%0%1 predicate# 0
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : retaddr_const : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 1
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 2
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicates at E0%0%1_E0%0%1 done
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in s1351

=Alias analysis results in s1351
=Alias analysis result in s1351 at L0%0%1_L0%0%1
=Alias analysis result in s1351 at Lfor.body%1%1_L1%1%0
=Alias analysis result in s1351 at E0%0%1_E0%0%1

=Liveness in s1351
=live locs at L0%0%1_L0%0%1

=live locs at Lfor.body%1%1_L1%1%0

=live locs at E0%0%1_E0%0%1


=Available expressions in s1351

=sprel_maps in s1351
=sprel_map at L0%0%1_L0%0%1 in s1351
=sprel_map at Lfor.body%1%1_L1%1%0 in s1351
=sprel_map at E0%0%1_E0%0%1 in s1351
=graph_with_aliasing_done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : a : 128000 : 16 : 0
C_SYMBOL2 : b : 128000 : 16 : 0
C_SYMBOL3 : c : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.2.0_begin : BV:32
2 : memlabel-mem-symbol.2.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-symbol.1.0_begin : BV:32
11 : memlabel-mem-symbol.1.0_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : bvadd(10, 6) : BV:32
15 : eq(11, 14) : BOOL
16 : and(13, 15) : BOOL
17 : memlabel-mem-symbol.3.0_begin : BV:32
18 : memlabel-mem-symbol.3.0_end : BV:32
19 : bvule(17, 18) : BOOL
20 : and(16, 19) : BOOL
21 : bvadd(17, 6) : BV:32
22 : eq(18, 21) : BOOL
23 : and(20, 22) : BOOL
24 : memlabel-mem-esp_begin : BV:32
25 : memlabel-mem-esp_end : BV:32
26 : bvule(24, 25) : BOOL
27 : and(23, 26) : BOOL
28 : stack.size : BV:32
29 : bvadd(28, 5) : BV:32
30 : bvadd(24, 29) : BV:32
31 : eq(25, 30) : BOOL
32 : and(27, 31) : BOOL
33 : bvuge(1, 10) : BOOL
34 : bvule(1, 11) : BOOL
35 : and(33, 34) : BOOL
36 : bvuge(2, 10) : BOOL
37 : bvule(2, 11) : BOOL
38 : and(36, 37) : BOOL
39 : not(38) : BOOL
40 : andnot1(35, 39) : BOOL
41 : bvuge(1, 17) : BOOL
42 : bvule(1, 18) : BOOL
43 : and(41, 42) : BOOL
44 : bvuge(2, 17) : BOOL
45 : bvule(2, 18) : BOOL
46 : and(44, 45) : BOOL
47 : not(46) : BOOL
48 : andnot1(43, 47) : BOOL
49 : and(40, 48) : BOOL
50 : bvuge(1, 24) : BOOL
51 : bvule(1, 25) : BOOL
52 : and(50, 51) : BOOL
53 : bvuge(2, 24) : BOOL
54 : bvule(2, 25) : BOOL
55 : and(53, 54) : BOOL
56 : not(55) : BOOL
57 : andnot1(52, 56) : BOOL
58 : and(49, 57) : BOOL
59 : bvuge(10, 1) : BOOL
60 : bvule(10, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(11, 1) : BOOL
63 : bvule(11, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(10, 17) : BOOL
69 : bvule(10, 18) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(11, 17) : BOOL
72 : bvule(11, 18) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(10, 24) : BOOL
78 : bvule(10, 25) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(11, 24) : BOOL
81 : bvule(11, 25) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(17, 1) : BOOL
87 : bvule(17, 2) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(18, 1) : BOOL
90 : bvule(18, 2) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(17, 10) : BOOL
96 : bvule(17, 11) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(18, 10) : BOOL
99 : bvule(18, 11) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(17, 24) : BOOL
105 : bvule(17, 25) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(18, 24) : BOOL
108 : bvule(18, 25) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(24, 1) : BOOL
114 : bvule(24, 2) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(25, 1) : BOOL
117 : bvule(25, 2) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(24, 10) : BOOL
123 : bvule(24, 11) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(25, 10) : BOOL
126 : bvule(25, 11) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(24, 17) : BOOL
132 : bvule(24, 18) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(25, 17) : BOOL
135 : bvule(25, 18) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : and(32, 139) : BOOL
141 : symbol.2 : BV:32
142 : 15 : BV:32
143 : bvand(141, 142) : BV:32
144 : 0 : BV:32
145 : eq(143, 144) : BOOL
146 : and(140, 145) : BOOL
147 : symbol.1 : BV:32
148 : bvand(147, 142) : BV:32
149 : eq(148, 144) : BOOL
150 : and(146, 149) : BOOL
151 : symbol.3 : BV:32
152 : bvand(151, 142) : BV:32
153 : eq(152, 144) : BOOL
154 : and(150, 153) : BOOL
155 : eq(147, 10) : BOOL
156 : eq(141, 1) : BOOL
157 : and(155, 156) : BOOL
158 : eq(151, 17) : BOOL
159 : and(157, 158) : BOOL
160 : and(154, 159) : BOOL
161 : input_stack_pointer_const : BV:32
162 : bvule(24, 161) : BOOL
163 : bvule(161, 25) : BOOL
164 : and(162, 163) : BOOL
165 : 3 : BV:32
166 : bvadd(161, 165) : BV:32
167 : eq(166, 25) : BOOL
168 : and(164, 167) : BOOL
169 : and(160, 168) : BOOL
170 : 4294963200 { -4096 } : BV:32
171 : bvand(24, 170) : BV:32
172 : eq(171, 24) : BOOL
173 : 1 : BV:32
174 : bvadd(25, 173) : BV:32
175 : bvand(174, 170) : BV:32
176 : eq(175, 174) : BOOL
177 : and(172, 176) : BOOL
178 : and(169, 177) : BOOL
179 : dst_symbol_addr.1 : BV:32
180 : eq(147, 179) : BOOL
181 : dst_symbol_addr.2 : BV:32
182 : eq(141, 181) : BOOL
183 : and(180, 182) : BOOL
184 : dst_symbol_addr.3 : BV:32
185 : eq(151, 184) : BOOL
186 : and(183, 185) : BOOL
187 : and(178, 186) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 3076932624 { -1218034672 } : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 3077479712 { -1217487584 } : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : symbol.3 : BV:32
9 : 3074823184 { -1220144112 } : BV:32
10 : eq(8, 9) : BOOL
11 : and(7, 10) : BOOL
12 : dst_symbol_addr.1 : BV:32
13 : eq(12, 2) : BOOL
14 : and(11, 13) : BOOL
15 : dst_symbol_addr.2 : BV:32
16 : eq(15, 5) : BOOL
17 : and(14, 16) : BOOL
18 : dst_symbol_addr.3 : BV:32
19 : eq(18, 9) : BOOL
20 : and(17, 19) : BOOL
21 : input_stack_pointer_const : BV:32
22 : 2955415548 { -1339551748 } : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.2.0_begin : BV:32
26 : eq(25, 5) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.2.0_end : BV:32
29 : 3077607711 { -1217359585 } : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-symbol.1.0_begin : BV:32
33 : eq(32, 2) : BOOL
34 : and(31, 33) : BOOL
35 : memlabel-mem-symbol.1.0_end : BV:32
36 : 3077060623 { -1217906673 } : BV:32
37 : eq(35, 36) : BOOL
38 : and(34, 37) : BOOL
39 : memlabel-mem-symbol.3.0_begin : BV:32
40 : eq(39, 9) : BOOL
41 : and(38, 40) : BOOL
42 : memlabel-mem-symbol.3.0_end : BV:32
43 : 3074951183 { -1220016113 } : BV:32
44 : eq(42, 43) : BOOL
45 : and(41, 44) : BOOL
46 : memlabel-mem-esp_begin : BV:32
47 : 1176010752 : BV:32
48 : eq(46, 47) : BOOL
49 : and(45, 48) : BOOL
50 : memlabel-mem-esp_end : BV:32
51 : 2955415551 { -1339551745 } : BV:32
52 : eq(50, 51) : BOOL
53 : and(49, 52) : BOOL
54 : stack.size : BV:32
55 : 1779404800 : BV:32
56 : eq(54, 55) : BOOL
57 : and(53, 56) : BOOL
=use_concrete_assertion : 0
=Memlabel assertions done
=counterexamples at pc L0%0%1_L0%0%1
=pc L0%0%1_L0%0%1 nodece 0
=pc L0%0%1_L0%0%1 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 0 nodece_path
=pc L0%0%1_L0%0%1 nodece 0 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 0 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1
=pc L0%0%1_L0%0%1 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1 nodece_path
=pc L0%0%1_L0%0%1 nodece 1 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 1 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2
=pc L0%0%1_L0%0%1 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2 nodece_path
=pc L0%0%1_L0%0%1 nodece 2 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 2 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3
=pc L0%0%1_L0%0%1 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3 nodece_path
=pc L0%0%1_L0%0%1 nodece 3 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 3 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4
=pc L0%0%1_L0%0%1 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4 nodece_path
=pc L0%0%1_L0%0%1 nodece 4 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 4 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5
=pc L0%0%1_L0%0%1 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5 nodece_path
=pc L0%0%1_L0%0%1 nodece 5 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 5 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6
=pc L0%0%1_L0%0%1 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6 nodece_path
=pc L0%0%1_L0%0%1 nodece 6 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 6 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7
=pc L0%0%1_L0%0%1 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1389867269
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7 nodece_path
=pc L0%0%1_L0%0%1 nodece 7 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 7 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1389867269
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8
=pc L0%0%1_L0%0%1 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3503725916
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8 nodece_path
=pc L0%0%1_L0%0%1 nodece 8 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 8 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3503725916
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9
=pc L0%0%1_L0%0%1 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
648031326
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9 nodece_path
=pc L0%0%1_L0%0%1 nodece 9 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 9 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
648031326
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10
=pc L0%0%1_L0%0%1 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1411154259
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10 nodece_path
=pc L0%0%1_L0%0%1 nodece 10 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 10 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1411154259
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11
=pc L0%0%1_L0%0%1 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479716 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479716 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479716 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1737518944
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11 nodece_path
=pc L0%0%1_L0%0%1 nodece 11 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 11 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479716 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479716 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479716 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1737518944
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12
=pc L0%0%1_L0%0%1 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
677870460
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12 nodece_path
=pc L0%0%1_L0%0%1 nodece 12 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 12 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
677870460
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13
=pc L0%0%1_L0%0%1 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
932026304
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13 nodece_path
=pc L0%0%1_L0%0%1 nodece 13 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 13 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
932026304
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14
=pc L0%0%1_L0%0%1 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 45 , m_adder -> 240)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 45 , m_adder -> 240)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3477323588
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14 nodece_path
=pc L0%0%1_L0%0%1 nodece 14 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 14 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 45 , m_adder -> 240)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 45 , m_adder -> 240)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3477323588
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15
=pc L0%0%1_L0%0%1 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1433102829
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15 nodece_path
=pc L0%0%1_L0%0%1 nodece 15 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 15 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1433102829
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16
=pc L0%0%1_L0%0%1 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1887658390
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16 nodece_path
=pc L0%0%1_L0%0%1 nodece 16 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 16 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1887658390
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17
=pc L0%0%1_L0%0%1 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 232)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 232)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1089254938
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17 nodece_path
=pc L0%0%1_L0%0%1 nodece 17 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 17 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 232)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 232)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1089254938
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18
=pc L0%0%1_L0%0%1 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823184 ) -> 1, ( 3074823192 ) -> 2, ( 3074823196 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823184 ) -> 1, ( 3074823192 ) -> 2, ( 3074823196 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823184 ) -> 1, ( 3074823192 ) -> 2, ( 3074823196 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 2 : BV:8
=unaliased_memslot.2
1 : 2 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1281830857
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18 nodece_path
=pc L0%0%1_L0%0%1 nodece 18 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 18 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823184 ) -> 1, ( 3074823192 ) -> 2, ( 3074823196 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823184 ) -> 1, ( 3074823192 ) -> 2, ( 3074823196 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823184 ) -> 1, ( 3074823192 ) -> 2, ( 3074823196 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 2 : BV:8
=unaliased_memslot.2
1 : 2 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1281830857
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19
=pc L0%0%1_L0%0%1 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823196 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823196 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823196 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 255 { -1 } : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1386418627
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19 nodece_path
=pc L0%0%1_L0%0%1 nodece 19 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 19 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823196 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823196 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823196 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 255 { -1 } : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1386418627
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20
=pc L0%0%1_L0%0%1 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823184 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823184 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823184 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 32 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1156541312
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20 nodece_path
=pc L0%0%1_L0%0%1 nodece 20 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 20 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823184 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823184 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823184 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 32 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1156541312
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21
=pc L0%0%1_L0%0%1 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823184 ) -> 4, ( 3077479720 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823184 ) -> 4, ( 3077479720 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823184 ) -> 4, ( 3077479720 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 4 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1635550270
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21 nodece_path
=pc L0%0%1_L0%0%1 nodece 21 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 21 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823184 ) -> 4, ( 3077479720 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823184 ) -> 4, ( 3077479720 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823184 ) -> 4, ( 3077479720 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 4 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1635550270
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22
=pc L0%0%1_L0%0%1 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823192 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823192 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823192 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 63 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2069110699
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22 nodece_path
=pc L0%0%1_L0%0%1 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 22 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823192 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823192 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823192 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 63 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2069110699
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23
=pc L0%0%1_L0%0%1 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823192 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823192 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823192 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 32 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712633417
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23 nodece_path
=pc L0%0%1_L0%0%1 nodece 23 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 23 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823192 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823192 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823192 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 32 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
712633417
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24
=pc L0%0%1_L0%0%1 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
272020127
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24 nodece_path
=pc L0%0%1_L0%0%1 nodece 24 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 24 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
272020127
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25
=pc L0%0%1_L0%0%1 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
488663950
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25 nodece_path
=pc L0%0%1_L0%0%1 nodece 25 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 25 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
488663950
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26
=pc L0%0%1_L0%0%1 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823188 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823188 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823188 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2033505236
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26 nodece_path
=pc L0%0%1_L0%0%1 nodece 26 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 26 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823188 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823188 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823188 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2033505236
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27
=pc L0%0%1_L0%0%1 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910300925
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27 nodece_path
=pc L0%0%1_L0%0%1 nodece 27 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 27 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910300925
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28
=pc L0%0%1_L0%0%1 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2030449291
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28 nodece_path
=pc L0%0%1_L0%0%1 nodece 28 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 28 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2030449291
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29
=pc L0%0%1_L0%0%1 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 207 , m_adder -> 124)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 207 , m_adder -> 124)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
947288222
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29 nodece_path
=pc L0%0%1_L0%0%1 nodece 29 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 29 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 207 , m_adder -> 124)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 207 , m_adder -> 124)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
947288222
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30
=pc L0%0%1_L0%0%1 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910858270
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30 nodece_path
=pc L0%0%1_L0%0%1 nodece 30 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 30 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910858270
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31
=pc L0%0%1_L0%0%1 nodece 31 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479716 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479716 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479716 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1312994984
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31 nodece_path
=pc L0%0%1_L0%0%1 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 31 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479716 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479716 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479716 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1312994984
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32
=pc L0%0%1_L0%0%1 nodece 32 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479716 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479716 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479716 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1140384172
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32 nodece_path
=pc L0%0%1_L0%0%1 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 32 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479716 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479716 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479716 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1140384172
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33
=pc L0%0%1_L0%0%1 nodece 33 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222142096 { -1072825200 } : BV:32
=symbol.1
1 : 3224223888 { -1070743408 } : BV:32
=symbol.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.1
1 : 3224223888 { -1070743408 } : BV:32
=dst_symbol_addr.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.3
1 : 3222142096 { -1072825200 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 827322364 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4283301024 { -11666272 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 826994688 : BV:32
=memlabel-mem-esp_end
1 : 827322367 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3224351887 { -1070615409 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222142096 { -1072825200 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222270095 { -1072697201 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3224223888 { -1070743408 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4283429023 { -11538273 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1215992974
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33 nodece_path
=pc L0%0%1_L0%0%1 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 33 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3222142096 { -1072825200 } : BV:32
=symbol.1
1 : 3224223888 { -1070743408 } : BV:32
=symbol.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.1
1 : 3224223888 { -1070743408 } : BV:32
=dst_symbol_addr.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.3
1 : 3222142096 { -1072825200 } : BV:32
=input_stack_pointer_const
1 : 827322364 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4283301024 { -11666272 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 826994688 : BV:32
=memlabel-mem-esp_end
1 : 827322367 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3224351887 { -1070615409 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222142096 { -1072825200 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222270095 { -1072697201 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3224223888 { -1070743408 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4283429023 { -11538273 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1215992974
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34
=pc L0%0%1_L0%0%1 nodece 34 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 920576 : BV:32
=symbol.1
1 : 68608 : BV:32
=symbol.2
1 : 269536 : BV:32
=dst_symbol_addr.1
1 : 68608 : BV:32
=dst_symbol_addr.2
1 : 269536 : BV:32
=dst_symbol_addr.3
1 : 920576 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294918140 { -49156 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 269536 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1257472 : BV:32
=stack.size
1 : 4293660672 { -1306624 } : BV:32
=memlabel-mem-esp_end
1 : 4294918143 { -49153 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 196607 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 920576 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1048575 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 68608 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 397535 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2065566092
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34 nodece_path
=pc L0%0%1_L0%0%1 nodece 34 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 34 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 920576 : BV:32
=symbol.1
1 : 68608 : BV:32
=symbol.2
1 : 269536 : BV:32
=dst_symbol_addr.1
1 : 68608 : BV:32
=dst_symbol_addr.2
1 : 269536 : BV:32
=dst_symbol_addr.3
1 : 920576 : BV:32
=input_stack_pointer_const
1 : 4294918140 { -49156 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 269536 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1257472 : BV:32
=stack.size
1 : 4293660672 { -1306624 } : BV:32
=memlabel-mem-esp_end
1 : 4294918143 { -49153 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 196607 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 920576 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1048575 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 68608 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 397535 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2065566092
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35
=pc L0%0%1_L0%0%1 nodece 35 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1152664785
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35 nodece_path
=pc L0%0%1_L0%0%1 nodece 35 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 35 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1152664785
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36
=pc L0%0%1_L0%0%1 nodece 36 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147357664 : BV:32
=symbol.1
1 : 3716285296 { -578682000 } : BV:32
=symbol.2
1 : 2147486160 { -2147481136 } : BV:32
=dst_symbol_addr.1
1 : 3716285296 { -578682000 } : BV:32
=dst_symbol_addr.2
1 : 2147486160 { -2147481136 } : BV:32
=dst_symbol_addr.3
1 : 2147357664 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147356668 : BV:32
=input.src.llvm-mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2147486160 { -2147481136 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=stack.size
1 : 2147348480 : BV:32
=memlabel-mem-esp_end
1 : 2147356671 : BV:32
=input.dst.mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3716413295 { -578554001 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147357664 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147485663 { -2147481633 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3716285296 { -578682000 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147614159 { -2147353137 } : BV:32
=unaliased_memslot.1
1 : 3539840 : BV:32
=unaliased_memslot.0
1 : 147 : BV:32
=unaliased_memslot.2
1 : 376033 : BV:32
=unaliased_memslot.3
1 : 132 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
657150799
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36 nodece_path
=pc L0%0%1_L0%0%1 nodece 36 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 36 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147357664 : BV:32
=symbol.1
1 : 3716285296 { -578682000 } : BV:32
=symbol.2
1 : 2147486160 { -2147481136 } : BV:32
=dst_symbol_addr.1
1 : 3716285296 { -578682000 } : BV:32
=dst_symbol_addr.2
1 : 2147486160 { -2147481136 } : BV:32
=dst_symbol_addr.3
1 : 2147357664 : BV:32
=input_stack_pointer_const
1 : 2147356668 : BV:32
=input.src.llvm-mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2147486160 { -2147481136 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=stack.size
1 : 2147348480 : BV:32
=memlabel-mem-esp_end
1 : 2147356671 : BV:32
=input.dst.mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3716413295 { -578554001 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147357664 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147485663 { -2147481633 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3716285296 { -578682000 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147614159 { -2147353137 } : BV:32
=unaliased_memslot.1
1 : 3539840 : BV:32
=unaliased_memslot.0
1 : 147 : BV:32
=unaliased_memslot.2
1 : 376033 : BV:32
=unaliased_memslot.3
1 : 132 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
657150799
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37
=pc L0%0%1_L0%0%1 nodece 37 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4278190080 { -16777216 } : BV:32
=symbol.1
1 : 4278651904 { -16315392 } : BV:32
=symbol.2
1 : 4278979600 { -15987696 } : BV:32
=dst_symbol_addr.1
1 : 4278651904 { -16315392 } : BV:32
=dst_symbol_addr.2
1 : 4278979600 { -15987696 } : BV:32
=dst_symbol_addr.3
1 : 4278190080 { -16777216 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4264599548 { -30367748 } : BV:32
=input.src.llvm-mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4278979600 { -15987696 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=stack.size
1 : 4264599552 { -30367744 } : BV:32
=memlabel-mem-esp_end
1 : 4264599551 { -30367745 } : BV:32
=input.dst.mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4278779903 { -16187393 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4278190080 { -16777216 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4278318079 { -16649217 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4278651904 { -16315392 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4279107599 { -15859697 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 11 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
749527092
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37 nodece_path
=pc L0%0%1_L0%0%1 nodece 37 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 37 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4278190080 { -16777216 } : BV:32
=symbol.1
1 : 4278651904 { -16315392 } : BV:32
=symbol.2
1 : 4278979600 { -15987696 } : BV:32
=dst_symbol_addr.1
1 : 4278651904 { -16315392 } : BV:32
=dst_symbol_addr.2
1 : 4278979600 { -15987696 } : BV:32
=dst_symbol_addr.3
1 : 4278190080 { -16777216 } : BV:32
=input_stack_pointer_const
1 : 4264599548 { -30367748 } : BV:32
=input.src.llvm-mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4278979600 { -15987696 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=stack.size
1 : 4264599552 { -30367744 } : BV:32
=memlabel-mem-esp_end
1 : 4264599551 { -30367745 } : BV:32
=input.dst.mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4278779903 { -16187393 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4278190080 { -16777216 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4278318079 { -16649217 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4278651904 { -16315392 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4279107599 { -15859697 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 11 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
749527092
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38
=pc L0%0%1_L0%0%1 nodece 38 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
901482438
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38 nodece_path
=pc L0%0%1_L0%0%1 nodece 38 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 38 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
901482438
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39
=pc L0%0%1_L0%0%1 nodece 39 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 23785472 : BV:32
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2042122590
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39 nodece_path
=pc L0%0%1_L0%0%1 nodece 39 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 39 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 23785472 : BV:32
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2042122590
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40
=pc L0%0%1_L0%0%1 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2083782853
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40 nodece_path
=pc L0%0%1_L0%0%1 nodece 40 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 40 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2083782853
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41
=pc L0%0%1_L0%0%1 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 234)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 234)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1942813514
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41 nodece_path
=pc L0%0%1_L0%0%1 nodece 41 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 41 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 234)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 234)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1942813514
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42
=pc L0%0%1_L0%0%1 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 23785472 : BV:32
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1422146546
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42 nodece_path
=pc L0%0%1_L0%0%1 nodece 42 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 42 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 23785472 : BV:32
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1422146546
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43
=pc L0%0%1_L0%0%1 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1857174069
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43 nodece_path
=pc L0%0%1_L0%0%1 nodece 43 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 43 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1857174069
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44
=pc L0%0%1_L0%0%1 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 254 , m_adder -> 206)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 254 , m_adder -> 206)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
4163323143
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44 nodece_path
=pc L0%0%1_L0%0%1 nodece 44 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 44 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 254 , m_adder -> 206)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 254 , m_adder -> 206)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
4163323143
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45
=pc L0%0%1_L0%0%1 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147359392 : BV:32
=symbol.1
1 : 4294836592 { -130704 } : BV:32
=symbol.2
1 : 2147231328 : BV:32
=dst_symbol_addr.1
1 : 4294836592 { -130704 } : BV:32
=dst_symbol_addr.2
1 : 2147231328 : BV:32
=dst_symbol_addr.3
1 : 2147359392 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3892219900 { -402747396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2147231328 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147631104 { -2147336192 } : BV:32
=stack.size
1 : 1744588800 : BV:32
=memlabel-mem-esp_end
1 : 3892219903 { -402747393 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294964591 { -2705 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147359392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147487391 { -2147479905 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294836592 { -130704 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147359327 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1896595622
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45 nodece_path
=pc L0%0%1_L0%0%1 nodece 45 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 45 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2147359392 : BV:32
=symbol.1
1 : 4294836592 { -130704 } : BV:32
=symbol.2
1 : 2147231328 : BV:32
=dst_symbol_addr.1
1 : 4294836592 { -130704 } : BV:32
=dst_symbol_addr.2
1 : 2147231328 : BV:32
=dst_symbol_addr.3
1 : 2147359392 : BV:32
=input_stack_pointer_const
1 : 3892219900 { -402747396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2147231328 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147631104 { -2147336192 } : BV:32
=stack.size
1 : 1744588800 : BV:32
=memlabel-mem-esp_end
1 : 3892219903 { -402747393 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294964591 { -2705 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147359392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147487391 { -2147479905 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294836592 { -130704 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147359327 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1896595622
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46
=pc L0%0%1_L0%0%1 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1438904096 : BV:32
=symbol.1
1 : 2646601472 { -1648365824 } : BV:32
=symbol.2
1 : 3588222784 { -706744512 } : BV:32
=dst_symbol_addr.1
1 : 2646601472 { -1648365824 } : BV:32
=dst_symbol_addr.2
1 : 3588222784 { -706744512 } : BV:32
=dst_symbol_addr.3
1 : 1438904096 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 660721660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3588222784 { -706744512 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537534464 : BV:32
=stack.size
1 : 123187200 : BV:32
=memlabel-mem-esp_end
1 : 660721663 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2646729471 { -1648237825 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1438904096 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1439032095 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2646601472 { -1648365824 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3588350783 { -706616513 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1290957677
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46 nodece_path
=pc L0%0%1_L0%0%1 nodece 46 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 46 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1438904096 : BV:32
=symbol.1
1 : 2646601472 { -1648365824 } : BV:32
=symbol.2
1 : 3588222784 { -706744512 } : BV:32
=dst_symbol_addr.1
1 : 2646601472 { -1648365824 } : BV:32
=dst_symbol_addr.2
1 : 3588222784 { -706744512 } : BV:32
=dst_symbol_addr.3
1 : 1438904096 : BV:32
=input_stack_pointer_const
1 : 660721660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3588222784 { -706744512 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537534464 : BV:32
=stack.size
1 : 123187200 : BV:32
=memlabel-mem-esp_end
1 : 660721663 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2646729471 { -1648237825 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1438904096 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1439032095 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2646601472 { -1648365824 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3588350783 { -706616513 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1290957677
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47
=pc L0%0%1_L0%0%1 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2392064 : BV:32
=symbol.1
1 : 1073627200 : BV:32
=symbol.2
1 : 536969216 : BV:32
=dst_symbol_addr.1
1 : 1073627200 : BV:32
=dst_symbol_addr.2
1 : 536969216 : BV:32
=dst_symbol_addr.3
1 : 2392064 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 536969216 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1073755199 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2392064 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2520063 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073627200 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 537097215 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3761924218
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47 nodece_path
=pc L0%0%1_L0%0%1 nodece 47 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 47 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2392064 : BV:32
=symbol.1
1 : 1073627200 : BV:32
=symbol.2
1 : 536969216 : BV:32
=dst_symbol_addr.1
1 : 1073627200 : BV:32
=dst_symbol_addr.2
1 : 536969216 : BV:32
=dst_symbol_addr.3
1 : 2392064 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 536969216 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1073755199 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2392064 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2520063 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073627200 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 537097215 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3761924218
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48
=pc L0%0%1_L0%0%1 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4269279696 { -25687600 } : BV:32
=symbol.1
1 : 4277423104 { -17544192 } : BV:32
=symbol.2
1 : 4223747072 { -71220224 } : BV:32
=dst_symbol_addr.1
1 : 4277423104 { -17544192 } : BV:32
=dst_symbol_addr.2
1 : 4223747072 { -71220224 } : BV:32
=dst_symbol_addr.3
1 : 4269279696 { -25687600 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4177526780 { -117440516 } : BV:32
=input.src.llvm-mem
1 : (( 4223747080 ) -> 3, ( 4269279708 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4223747072 { -71220224 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4223747080 ) -> 3, ( 4269279708 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 6524928 : BV:32
=stack.size
1 : 4171001856 { -123965440 } : BV:32
=memlabel-mem-esp_end
1 : 4177526783 { -117440513 } : BV:32
=input.dst.mem
1 : (( 4223747080 ) -> 3, ( 4269279708 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4277551103 { -17416193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4269279696 { -25687600 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4269407695 { -25559601 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4277423104 { -17544192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4223875071 { -71092225 } : BV:32
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 13 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1256524081
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48 nodece_path
=pc L0%0%1_L0%0%1 nodece 48 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 48 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4269279696 { -25687600 } : BV:32
=symbol.1
1 : 4277423104 { -17544192 } : BV:32
=symbol.2
1 : 4223747072 { -71220224 } : BV:32
=dst_symbol_addr.1
1 : 4277423104 { -17544192 } : BV:32
=dst_symbol_addr.2
1 : 4223747072 { -71220224 } : BV:32
=dst_symbol_addr.3
1 : 4269279696 { -25687600 } : BV:32
=input_stack_pointer_const
1 : 4177526780 { -117440516 } : BV:32
=input.src.llvm-mem
1 : (( 4223747080 ) -> 3, ( 4269279708 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4223747072 { -71220224 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4223747080 ) -> 3, ( 4269279708 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 6524928 : BV:32
=stack.size
1 : 4171001856 { -123965440 } : BV:32
=memlabel-mem-esp_end
1 : 4177526783 { -117440513 } : BV:32
=input.dst.mem
1 : (( 4223747080 ) -> 3, ( 4269279708 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4277551103 { -17416193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4269279696 { -25687600 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4269407695 { -25559601 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4277423104 { -17544192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4223875071 { -71092225 } : BV:32
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 13 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1256524081
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49
=pc L0%0%1_L0%0%1 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2638347408 { -1656619888 } : BV:32
=symbol.1
1 : 3221340304 { -1073626992 } : BV:32
=symbol.2
1 : 4284611744 { -10355552 } : BV:32
=dst_symbol_addr.1
1 : 3221340304 { -1073626992 } : BV:32
=dst_symbol_addr.2
1 : 4284611744 { -10355552 } : BV:32
=dst_symbol_addr.3
1 : 2638347408 { -1656619888 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 23326716 : BV:32
=input.src.llvm-mem
1 : (( 2638347420 ) -> 12, ( 2638347408 ) -> 3, ( 4284611744 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4284611744 { -10355552 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2638347420 ) -> 12, ( 2638347408 ) -> 3, ( 4284611744 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 65536 : BV:32
=stack.size
1 : 23261184 : BV:32
=memlabel-mem-esp_end
1 : 23326719 : BV:32
=input.dst.mem
1 : (( 2638347420 ) -> 12, ( 2638347408 ) -> 3, ( 4284611744 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3221468303 { -1073498993 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2638347408 { -1656619888 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2638475407 { -1656491889 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221340304 { -1073626992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4284739743 { -10227553 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 3 : BV:32
=unaliased_memslot.4
1 : 12 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
506060707
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49 nodece_path
=pc L0%0%1_L0%0%1 nodece 49 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 49 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 2638347408 { -1656619888 } : BV:32
=symbol.1
1 : 3221340304 { -1073626992 } : BV:32
=symbol.2
1 : 4284611744 { -10355552 } : BV:32
=dst_symbol_addr.1
1 : 3221340304 { -1073626992 } : BV:32
=dst_symbol_addr.2
1 : 4284611744 { -10355552 } : BV:32
=dst_symbol_addr.3
1 : 2638347408 { -1656619888 } : BV:32
=input_stack_pointer_const
1 : 23326716 : BV:32
=input.src.llvm-mem
1 : (( 2638347420 ) -> 12, ( 2638347408 ) -> 3, ( 4284611744 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4284611744 { -10355552 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2638347420 ) -> 12, ( 2638347408 ) -> 3, ( 4284611744 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 65536 : BV:32
=stack.size
1 : 23261184 : BV:32
=memlabel-mem-esp_end
1 : 23326719 : BV:32
=input.dst.mem
1 : (( 2638347420 ) -> 12, ( 2638347408 ) -> 3, ( 4284611744 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3221468303 { -1073498993 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2638347408 { -1656619888 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2638475407 { -1656491889 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221340304 { -1073626992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4284739743 { -10227553 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 3 : BV:32
=unaliased_memslot.4
1 : 12 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
506060707
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50
=pc L0%0%1_L0%0%1 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973215744 : BV:32
=symbol.1
1 : 369098752 : BV:32
=symbol.2
1 : 377361424 : BV:32
=dst_symbol_addr.1
1 : 369098752 : BV:32
=dst_symbol_addr.2
1 : 377361424 : BV:32
=dst_symbol_addr.3
1 : 973215744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 377361424 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 377361424 : BV:32
=commonMEM.nonstack.mem
1 : (( 377361424 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 377361424 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 369226751 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973215744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973343743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 369098752 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 377489423 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
222549294
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50 nodece_path
=pc L0%0%1_L0%0%1 nodece 50 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 50 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 973215744 : BV:32
=symbol.1
1 : 369098752 : BV:32
=symbol.2
1 : 377361424 : BV:32
=dst_symbol_addr.1
1 : 369098752 : BV:32
=dst_symbol_addr.2
1 : 377361424 : BV:32
=dst_symbol_addr.3
1 : 973215744 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 377361424 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 377361424 : BV:32
=commonMEM.nonstack.mem
1 : (( 377361424 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 377361424 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 369226751 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973215744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973343743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 369098752 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 377489423 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
222549294
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51
=pc L0%0%1_L0%0%1 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3221220336 { -1073746960 } : BV:32
=symbol.1
1 : 4265439088 { -29528208 } : BV:32
=symbol.2
1 : 1073736688 : BV:32
=dst_symbol_addr.1
1 : 4265439088 { -29528208 } : BV:32
=dst_symbol_addr.2
1 : 1073736688 : BV:32
=dst_symbol_addr.3
1 : 3221220336 { -1073746960 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2415816700 { -1879150596 } : BV:32
=input.src.llvm-mem
1 : (( 3221220340 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1073736688 : BV:32
=commonMEM.nonstack.mem
1 : (( 3221220340 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147381248 : BV:32
=stack.size
1 : 268435456 : BV:32
=memlabel-mem-esp_end
1 : 2415816703 { -1879150593 } : BV:32
=input.dst.mem
1 : (( 3221220340 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4265567087 { -29400209 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221220336 { -1073746960 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221348335 { -1073618961 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4265439088 { -29528208 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073864687 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
356579531
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51 nodece_path
=pc L0%0%1_L0%0%1 nodece 51 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 51 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3221220336 { -1073746960 } : BV:32
=symbol.1
1 : 4265439088 { -29528208 } : BV:32
=symbol.2
1 : 1073736688 : BV:32
=dst_symbol_addr.1
1 : 4265439088 { -29528208 } : BV:32
=dst_symbol_addr.2
1 : 1073736688 : BV:32
=dst_symbol_addr.3
1 : 3221220336 { -1073746960 } : BV:32
=input_stack_pointer_const
1 : 2415816700 { -1879150596 } : BV:32
=input.src.llvm-mem
1 : (( 3221220340 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1073736688 : BV:32
=commonMEM.nonstack.mem
1 : (( 3221220340 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147381248 : BV:32
=stack.size
1 : 268435456 : BV:32
=memlabel-mem-esp_end
1 : 2415816703 { -1879150593 } : BV:32
=input.dst.mem
1 : (( 3221220340 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4265567087 { -29400209 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221220336 { -1073746960 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221348335 { -1073618961 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4265439088 { -29528208 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073864687 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
356579531
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52
=pc L0%0%1_L0%0%1 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3511549072 { -783418224 } : BV:32
=symbol.1
1 : 3758997648 { -535969648 } : BV:32
=symbol.2
1 : 4285398176 { -9569120 } : BV:32
=dst_symbol_addr.1
1 : 3758997648 { -535969648 } : BV:32
=dst_symbol_addr.2
1 : 4285398176 { -9569120 } : BV:32
=dst_symbol_addr.3
1 : 3511549072 { -783418224 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 560984060 : BV:32
=input.src.llvm-mem
1 : (( 3511549076 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4285398176 { -9569120 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3511549076 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 560656384 : BV:32
=memlabel-mem-esp_end
1 : 560984063 : BV:32
=input.dst.mem
1 : (( 3511549076 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3759125647 { -535841649 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3511549072 { -783418224 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3511677071 { -783290225 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758997648 { -535969648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4285526175 { -9441121 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
859095655
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52 nodece_path
=pc L0%0%1_L0%0%1 nodece 52 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 52 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3511549072 { -783418224 } : BV:32
=symbol.1
1 : 3758997648 { -535969648 } : BV:32
=symbol.2
1 : 4285398176 { -9569120 } : BV:32
=dst_symbol_addr.1
1 : 3758997648 { -535969648 } : BV:32
=dst_symbol_addr.2
1 : 4285398176 { -9569120 } : BV:32
=dst_symbol_addr.3
1 : 3511549072 { -783418224 } : BV:32
=input_stack_pointer_const
1 : 560984060 : BV:32
=input.src.llvm-mem
1 : (( 3511549076 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4285398176 { -9569120 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3511549076 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 560656384 : BV:32
=memlabel-mem-esp_end
1 : 560984063 : BV:32
=input.dst.mem
1 : (( 3511549076 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3759125647 { -535841649 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3511549072 { -783418224 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3511677071 { -783290225 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758997648 { -535969648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4285526175 { -9441121 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
859095655
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53
=pc L0%0%1_L0%0%1 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1011260416 : BV:32
=symbol.1
1 : 402653184 : BV:32
=symbol.2
1 : 939427840 : BV:32
=dst_symbol_addr.1
1 : 402653184 : BV:32
=dst_symbol_addr.2
1 : 939427840 : BV:32
=dst_symbol_addr.3
1 : 1011260416 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 939427844 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 939427840 : BV:32
=commonMEM.nonstack.mem
1 : (( 939427844 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 939427844 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 402781183 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1011260416 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1011388415 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 402653184 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 939555839 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
941160530
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53 nodece_path
=pc L0%0%1_L0%0%1 nodece 53 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 53 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 1011260416 : BV:32
=symbol.1
1 : 402653184 : BV:32
=symbol.2
1 : 939427840 : BV:32
=dst_symbol_addr.1
1 : 402653184 : BV:32
=dst_symbol_addr.2
1 : 939427840 : BV:32
=dst_symbol_addr.3
1 : 1011260416 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 939427844 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 939427840 : BV:32
=commonMEM.nonstack.mem
1 : (( 939427844 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 939427844 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 402781183 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1011260416 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1011388415 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 402653184 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 939555839 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
941160530
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54
=pc L0%0%1_L0%0%1 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1806720168
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54 nodece_path
=pc L0%0%1_L0%0%1 nodece 54 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 54 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1806720168
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55
=pc L0%0%1_L0%0%1 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 23785472 : BV:32
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2021477009
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55 nodece_path
=pc L0%0%1_L0%0%1 nodece 55 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 55 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 23785472 : BV:32
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2021477009
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56
=pc L0%0%1_L0%0%1 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 132 , m_adder -> 190)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 132 , m_adder -> 190)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1399254652
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56 nodece_path
=pc L0%0%1_L0%0%1 nodece 56 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 56 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 132 , m_adder -> 190)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 132 , m_adder -> 190)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1399254652
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57
=pc L0%0%1_L0%0%1 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
505804741
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57 nodece_path
=pc L0%0%1_L0%0%1 nodece 57 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 57 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
505804741
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58
=pc L0%0%1_L0%0%1 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 23785472 : BV:32
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
846271957
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58 nodece_path
=pc L0%0%1_L0%0%1 nodece 58 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 58 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 23785472 : BV:32
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
846271957
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59
=pc L0%0%1_L0%0%1 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 244)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 244)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1128906133
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59 nodece_path
=pc L0%0%1_L0%0%1 nodece 59 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 59 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 244)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 233 , m_adder -> 244)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1128906133
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60
=pc L0%0%1_L0%0%1 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3511549072 { -783418224 } : BV:32
=symbol.1
1 : 3758997648 { -535969648 } : BV:32
=symbol.2
1 : 4285398176 { -9569120 } : BV:32
=dst_symbol_addr.1
1 : 3758997648 { -535969648 } : BV:32
=dst_symbol_addr.2
1 : 4285398176 { -9569120 } : BV:32
=dst_symbol_addr.3
1 : 3511549072 { -783418224 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 829419516 : BV:32
=input.src.llvm-mem
1 : (( 3511549084 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4285398176 { -9569120 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3511549084 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 829091840 : BV:32
=memlabel-mem-esp_end
1 : 829419519 : BV:32
=input.dst.mem
1 : (( 3511549084 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3759125647 { -535841649 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3511549072 { -783418224 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3511677071 { -783290225 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758997648 { -535969648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4285526175 { -9441121 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1613666650
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60 nodece_path
=pc L0%0%1_L0%0%1 nodece 60 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 60 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 3511549072 { -783418224 } : BV:32
=symbol.1
1 : 3758997648 { -535969648 } : BV:32
=symbol.2
1 : 4285398176 { -9569120 } : BV:32
=dst_symbol_addr.1
1 : 3758997648 { -535969648 } : BV:32
=dst_symbol_addr.2
1 : 4285398176 { -9569120 } : BV:32
=dst_symbol_addr.3
1 : 3511549072 { -783418224 } : BV:32
=input_stack_pointer_const
1 : 829419516 : BV:32
=input.src.llvm-mem
1 : (( 3511549084 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4285398176 { -9569120 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3511549084 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 829091840 : BV:32
=memlabel-mem-esp_end
1 : 829419519 : BV:32
=input.dst.mem
1 : (( 3511549084 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3759125647 { -535841649 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3511549072 { -783418224 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3511677071 { -783290225 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758997648 { -535969648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4285526175 { -9441121 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1613666650
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61
=pc L0%0%1_L0%0%1 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4292693680 { -2273616 } : BV:32
=symbol.1
1 : 4294830400 { -136896 } : BV:32
=symbol.2
1 : 4292822208 { -2145088 } : BV:32
=dst_symbol_addr.1
1 : 4294830400 { -136896 } : BV:32
=dst_symbol_addr.2
1 : 4292822208 { -2145088 } : BV:32
=dst_symbol_addr.3
1 : 4292693680 { -2273616 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4292673532 { -2293764 } : BV:32
=input.src.llvm-mem
1 : (( 4292693692 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292822208 { -2145088 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4292693692 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 36864 : BV:32
=stack.size
1 : 4292636672 { -2330624 } : BV:32
=memlabel-mem-esp_end
1 : 4292673535 { -2293761 } : BV:32
=input.dst.mem
1 : (( 4292693692 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294958399 { -8897 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4292693680 { -2273616 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4292821679 { -2145617 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294830400 { -136896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292950207 { -2017089 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1913702650
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61 nodece_path
=pc L0%0%1_L0%0%1 nodece 61 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 61 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4292693680 { -2273616 } : BV:32
=symbol.1
1 : 4294830400 { -136896 } : BV:32
=symbol.2
1 : 4292822208 { -2145088 } : BV:32
=dst_symbol_addr.1
1 : 4294830400 { -136896 } : BV:32
=dst_symbol_addr.2
1 : 4292822208 { -2145088 } : BV:32
=dst_symbol_addr.3
1 : 4292693680 { -2273616 } : BV:32
=input_stack_pointer_const
1 : 4292673532 { -2293764 } : BV:32
=input.src.llvm-mem
1 : (( 4292693692 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292822208 { -2145088 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4292693692 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 36864 : BV:32
=stack.size
1 : 4292636672 { -2330624 } : BV:32
=memlabel-mem-esp_end
1 : 4292673535 { -2293761 } : BV:32
=input.dst.mem
1 : (( 4292693692 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294958399 { -8897 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4292693680 { -2273616 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4292821679 { -2145617 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294830400 { -136896 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292950207 { -2017089 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1913702650
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62
=pc L0%0%1_L0%0%1 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 897465864 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=commonMEM.nonstack.mem
1 : (( 897465864 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 897465864 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1218398759
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62 nodece_path
=pc L0%0%1_L0%0%1 nodece 62 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 62 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 897465864 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=commonMEM.nonstack.mem
1 : (( 897465864 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 897465864 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1218398759
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63
=pc L0%0%1_L0%0%1 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1639672320
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63 nodece_path
=pc L0%0%1_L0%0%1 nodece 63 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 63 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1639672320
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64
=pc L0%0%1_L0%0%1 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 23785472 : BV:32
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
240094112
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64 nodece_path
=pc L0%0%1_L0%0%1 nodece 64 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 64 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 23785472 : BV:32
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
240094112
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65
=pc L0%0%1_L0%0%1 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 112 , m_adder -> 131)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 112 , m_adder -> 131)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
4209059410
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65 nodece_path
=pc L0%0%1_L0%0%1 nodece 65 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 65 nodece_cached_counterexample
=counter_example_begin
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 112 , m_adder -> 131)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 112 , m_adder -> 131)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
4209059410
=counter_example_end
=counterexamples at pc Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 0 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 2955415551 ) -> 0, ( 2955415548 ) -> 0, ( 2955415550 ) -> 0, ( 2955415549 ) -> 0, () -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 1 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 2
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 2 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 3
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 3 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 2955415551 ) -> 0, ( 2955415548 ) -> 0, ( 2955415550 ) -> 0, ( 2955415549 ) -> 0, () -> (RAC: m_multiplier -> 103 , m_adder -> 12)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3751173222
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 4
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 4 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 2955415551 ) -> 255, ( 2955415548 ) -> 255, ( 2955415550 ) -> 255, ( 2955415549 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
231602422
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 5
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3503725916
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 5 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 2955415551 ) -> 128, ( 2955415548 ) -> 0, ( 2955415550 ) -> 0, ( 2955415549 ) -> 0, () -> (RAC: m_multiplier -> 108 , m_adder -> 193)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3503725916
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 6
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
648031326
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 6 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479712 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
648031326
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 7
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479716 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479716 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479716 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1737518944
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 7 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479716 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479716 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479716 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1737518944
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 8
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
677870460
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 8 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 1 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
677870460
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 9
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 45 , m_adder -> 240)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 45 , m_adder -> 240)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3477323588
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 9 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 45 , m_adder -> 240)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 2955415551 ) -> 0, ( 2955415548 ) -> 0, ( 2955415550 ) -> 0, ( 2955415549 ) -> 0, () -> (RAC: m_multiplier -> 45 , m_adder -> 240)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3477323588
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 10
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1433102829
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 10 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 1 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1433102829
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 11
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 232)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 232)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1089254938
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 11 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 51 , m_adder -> 232)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 2955415551 ) -> 0, ( 2955415548 ) -> 0, ( 2955415550 ) -> 0, ( 2955415549 ) -> 0, () -> (RAC: m_multiplier -> 51 , m_adder -> 232)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1089254938
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 12
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823184 ) -> 1, ( 3074823192 ) -> 2, ( 3074823196 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823184 ) -> 1, ( 3074823192 ) -> 2, ( 3074823196 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823184 ) -> 1, ( 3074823192 ) -> 2, ( 3074823196 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 2 : BV:8
=unaliased_memslot.2
1 : 2 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1281830857
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 12 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823184 ) -> 1, ( 3074823192 ) -> 2, ( 3074823196 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823184 ) -> 1, ( 3074823192 ) -> 2, ( 3074823196 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823184 ) -> 1, ( 3074823192 ) -> 2, ( 3074823196 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 2 : BV:8
=unaliased_memslot.2
1 : 2 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1281830857
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 13
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823196 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823196 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823196 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 255 { -1 } : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1386418627
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 13 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823196 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823196 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823196 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 255 { -1 } : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1386418627
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 14
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823184 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823184 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823184 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 32 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1156541312
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 14 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823184 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823184 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823184 ) -> 32, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 32 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1156541312
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 15
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823184 ) -> 4, ( 3077479720 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823184 ) -> 4, ( 3077479720 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823184 ) -> 4, ( 3077479720 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 4 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1635550270
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 15 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823184 ) -> 4, ( 3077479720 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823184 ) -> 4, ( 3077479720 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823184 ) -> 4, ( 3077479720 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 4 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1635550270
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 16
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823192 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823192 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823192 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 63 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2069110699
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 16 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823192 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823192 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823192 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 63 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2069110699
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 17
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
272020127
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 17 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3077479724 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 7 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
272020127
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 18
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910300925
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 18 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910300925
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 19
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=stack.size
1 : 1779404800 : BV:32
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910858270
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 19 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3074823188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3074823188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3074823188 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910858270
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 20
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
733450907
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 20 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
733450907
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 21
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1487053959
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 21 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1487053959
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 22
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : ([ 1176010752; 2955415551 ] -> 0, () -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1139990976
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 22 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : ([ 1176010752; 2955415551 ] -> 0, () -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1139990976
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 23
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : ([ 1176010752; 2955415551 ] -> 0, () -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1139990976
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 23 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 261095088388193381492698053787314353564 { -79187278532745081970676553644453857892 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3076932624 ) -> 156, ( 3076932635 ) -> 101, ( 3076932630 ) -> 173, ( 3076932629 ) -> 84, ( 3076932628 ) -> 252, ( 3076932632 ) -> 92, ( 3076932627 ) -> 164, ( 3076932633 ) -> 180, ( 3076932626 ) -> 76, ( 3076932625 ) -> 245, ( 3076932631 ) -> 5, ( 3076932634 ) -> 12, ( 3076932639 ) -> 196, ( 3076932638 ) -> 109, ( 3076932637 ) -> 21, ( 3076932636 ) -> 188, () -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 3295483324 { -999483972 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076932640 { -1218034656 } : BV:32
=input.src.llvm-%A.0
1 : 3076932640 { -1218034656 } : BV:32
=input.src.llvm-%C.0
1 : 3074823200 { -1220144096 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3076932624 ) -> 156, ( 3076932635 ) -> 101, ( 3076932630 ) -> 173, ( 3076932629 ) -> 84, ( 3076932628 ) -> 252, ( 3076932632 ) -> 92, ( 3076932627 ) -> 164, ( 3076932633 ) -> 180, ( 3076932626 ) -> 76, ( 3076932625 ) -> 245, ( 3076932631 ) -> 5, ( 3076932634 ) -> 12, ( 3076932639 ) -> 196, ( 3076932638 ) -> 109, ( 3076932637 ) -> 21, ( 3076932636 ) -> 188, [ 1176010752; 2955415551 ] -> 0, () -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077479728 { -1217487568 } : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 2186685182 { -2108282114 } : BV:32
=input.src.llvm-%0
1 : 1108798142 : BV:32
=input.src.llvm-%B.0
1 : 3077479728 { -1217487568 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479728 { -1217487568 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074823200 { -1220144096 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074823200 { -1220144096 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076932640 { -1218034656 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932640 { -1218034656 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077479728 { -1217487568 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823200 { -1220144096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1139990976
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 24
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : ([ 1176010752; 2955415551 ] -> 0, () -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1139990976
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 24 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 91621104972301018870943453838381511964 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3076932624 ) -> 156, ( 3076932635 ) -> 101, ( 3076932630 ) -> 173, ( 3076932629 ) -> 84, ( 3076932628 ) -> 252, ( 3076932632 ) -> 92, ( 3076932627 ) -> 164, ( 3076932633 ) -> 180, ( 3076932626 ) -> 76, ( 3076932625 ) -> 245, ( 3076932631 ) -> 5, ( 3076932634 ) -> 12, ( 3076932639 ) -> 196, ( 3076932638 ) -> 109, ( 3076932637 ) -> 21, ( 3076932636 ) -> 188, ( 3076932640 ) -> 28, ( 3076932654 ) -> 237, ( 3076932655 ) -> 68, ( 3076932644 ) -> 124, ( 3076932646 ) -> 44, ( 3076932651 ) -> 228, ( 3076932650 ) -> 141, ( 3076932647 ) -> 133, ( 3076932652 ) -> 60, ( 3076932653 ) -> 149, ( 3076932645 ) -> 212, ( 3076932648 ) -> 220, ( 3076932649 ) -> 52, ( 3076932643 ) -> 36, ( 3076932642 ) -> 205, ( 3076932641 ) -> 117, () -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 1156420924 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076932656 { -1218034640 } : BV:32
=input.src.llvm-%A.0
1 : 3076932656 { -1218034640 } : BV:32
=input.src.llvm-%C.0
1 : 3074823216 { -1220144080 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3076932624 ) -> 156, ( 3076932635 ) -> 101, ( 3076932630 ) -> 173, ( 3076932629 ) -> 84, ( 3076932628 ) -> 252, ( 3076932632 ) -> 92, ( 3076932627 ) -> 164, ( 3076932633 ) -> 180, ( 3076932626 ) -> 76, ( 3076932625 ) -> 245, ( 3076932631 ) -> 5, ( 3076932634 ) -> 12, ( 3076932639 ) -> 196, ( 3076932638 ) -> 109, ( 3076932637 ) -> 21, ( 3076932636 ) -> 188, ( 3076932640 ) -> 28, ( 3076932654 ) -> 237, ( 3076932655 ) -> 68, ( 3076932644 ) -> 124, ( 3076932646 ) -> 44, ( 3076932651 ) -> 228, ( 3076932650 ) -> 141, ( 3076932647 ) -> 133, ( 3076932652 ) -> 60, ( 3076932653 ) -> 149, ( 3076932645 ) -> 212, ( 3076932648 ) -> 220, ( 3076932649 ) -> 52, ( 3076932643 ) -> 36, ( 3076932642 ) -> 205, ( 3076932641 ) -> 117, [ 1176010752; 2955415551 ] -> 0, () -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077479744 { -1217487552 } : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 1108798142 : BV:32
=input.src.llvm-%0
1 : 47622782 : BV:32
=input.src.llvm-%B.0
1 : 3077479744 { -1217487552 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479744 { -1217487552 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074823216 { -1220144080 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074823216 { -1220144080 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076932656 { -1218034640 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932656 { -1218034640 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077479744 { -1217487552 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823216 { -1220144080 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1139990976
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 25
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : ([ 1176010752; 2955415551 ] -> 0, () -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823184 { -1220144112 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1139990976
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.graph_edge_composition
((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 25 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 262424296101569907362045195330165470364 { -77858070819368556101329412101602741092 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (( 3076932624 ) -> 156, ( 3076932635 ) -> 101, ( 3076932630 ) -> 173, ( 3076932629 ) -> 84, ( 3076932628 ) -> 252, ( 3076932632 ) -> 92, ( 3076932627 ) -> 164, ( 3076932633 ) -> 180, ( 3076932626 ) -> 76, ( 3076932625 ) -> 245, ( 3076932631 ) -> 5, ( 3076932634 ) -> 12, ( 3076932639 ) -> 196, ( 3076932638 ) -> 109, ( 3076932637 ) -> 21, ( 3076932636 ) -> 188, ( 3076932640 ) -> 28, ( 3076932654 ) -> 237, ( 3076932655 ) -> 68, ( 3076932644 ) -> 124, ( 3076932646 ) -> 44, ( 3076932651 ) -> 228, ( 3076932650 ) -> 141, ( 3076932647 ) -> 133, ( 3076932652 ) -> 60, ( 3076932669 ) -> 20, ( 3076932653 ) -> 149, ( 3076932645 ) -> 212, ( 3076932648 ) -> 220, ( 3076932656 ) -> 156, ( 3076932649 ) -> 52, ( 3076932666 ) -> 13, ( 3076932665 ) -> 181, ( 3076932664 ) -> 92, ( 3076932643 ) -> 36, ( 3076932642 ) -> 205, ( 3076932641 ) -> 117, ( 3076932667 ) -> 101, ( 3076932668 ) -> 188, ( 3076932671 ) -> 197, ( 3076932670 ) -> 109, ( 3076932663 ) -> 4, ( 3076932662 ) -> 172, ( 3076932661 ) -> 84, ( 3076932660 ) -> 252, ( 3076932659 ) -> 165, ( 3076932658 ) -> 76, ( 3076932657 ) -> 244, () -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 3312260284 { -982707012 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076932672 { -1218034624 } : BV:32
=input.src.llvm-%A.0
1 : 3076932672 { -1218034624 } : BV:32
=input.src.llvm-%C.0
1 : 3074823232 { -1220144064 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (( 3076932624 ) -> 156, ( 3076932635 ) -> 101, ( 3076932630 ) -> 173, ( 3076932629 ) -> 84, ( 3076932628 ) -> 252, ( 3076932632 ) -> 92, ( 3076932627 ) -> 164, ( 3076932633 ) -> 180, ( 3076932626 ) -> 76, ( 3076932625 ) -> 245, ( 3076932631 ) -> 5, ( 3076932634 ) -> 12, ( 3076932639 ) -> 196, ( 3076932638 ) -> 109, ( 3076932637 ) -> 21, ( 3076932636 ) -> 188, ( 3076932640 ) -> 28, ( 3076932654 ) -> 237, ( 3076932655 ) -> 68, ( 3076932644 ) -> 124, ( 3076932646 ) -> 44, ( 3076932651 ) -> 228, ( 3076932650 ) -> 141, ( 3076932647 ) -> 133, ( 3076932652 ) -> 60, ( 3076932669 ) -> 20, ( 3076932653 ) -> 149, ( 3076932645 ) -> 212, ( 3076932648 ) -> 220, ( 3076932656 ) -> 156, ( 3076932649 ) -> 52, ( 3076932666 ) -> 13, ( 3076932665 ) -> 181, ( 3076932664 ) -> 92, ( 3076932643 ) -> 36, ( 3076932642 ) -> 205, ( 3076932641 ) -> 117, ( 3076932667 ) -> 101, ( 3076932668 ) -> 188, ( 3076932671 ) -> 197, ( 3076932670 ) -> 109, ( 3076932663 ) -> 4, ( 3076932662 ) -> 172, ( 3076932661 ) -> 84, ( 3076932660 ) -> 252, ( 3076932659 ) -> 165, ( 3076932658 ) -> 76, ( 3076932657 ) -> 244, [ 1176010752; 2955415551 ] -> 0, () -> (RAC: m_multiplier -> 44 , m_adder -> 46)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077479760 { -1217487536 } : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 47622782 : BV:32
=input.src.llvm-%0
1 : 3264637502 { -1030329794 } : BV:32
=input.src.llvm-%B.0
1 : 3077479760 { -1217487536 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479760 { -1217487536 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074823232 { -1220144064 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074823232 { -1220144064 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076932672 { -1218034624 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932672 { -1218034624 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077479760 { -1217487536 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823232 { -1220144064 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1139990976
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 26
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932688 { -1218034608 } : BV:32
=input.src.llvm-%C.0
1 : 3074823248 { -1220144048 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479776 { -1217487520 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=input.src.llvm-%i.0
1 : 16 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479776 { -1217487520 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932688 { -1218034608 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823248 { -1220144048 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
943116035
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 26 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 80 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076932704 { -1218034592 } : BV:32
=input.src.llvm-%A.0
1 : 3076932704 { -1218034592 } : BV:32
=input.src.llvm-%C.0
1 : 3074823264 { -1220144032 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077479792 { -1217487504 } : BV:32
=input.src.llvm-%inc
1 : 20 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3077479792 { -1217487504 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 20 : BV:32
=input.src.llvm-%i.0
1 : 20 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479792 { -1217487504 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074823264 { -1220144032 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074823264 { -1220144032 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076932704 { -1218034592 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932704 { -1218034592 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077479792 { -1217487504 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823264 { -1220144032 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
943116035
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 27
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932752 { -1218034544 } : BV:32
=input.src.llvm-%C.0
1 : 3074823312 { -1220143984 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479840 { -1217487456 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=input.src.llvm-%i.0
1 : 32 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479840 { -1217487456 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932752 { -1218034544 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823312 { -1220143984 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
849876229
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 27 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 144 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076932768 { -1218034528 } : BV:32
=input.src.llvm-%A.0
1 : 3076932768 { -1218034528 } : BV:32
=input.src.llvm-%C.0
1 : 3074823328 { -1220143968 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077479856 { -1217487440 } : BV:32
=input.src.llvm-%inc
1 : 36 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3077479856 { -1217487440 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 36 : BV:32
=input.src.llvm-%i.0
1 : 36 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479856 { -1217487440 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074823328 { -1220143968 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074823328 { -1220143968 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076932768 { -1218034528 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932768 { -1218034528 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077479856 { -1217487440 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823328 { -1220143968 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
849876229
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 28
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076932880 { -1218034416 } : BV:32
=input.src.llvm-%C.0
1 : 3074823440 { -1220143856 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077479968 { -1217487328 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=input.src.llvm-%i.0
1 : 64 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479968 { -1217487328 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932880 { -1218034416 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823440 { -1220143856 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1560268824
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 28 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 272 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076932896 { -1218034400 } : BV:32
=input.src.llvm-%A.0
1 : 3076932896 { -1218034400 } : BV:32
=input.src.llvm-%C.0
1 : 3074823456 { -1220143840 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077479984 { -1217487312 } : BV:32
=input.src.llvm-%inc
1 : 68 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3077479984 { -1217487312 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 68 : BV:32
=input.src.llvm-%i.0
1 : 68 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077479984 { -1217487312 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074823456 { -1220143840 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074823456 { -1220143840 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076932896 { -1218034400 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076932896 { -1218034400 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077479984 { -1217487312 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823456 { -1220143840 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1560268824
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 29
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076933136 { -1218034160 } : BV:32
=input.src.llvm-%C.0
1 : 3074823696 { -1220143600 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077480224 { -1217487072 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=input.src.llvm-%i.0
1 : 128 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077480224 { -1217487072 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076933136 { -1218034160 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823696 { -1220143600 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
928494151
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 29 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 528 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076933152 { -1218034144 } : BV:32
=input.src.llvm-%A.0
1 : 3076933152 { -1218034144 } : BV:32
=input.src.llvm-%C.0
1 : 3074823712 { -1220143584 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077480240 { -1217487056 } : BV:32
=input.src.llvm-%inc
1 : 132 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3077480240 { -1217487056 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 132 : BV:32
=input.src.llvm-%i.0
1 : 132 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077480240 { -1217487056 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074823712 { -1220143584 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074823712 { -1220143584 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076933152 { -1218034144 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076933152 { -1218034144 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077480240 { -1217487056 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074823712 { -1220143584 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
928494151
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 30
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076933648 { -1218033648 } : BV:32
=input.src.llvm-%C.0
1 : 3074824208 { -1220143088 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077480736 { -1217486560 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=input.src.llvm-%i.0
1 : 256 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077480736 { -1217486560 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076933648 { -1218033648 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074824208 { -1220143088 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1558349476
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 30 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1040 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076933664 { -1218033632 } : BV:32
=input.src.llvm-%A.0
1 : 3076933664 { -1218033632 } : BV:32
=input.src.llvm-%C.0
1 : 3074824224 { -1220143072 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077480752 { -1217486544 } : BV:32
=input.src.llvm-%inc
1 : 260 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3077480752 { -1217486544 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 260 : BV:32
=input.src.llvm-%i.0
1 : 260 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077480752 { -1217486544 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074824224 { -1220143072 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074824224 { -1220143072 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076933664 { -1218033632 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076933664 { -1218033632 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077480752 { -1217486544 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074824224 { -1220143072 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1558349476
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 31
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076934672 { -1218032624 } : BV:32
=input.src.llvm-%C.0
1 : 3074825232 { -1220142064 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077481760 { -1217485536 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=input.src.llvm-%i.0
1 : 512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077481760 { -1217485536 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076934672 { -1218032624 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074825232 { -1220142064 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1314586528
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 31 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2064 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076934688 { -1218032608 } : BV:32
=input.src.llvm-%A.0
1 : 3076934688 { -1218032608 } : BV:32
=input.src.llvm-%C.0
1 : 3074825248 { -1220142048 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077481776 { -1217485520 } : BV:32
=input.src.llvm-%inc
1 : 516 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3077481776 { -1217485520 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 516 : BV:32
=input.src.llvm-%i.0
1 : 516 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077481776 { -1217485520 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074825248 { -1220142048 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074825248 { -1220142048 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076934688 { -1218032608 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076934688 { -1218032608 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077481776 { -1217485520 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074825248 { -1220142048 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1314586528
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 32
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076936720 { -1218030576 } : BV:32
=input.src.llvm-%C.0
1 : 3074827280 { -1220140016 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077483808 { -1217483488 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=input.src.llvm-%i.0
1 : 1024 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077483808 { -1217483488 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076936720 { -1218030576 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074827280 { -1220140016 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1846162289
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 32 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076936736 { -1218030560 } : BV:32
=input.src.llvm-%A.0
1 : 3076936736 { -1218030560 } : BV:32
=input.src.llvm-%C.0
1 : 3074827296 { -1220140000 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077483824 { -1217483472 } : BV:32
=input.src.llvm-%inc
1 : 1028 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3077483824 { -1217483472 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1028 : BV:32
=input.src.llvm-%i.0
1 : 1028 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077483824 { -1217483472 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074827296 { -1220140000 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074827296 { -1220140000 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076936736 { -1218030560 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076936736 { -1218030560 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077483824 { -1217483472 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074827296 { -1220140000 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1846162289
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 33
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076940816 { -1218026480 } : BV:32
=input.src.llvm-%C.0
1 : 3074831376 { -1220135920 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077487904 { -1217479392 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=input.src.llvm-%i.0
1 : 2048 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077487904 { -1217479392 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076940816 { -1218026480 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074831376 { -1220135920 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1386122429
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 33 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8208 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076940832 { -1218026464 } : BV:32
=input.src.llvm-%A.0
1 : 3076940832 { -1218026464 } : BV:32
=input.src.llvm-%C.0
1 : 3074831392 { -1220135904 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077487920 { -1217479376 } : BV:32
=input.src.llvm-%inc
1 : 2052 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3077487920 { -1217479376 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2052 : BV:32
=input.src.llvm-%i.0
1 : 2052 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077487920 { -1217479376 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074831392 { -1220135904 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074831392 { -1220135904 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076940832 { -1218026464 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076940832 { -1218026464 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077487920 { -1217479376 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074831392 { -1220135904 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1386122429
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 34
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076949008 { -1218018288 } : BV:32
=input.src.llvm-%C.0
1 : 3074839568 { -1220127728 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077496096 { -1217471200 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=input.src.llvm-%i.0
1 : 4096 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077496096 { -1217471200 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076949008 { -1218018288 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074839568 { -1220127728 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1264537114
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 34 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16400 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076949024 { -1218018272 } : BV:32
=input.src.llvm-%A.0
1 : 3076949024 { -1218018272 } : BV:32
=input.src.llvm-%C.0
1 : 3074839584 { -1220127712 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077496112 { -1217471184 } : BV:32
=input.src.llvm-%inc
1 : 4100 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3077496112 { -1217471184 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4100 : BV:32
=input.src.llvm-%i.0
1 : 4100 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077496112 { -1217471184 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074839584 { -1220127712 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074839584 { -1220127712 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076949024 { -1218018272 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076949024 { -1218018272 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077496112 { -1217471184 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074839584 { -1220127712 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1264537114
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 35
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076965392 { -1218001904 } : BV:32
=input.src.llvm-%C.0
1 : 3074855952 { -1220111344 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077512480 { -1217454816 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=input.src.llvm-%i.0
1 : 8192 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077512480 { -1217454816 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076965392 { -1218001904 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074855952 { -1220111344 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1509887186
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 35 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32784 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076965408 { -1218001888 } : BV:32
=input.src.llvm-%A.0
1 : 3076965408 { -1218001888 } : BV:32
=input.src.llvm-%C.0
1 : 3074855968 { -1220111328 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077512496 { -1217454800 } : BV:32
=input.src.llvm-%inc
1 : 8196 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3077512496 { -1217454800 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8196 : BV:32
=input.src.llvm-%i.0
1 : 8196 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077512496 { -1217454800 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074855968 { -1220111328 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074855968 { -1220111328 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076965408 { -1218001888 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076965408 { -1218001888 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077512496 { -1217454800 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074855968 { -1220111328 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1509887186
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 36
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3076998160 { -1217969136 } : BV:32
=input.src.llvm-%C.0
1 : 3074888720 { -1220078576 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077545248 { -1217422048 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=input.src.llvm-%i.0
1 : 16384 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077545248 { -1217422048 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076998160 { -1217969136 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074888720 { -1220078576 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
441145323
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 36 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65552 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3076998176 { -1217969120 } : BV:32
=input.src.llvm-%A.0
1 : 3076998176 { -1217969120 } : BV:32
=input.src.llvm-%C.0
1 : 3074888736 { -1220078560 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077545264 { -1217422032 } : BV:32
=input.src.llvm-%inc
1 : 16388 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3077545264 { -1217422032 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16388 : BV:32
=input.src.llvm-%i.0
1 : 16388 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077545264 { -1217422032 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074888736 { -1220078560 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074888736 { -1220078560 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3076998176 { -1217969120 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3076998176 { -1217969120 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077545264 { -1217422032 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074888736 { -1220078560 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
441145323
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 37
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3077060592 { -1217906704 } : BV:32
=input.src.llvm-%C.0
1 : 3074951152 { -1220016144 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077607680 { -1217359616 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077607680 { -1217359616 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3077060592 { -1217906704 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074951152 { -1220016144 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
699776712
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 37 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3077060608 { -1217906688 } : BV:32
=input.src.llvm-%A.0
1 : 3077060608 { -1217906688 } : BV:32
=input.src.llvm-%C.0
1 : 3074951168 { -1220016128 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3077607696 { -1217359600 } : BV:32
=input.src.llvm-%inc
1 : 31996 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3077607696 { -1217359600 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077607696 { -1217359600 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3074951168 { -1220016128 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3074951168 { -1220016128 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3077060608 { -1217906688 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3077060608 { -1217906688 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3077607696 { -1217359600 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074951168 { -1220016128 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
699776712
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 38
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3077060608 { -1217906688 } : BV:32
=input.src.llvm-%C.0
1 : 3074951168 { -1220016128 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077607696 { -1217359600 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077607696 { -1217359600 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3077060608 { -1217906688 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074951168 { -1220016128 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
520716454
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 38 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3077060608 { -1217906688 } : BV:32
=input.src.llvm-%C.0
1 : 3074951168 { -1220016128 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077607696 { -1217359600 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077607696 { -1217359600 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3077060608 { -1217906688 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074951168 { -1220016128 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
520716454
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 39
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 249 , m_adder -> 22)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3077060608 { -1217906688 } : BV:32
=input.src.llvm-%C.0
1 : 3074951168 { -1220016128 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : ([ 1176010752; 2955415551 ] -> 0, () -> (RAC: m_multiplier -> 249 , m_adder -> 22)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077607696 { -1217359600 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077607696 { -1217359600 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3077060608 { -1217906688 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074951168 { -1220016128 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1460427763
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L1%1%0 nodece 39 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2955415548 { -1339551748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=symbol.3
1 : 3074823184 { -1220144112 } : BV:32
=symbol.1
1 : 3076932624 { -1218034672 } : BV:32
=symbol.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.1
1 : 3076932624 { -1218034672 } : BV:32
=dst_symbol_addr.2
1 : 3077479712 { -1217487584 } : BV:32
=dst_symbol_addr.3
1 : 3074823184 { -1220144112 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2955415548 { -1339551748 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 249 , m_adder -> 22)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2955415548 { -1339551748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1176010752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3076932624 { -1218034672 } : BV:32
=stack.size
1 : 1779404800 : BV:32
=input.src.llvm-%A.0
1 : 3077060608 { -1217906688 } : BV:32
=input.src.llvm-%C.0
1 : 3074951168 { -1220016128 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2955415551 { -1339551745 } : BV:32
=input.dst.mem
1 : ([ 1176010752; 2955415551 ] -> 0, () -> (RAC: m_multiplier -> 249 , m_adder -> 22)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3077060623 { -1217906673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3077479712 { -1217487584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3074823184 { -1220144112 } : BV:32
=input.src.llvm-%B.0
1 : 3077607696 { -1217359600 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3074951183 { -1220016113 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3076932624 { -1218034672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3077607696 { -1217359600 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3077060608 { -1217906688 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3074951168 { -1220016128 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3077607711 { -1217359585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1460427763
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 40
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222142096 { -1072825200 } : BV:32
=symbol.1
1 : 3224223888 { -1070743408 } : BV:32
=symbol.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.1
1 : 3224223888 { -1070743408 } : BV:32
=dst_symbol_addr.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.3
1 : 3222142096 { -1072825200 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 827322364 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4283301024 { -11666272 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 826994688 : BV:32
=memlabel-mem-esp_end
1 : 827322367 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3224351887 { -1070615409 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222142096 { -1072825200 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222270095 { -1072697201 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3224223888 { -1070743408 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4283429023 { -11538273 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1215992974
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 40 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 827322364 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3222142096 { -1072825200 } : BV:32
=symbol.1
1 : 3224223888 { -1070743408 } : BV:32
=symbol.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.1
1 : 3224223888 { -1070743408 } : BV:32
=dst_symbol_addr.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.3
1 : 3222142096 { -1072825200 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 827322364 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 827322364 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4283301024 { -11666272 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3224223888 { -1070743408 } : BV:32
=stack.size
1 : 826994688 : BV:32
=input.src.llvm-%A.0
1 : 3224223888 { -1070743408 } : BV:32
=input.src.llvm-%C.0
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 827322367 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3224351887 { -1070615409 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 4283301024 { -11666272 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 4283301024 { -11666272 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3224223888 { -1070743408 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%B.0
1 : 4283301024 { -11666272 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222270095 { -1072697201 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3224223888 { -1070743408 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 4283301024 { -11666272 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3224223888 { -1070743408 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3222142096 { -1072825200 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4283429023 { -11538273 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1215992974
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 41
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222142096 { -1072825200 } : BV:32
=symbol.1
1 : 3224223888 { -1070743408 } : BV:32
=symbol.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.1
1 : 3224223888 { -1070743408 } : BV:32
=dst_symbol_addr.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.3
1 : 3222142096 { -1072825200 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 827322364 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4283301024 { -11666272 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 826994688 : BV:32
=memlabel-mem-esp_end
1 : 827322367 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3224351887 { -1070615409 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222142096 { -1072825200 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222270095 { -1072697201 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3224223888 { -1070743408 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4283429023 { -11538273 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1215992974
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 41 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 827322364 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222142096 { -1072825200 } : BV:32
=symbol.1
1 : 3224223888 { -1070743408 } : BV:32
=symbol.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.1
1 : 3224223888 { -1070743408 } : BV:32
=dst_symbol_addr.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.3
1 : 3222142096 { -1072825200 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 827322364 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 827322364 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4283301024 { -11666272 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3224223888 { -1070743408 } : BV:32
=stack.size
1 : 826994688 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3224223904 { -1070743392 } : BV:32
=input.src.llvm-%A.0
1 : 3224223904 { -1070743392 } : BV:32
=input.src.llvm-%C.0
1 : 3222142112 { -1072825184 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 827322367 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3224351887 { -1070615409 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 4283301024 { -11666272 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 4283301024 { -11666272 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3224223888 { -1070743408 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 4283301040 { -11666256 } : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 4283301040 { -11666256 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222270095 { -1072697201 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3224223888 { -1070743408 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 4283301040 { -11666256 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3222142112 { -1072825184 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3222142112 { -1072825184 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3224223904 { -1070743392 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3224223904 { -1070743392 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 4283301040 { -11666256 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3222142112 { -1072825184 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4283429023 { -11538273 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1215992974
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 42
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222142096 { -1072825200 } : BV:32
=symbol.1
1 : 3224223888 { -1070743408 } : BV:32
=symbol.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.1
1 : 3224223888 { -1070743408 } : BV:32
=dst_symbol_addr.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.3
1 : 3222142096 { -1072825200 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 827322364 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4283301024 { -11666272 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 826994688 : BV:32
=memlabel-mem-esp_end
1 : 827322367 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3224351887 { -1070615409 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222142096 { -1072825200 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222270095 { -1072697201 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3224223888 { -1070743408 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4283429023 { -11538273 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1215992974
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 42 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 827322364 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222142096 { -1072825200 } : BV:32
=symbol.1
1 : 3224223888 { -1070743408 } : BV:32
=symbol.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.1
1 : 3224223888 { -1070743408 } : BV:32
=dst_symbol_addr.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.3
1 : 3222142096 { -1072825200 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 827322364 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 827322364 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4283301024 { -11666272 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3224223888 { -1070743408 } : BV:32
=stack.size
1 : 826994688 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3224223920 { -1070743376 } : BV:32
=input.src.llvm-%A.0
1 : 3224223920 { -1070743376 } : BV:32
=input.src.llvm-%C.0
1 : 3222142128 { -1072825168 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 827322367 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3224351887 { -1070615409 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 4283301024 { -11666272 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 4283301024 { -11666272 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3224223888 { -1070743408 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 4283301056 { -11666240 } : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 4283301056 { -11666240 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222270095 { -1072697201 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3224223888 { -1070743408 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 4283301056 { -11666240 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3222142128 { -1072825168 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3222142128 { -1072825168 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3224223920 { -1070743376 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3224223920 { -1070743376 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 4283301056 { -11666240 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3222142128 { -1072825168 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4283429023 { -11538273 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1215992974
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 43
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3222142096 { -1072825200 } : BV:32
=symbol.1
1 : 3224223888 { -1070743408 } : BV:32
=symbol.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.1
1 : 3224223888 { -1070743408 } : BV:32
=dst_symbol_addr.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.3
1 : 3222142096 { -1072825200 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 827322364 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4283301024 { -11666272 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 826994688 : BV:32
=memlabel-mem-esp_end
1 : 827322367 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3224351887 { -1070615409 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222142096 { -1072825200 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222270095 { -1072697201 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3224223888 { -1070743408 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4283429023 { -11538273 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1215992974
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 43 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 827322364 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3222142096 { -1072825200 } : BV:32
=symbol.1
1 : 3224223888 { -1070743408 } : BV:32
=symbol.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.1
1 : 3224223888 { -1070743408 } : BV:32
=dst_symbol_addr.2
1 : 4283301024 { -11666272 } : BV:32
=dst_symbol_addr.3
1 : 3222142096 { -1072825200 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 827322364 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 827322364 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4283301024 { -11666272 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3224223888 { -1070743408 } : BV:32
=stack.size
1 : 826994688 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3224223936 { -1070743360 } : BV:32
=input.src.llvm-%A.0
1 : 3224223936 { -1070743360 } : BV:32
=input.src.llvm-%C.0
1 : 3222142144 { -1072825152 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 827322367 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3224351887 { -1070615409 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 4283301024 { -11666272 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 4283301024 { -11666272 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3224223888 { -1070743408 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 4283301072 { -11666224 } : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3222142096 { -1072825200 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 4283301072 { -11666224 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3222270095 { -1072697201 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3224223888 { -1070743408 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 4283301072 { -11666224 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3222142144 { -1072825152 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3222142144 { -1072825152 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3224223936 { -1070743360 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3224223936 { -1070743360 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 4283301072 { -11666224 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3222142144 { -1072825152 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4283429023 { -11538273 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1215992974
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 44
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 920576 : BV:32
=symbol.1
1 : 68608 : BV:32
=symbol.2
1 : 269536 : BV:32
=dst_symbol_addr.1
1 : 68608 : BV:32
=dst_symbol_addr.2
1 : 269536 : BV:32
=dst_symbol_addr.3
1 : 920576 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294918140 { -49156 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 269536 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 1257472 : BV:32
=stack.size
1 : 4293660672 { -1306624 } : BV:32
=memlabel-mem-esp_end
1 : 4294918143 { -49153 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 196607 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 920576 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1048575 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 68608 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 397535 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2065566092
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 44 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294918140 { -49156 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 920576 : BV:32
=symbol.1
1 : 68608 : BV:32
=symbol.2
1 : 269536 : BV:32
=dst_symbol_addr.1
1 : 68608 : BV:32
=dst_symbol_addr.2
1 : 269536 : BV:32
=dst_symbol_addr.3
1 : 920576 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294918140 { -49156 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294918140 { -49156 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 269536 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 920576 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1257472 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 68608 : BV:32
=stack.size
1 : 4293660672 { -1306624 } : BV:32
=input.src.llvm-%A.0
1 : 68608 : BV:32
=input.src.llvm-%C.0
1 : 920576 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4294918143 { -49153 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 196607 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 269536 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 920576 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 269536 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 68608 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 920576 : BV:32
=input.src.llvm-%B.0
1 : 269536 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1048575 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 68608 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 269536 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 68608 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 920576 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 397535 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2065566092
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 45
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1152664785
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 45 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 973343744 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 360710144 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%A.0
1 : 360710144 : BV:32
=input.src.llvm-%C.0
1 : 973343744 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 897465856 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 973343744 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 897465856 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 360710144 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=input.src.llvm-%B.0
1 : 897465856 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 897465856 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 360710144 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 973343744 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1152664785
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 46
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1152664785
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 46 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 233396327762947486410949403770374020678 { -106886039157990977052425203661394190778 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 360710159 ) -> 175, ( 360710152 ) -> 6, ( 360710158 ) -> 150, ( 360710156 ) -> 102, ( 360710144 ) -> 70, ( 360710151 ) -> 238, ( 360710153 ) -> 31, ( 360710146 ) -> 119, ( 360710148 ) -> 166, ( 360710147 ) -> 142, ( 360710157 ) -> 127, ( 360710149 ) -> 190, ( 360710155 ) -> 79, ( 360710145 ) -> 94, ( 360710154 ) -> 54, ( 360710150 ) -> 215, () -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 973343744 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 360710144 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%add
1 : 2945875814 { -1349091482 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 360710160 : BV:32
=input.src.llvm-%A.0
1 : 360710160 : BV:32
=input.src.llvm-%C.0
1 : 973343760 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 360710159 ) -> 175, ( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 360710152 ) -> 6, ( 360710158 ) -> 150, ( 360710156 ) -> 102, ( 360710144 ) -> 70, ( 360710151 ) -> 238, ( 360710153 ) -> 31, ( 360710146 ) -> 119, ( 360710148 ) -> 166, ( 360710147 ) -> 142, ( 4294967294 ) -> 0, ( 360710157 ) -> 127, ( 4294967293 ) -> 0, ( 360710149 ) -> 190, ( 360710155 ) -> 79, ( 360710145 ) -> 94, ( 360710154 ) -> 54, ( 360710150 ) -> 215, () -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 897465856 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 973343744 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 897465856 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 360710144 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 897465872 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=input.src.llvm-%1
1 : 1472937907 : BV:32
=input.src.llvm-%0
1 : 1472937907 : BV:32
=input.src.llvm-%B.0
1 : 897465872 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 897465872 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 973343760 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 973343760 : BV:32
=input.src.llvm-%incdec.ptr
1 : 360710160 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 360710160 : BV:32
=input.src.llvm-%incdec.ptr1
1 : 897465872 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 973343760 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1152664785
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 47
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1152664785
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 47 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 62598308648129946928925914943326707654 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 360710166 ) -> 87, ( 360710159 ) -> 175, ( 360710170 ) -> 183, ( 360710160 ) -> 198, ( 360710152 ) -> 6, ( 360710171 ) -> 206, ( 360710158 ) -> 150, ( 360710156 ) -> 102, ( 360710173 ) -> 254, ( 360710144 ) -> 70, ( 360710151 ) -> 238, ( 360710153 ) -> 31, ( 360710168 ) -> 134, ( 360710172 ) -> 230, ( 360710165 ) -> 62, ( 360710164 ) -> 38, ( 360710146 ) -> 119, ( 360710148 ) -> 166, ( 360710147 ) -> 142, ( 360710161 ) -> 223, ( 360710157 ) -> 127, ( 360710175 ) -> 47, ( 360710169 ) -> 158, ( 360710167 ) -> 110, ( 360710162 ) -> 246, ( 360710149 ) -> 190, ( 360710155 ) -> 79, ( 360710145 ) -> 94, ( 360710163 ) -> 15, ( 360710154 ) -> 54, ( 360710150 ) -> 215, ( 360710174 ) -> 23, () -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 973343744 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 360710144 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%add
1 : 790101734 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 360710176 : BV:32
=input.src.llvm-%A.0
1 : 360710176 : BV:32
=input.src.llvm-%C.0
1 : 973343776 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 360710166 ) -> 87, ( 360710159 ) -> 175, ( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 360710170 ) -> 183, ( 360710160 ) -> 198, ( 360710152 ) -> 6, ( 360710171 ) -> 206, ( 360710158 ) -> 150, ( 360710156 ) -> 102, ( 360710173 ) -> 254, ( 360710144 ) -> 70, ( 360710151 ) -> 238, ( 360710153 ) -> 31, ( 360710168 ) -> 134, ( 360710172 ) -> 230, ( 360710165 ) -> 62, ( 360710164 ) -> 38, ( 360710146 ) -> 119, ( 360710148 ) -> 166, ( 360710147 ) -> 142, ( 360710161 ) -> 223, ( 4294967294 ) -> 0, ( 360710157 ) -> 127, ( 360710175 ) -> 47, ( 360710169 ) -> 158, ( 360710167 ) -> 110, ( 4294967293 ) -> 0, ( 360710162 ) -> 246, ( 360710149 ) -> 190, ( 360710155 ) -> 79, ( 360710145 ) -> 94, ( 360710163 ) -> 15, ( 360710154 ) -> 54, ( 360710150 ) -> 215, ( 360710174 ) -> 23, () -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 897465856 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 973343744 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 897465856 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 360710144 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 897465888 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=input.src.llvm-%1
1 : 395050867 : BV:32
=input.src.llvm-%0
1 : 395050867 : BV:32
=input.src.llvm-%B.0
1 : 897465888 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 897465888 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 973343776 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 973343776 : BV:32
=input.src.llvm-%incdec.ptr
1 : 360710176 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 360710176 : BV:32
=input.src.llvm-%incdec.ptr1
1 : 897465888 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 973343776 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1152664785
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 48
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1152664785
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*((Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 48 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 232072271781303220907707267168565878598 { -108210095139635242555667340263202332858 } : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 360710166 ) -> 87, ( 360710159 ) -> 175, ( 360710170 ) -> 183, ( 360710160 ) -> 198, ( 360710152 ) -> 6, ( 360710171 ) -> 206, ( 360710158 ) -> 150, ( 360710156 ) -> 102, ( 360710180 ) -> 166, ( 360710179 ) -> 143, ( 360710178 ) -> 118, ( 360710177 ) -> 95, ( 360710186 ) -> 55, ( 360710185 ) -> 30, ( 360710173 ) -> 254, ( 360710144 ) -> 70, ( 360710151 ) -> 238, ( 360710184 ) -> 6, ( 360710183 ) -> 239, ( 360710182 ) -> 214, ( 360710181 ) -> 191, ( 360710153 ) -> 31, ( 360710168 ) -> 134, ( 360710172 ) -> 230, ( 360710165 ) -> 62, ( 360710164 ) -> 38, ( 360710146 ) -> 119, ( 360710148 ) -> 166, ( 360710191 ) -> 174, ( 360710147 ) -> 142, ( 360710161 ) -> 223, ( 360710188 ) -> 102, ( 360710187 ) -> 78, ( 360710157 ) -> 127, ( 360710175 ) -> 47, ( 360710169 ) -> 158, ( 360710167 ) -> 110, ( 360710162 ) -> 246, ( 360710149 ) -> 190, ( 360710155 ) -> 79, ( 360710190 ) -> 151, ( 360710145 ) -> 94, ( 360710163 ) -> 15, ( 360710176 ) -> 70, ( 360710189 ) -> 126, ( 360710154 ) -> 54, ( 360710150 ) -> 215, ( 360710174 ) -> 23, () -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 973343744 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 360710144 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%add
1 : 2929163878 { -1365803418 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 360710192 : BV:32
=input.src.llvm-%A.0
1 : 360710192 : BV:32
=input.src.llvm-%C.0
1 : 973343792 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 360710166 ) -> 87, ( 360710159 ) -> 175, ( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 360710170 ) -> 183, ( 360710160 ) -> 198, ( 360710152 ) -> 6, ( 360710171 ) -> 206, ( 360710158 ) -> 150, ( 360710156 ) -> 102, ( 360710180 ) -> 166, ( 360710179 ) -> 143, ( 360710178 ) -> 118, ( 360710177 ) -> 95, ( 360710186 ) -> 55, ( 360710185 ) -> 30, ( 360710173 ) -> 254, ( 360710144 ) -> 70, ( 360710151 ) -> 238, ( 360710184 ) -> 6, ( 360710183 ) -> 239, ( 360710182 ) -> 214, ( 360710181 ) -> 191, ( 360710153 ) -> 31, ( 360710168 ) -> 134, ( 360710172 ) -> 230, ( 360710165 ) -> 62, ( 360710164 ) -> 38, ( 360710146 ) -> 119, ( 360710148 ) -> 166, ( 360710191 ) -> 174, ( 360710147 ) -> 142, ( 360710161 ) -> 223, ( 360710188 ) -> 102, ( 360710187 ) -> 78, ( 4294967294 ) -> 0, ( 360710157 ) -> 127, ( 360710175 ) -> 47, ( 360710169 ) -> 158, ( 360710167 ) -> 110, ( 4294967293 ) -> 0, ( 360710162 ) -> 246, ( 360710149 ) -> 190, ( 360710155 ) -> 79, ( 360710190 ) -> 151, ( 360710145 ) -> 94, ( 360710163 ) -> 15, ( 360710176 ) -> 70, ( 360710189 ) -> 126, ( 360710154 ) -> 54, ( 360710150 ) -> 215, ( 360710174 ) -> 23, () -> (RAC: m_multiplier -> 140 , m_adder -> 35)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 897465856 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 973343744 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 897465856 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 360710144 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 897465904 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=input.src.llvm-%1
1 : 3612065587 { -682901709 } : BV:32
=input.src.llvm-%0
1 : 3612065587 { -682901709 } : BV:32
=input.src.llvm-%B.0
1 : 897465904 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 897465904 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 973343792 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 973343792 : BV:32
=input.src.llvm-%incdec.ptr
1 : 360710192 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 360710192 : BV:32
=input.src.llvm-%incdec.ptr1
1 : 897465904 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 973343792 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1152664785
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 49
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147357664 : BV:32
=symbol.1
1 : 3716285296 { -578682000 } : BV:32
=symbol.2
1 : 2147486160 { -2147481136 } : BV:32
=dst_symbol_addr.1
1 : 3716285296 { -578682000 } : BV:32
=dst_symbol_addr.2
1 : 2147486160 { -2147481136 } : BV:32
=dst_symbol_addr.3
1 : 2147357664 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147356668 : BV:32
=input.src.llvm-mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2147486160 { -2147481136 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=stack.size
1 : 2147348480 : BV:32
=memlabel-mem-esp_end
1 : 2147356671 : BV:32
=input.dst.mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3716413295 { -578554001 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147357664 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147485663 { -2147481633 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3716285296 { -578682000 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147614159 { -2147353137 } : BV:32
=unaliased_memslot.1
1 : 3539840 : BV:32
=unaliased_memslot.0
1 : 147 : BV:32
=unaliased_memslot.2
1 : 376033 : BV:32
=unaliased_memslot.3
1 : 132 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
657150799
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 49 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147356668 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2147357664 : BV:32
=symbol.1
1 : 3716285296 { -578682000 } : BV:32
=symbol.2
1 : 2147486160 { -2147481136 } : BV:32
=dst_symbol_addr.1
1 : 3716285296 { -578682000 } : BV:32
=dst_symbol_addr.2
1 : 2147486160 { -2147481136 } : BV:32
=dst_symbol_addr.3
1 : 2147357664 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147356668 : BV:32
=input.src.llvm-mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147356668 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147486160 { -2147481136 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2147357664 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3716285296 { -578682000 } : BV:32
=stack.size
1 : 2147348480 : BV:32
=input.src.llvm-%A.0
1 : 3716285296 { -578682000 } : BV:32
=input.src.llvm-%C.0
1 : 2147357664 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2147356671 : BV:32
=input.dst.mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3716413295 { -578554001 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2147486160 { -2147481136 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2147357664 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2147486160 { -2147481136 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3716285296 { -578682000 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147357664 : BV:32
=input.src.llvm-%B.0
1 : 2147486160 { -2147481136 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147485663 { -2147481633 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3716285296 { -578682000 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2147486160 { -2147481136 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3716285296 { -578682000 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2147357664 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147614159 { -2147353137 } : BV:32
=unaliased_memslot.1
1 : 3539840 : BV:32
=unaliased_memslot.0
1 : 147 : BV:32
=unaliased_memslot.2
1 : 376033 : BV:32
=unaliased_memslot.3
1 : 132 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
657150799
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 50
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147357664 : BV:32
=symbol.1
1 : 3716285296 { -578682000 } : BV:32
=symbol.2
1 : 2147486160 { -2147481136 } : BV:32
=dst_symbol_addr.1
1 : 3716285296 { -578682000 } : BV:32
=dst_symbol_addr.2
1 : 2147486160 { -2147481136 } : BV:32
=dst_symbol_addr.3
1 : 2147357664 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147356668 : BV:32
=input.src.llvm-mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2147486160 { -2147481136 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=stack.size
1 : 2147348480 : BV:32
=memlabel-mem-esp_end
1 : 2147356671 : BV:32
=input.dst.mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3716413295 { -578554001 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147357664 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147485663 { -2147481633 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3716285296 { -578682000 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147614159 { -2147353137 } : BV:32
=unaliased_memslot.1
1 : 3539840 : BV:32
=unaliased_memslot.0
1 : 147 : BV:32
=unaliased_memslot.2
1 : 376033 : BV:32
=unaliased_memslot.3
1 : 132 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
657150799
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 50 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147356668 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 29792403700024884200193698404761747 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2147357664 : BV:32
=symbol.1
1 : 3716285296 { -578682000 } : BV:32
=symbol.2
1 : 2147486160 { -2147481136 } : BV:32
=dst_symbol_addr.1
1 : 3716285296 { -578682000 } : BV:32
=dst_symbol_addr.2
1 : 2147486160 { -2147481136 } : BV:32
=dst_symbol_addr.3
1 : 2147357664 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147356668 : BV:32
=input.src.llvm-mem
1 : (( 3716285308 ) -> 225, ( 3716285305 ) -> 3, ( 3716285304 ) -> 128, ( 3716285300 ) -> 132, ( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 3716285310 ) -> 5, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, ( 3716285296 ) -> 147, ( 3716285309 ) -> 188, ( 3716285306 ) -> 54, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147356668 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147486160 { -2147481136 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2147357664 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 8192 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3716285296 { -578682000 } : BV:32
=stack.size
1 : 2147348480 : BV:32
=input.src.llvm-%add
1 : 376033 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3716285312 { -578681984 } : BV:32
=input.src.llvm-%A.0
1 : 3716285312 { -578681984 } : BV:32
=input.src.llvm-%C.0
1 : 2147357680 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2147356671 : BV:32
=input.dst.mem
1 : (( 3716285308 ) -> 225, ( 3716285305 ) -> 3, ( 3716285304 ) -> 128, ( 3716285300 ) -> 132, ( 2147486160 ) -> 147, ( 2147486164 ) -> 132, ( 2147486170 ) -> 54, ( 2147486169 ) -> 3, ( 2147486168 ) -> 128, ( 3716285310 ) -> 5, ( 2147486174 ) -> 5, ( 2147486173 ) -> 188, ( 2147486172 ) -> 225, ( 3716285296 ) -> 147, ( 3716285309 ) -> 188, ( 3716285306 ) -> 54, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3716413295 { -578554001 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2147486160 { -2147481136 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2147357664 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2147486160 { -2147481136 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3716285296 { -578682000 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 2147486176 { -2147481120 } : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147357664 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 376033 : BV:32
=input.src.llvm-%B.0
1 : 2147486176 { -2147481120 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147485663 { -2147481633 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3716285296 { -578682000 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2147486176 { -2147481120 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 2147357680 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 2147357680 : BV:32
=input.src.llvm-%incdec.ptr
1 : 3716285312 { -578681984 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3716285312 { -578681984 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 2147486176 { -2147481120 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2147357680 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147614159 { -2147353137 } : BV:32
=unaliased_memslot.1
1 : 3539840 : BV:32
=unaliased_memslot.0
1 : 147 : BV:32
=unaliased_memslot.2
1 : 376033 : BV:32
=unaliased_memslot.3
1 : 132 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
657150799
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 51
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4278190080 { -16777216 } : BV:32
=symbol.1
1 : 4278651904 { -16315392 } : BV:32
=symbol.2
1 : 4278979600 { -15987696 } : BV:32
=dst_symbol_addr.1
1 : 4278651904 { -16315392 } : BV:32
=dst_symbol_addr.2
1 : 4278979600 { -15987696 } : BV:32
=dst_symbol_addr.3
1 : 4278190080 { -16777216 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4264599548 { -30367748 } : BV:32
=input.src.llvm-mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4278979600 { -15987696 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=stack.size
1 : 4264599552 { -30367744 } : BV:32
=memlabel-mem-esp_end
1 : 4264599551 { -30367745 } : BV:32
=input.dst.mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4278779903 { -16187393 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4278190080 { -16777216 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4278318079 { -16649217 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4278651904 { -16315392 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4279107599 { -15859697 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 11 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
749527092
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 51 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4264599548 { -30367748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4278190080 { -16777216 } : BV:32
=symbol.1
1 : 4278651904 { -16315392 } : BV:32
=symbol.2
1 : 4278979600 { -15987696 } : BV:32
=dst_symbol_addr.1
1 : 4278651904 { -16315392 } : BV:32
=dst_symbol_addr.2
1 : 4278979600 { -15987696 } : BV:32
=dst_symbol_addr.3
1 : 4278190080 { -16777216 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4264599548 { -30367748 } : BV:32
=input.src.llvm-mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4264599548 { -30367748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4278979600 { -15987696 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 4278190080 { -16777216 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4278651904 { -16315392 } : BV:32
=stack.size
1 : 4264599552 { -30367744 } : BV:32
=input.src.llvm-%A.0
1 : 4278651904 { -16315392 } : BV:32
=input.src.llvm-%C.0
1 : 4278190080 { -16777216 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4264599551 { -30367745 } : BV:32
=input.dst.mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4278779903 { -16187393 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 4278979600 { -15987696 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 4278190080 { -16777216 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 4278979600 { -15987696 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4278651904 { -16315392 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4278190080 { -16777216 } : BV:32
=input.src.llvm-%B.0
1 : 4278979600 { -15987696 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4278318079 { -16649217 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4278651904 { -16315392 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 4278979600 { -15987696 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4278651904 { -16315392 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 4278190080 { -16777216 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4279107599 { -15859697 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 11 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
749527092
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 52
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4278190080 { -16777216 } : BV:32
=symbol.1
1 : 4278651904 { -16315392 } : BV:32
=symbol.2
1 : 4278979600 { -15987696 } : BV:32
=dst_symbol_addr.1
1 : 4278651904 { -16315392 } : BV:32
=dst_symbol_addr.2
1 : 4278979600 { -15987696 } : BV:32
=dst_symbol_addr.3
1 : 4278190080 { -16777216 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4264599548 { -30367748 } : BV:32
=input.src.llvm-mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4278979600 { -15987696 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 0 : BV:32
=stack.size
1 : 4264599552 { -30367744 } : BV:32
=memlabel-mem-esp_end
1 : 4264599551 { -30367745 } : BV:32
=input.dst.mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4278779903 { -16187393 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4278190080 { -16777216 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4278318079 { -16649217 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4278651904 { -16315392 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4279107599 { -15859697 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 11 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
749527092
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)*(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 52 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4264599548 { -30367748 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 871509787656907713528983453696 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 4278190080 { -16777216 } : BV:32
=symbol.1
1 : 4278651904 { -16315392 } : BV:32
=symbol.2
1 : 4278979600 { -15987696 } : BV:32
=dst_symbol_addr.1
1 : 4278651904 { -16315392 } : BV:32
=dst_symbol_addr.2
1 : 4278979600 { -15987696 } : BV:32
=dst_symbol_addr.3
1 : 4278190080 { -16777216 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4264599548 { -30367748 } : BV:32
=input.src.llvm-mem
1 : (( 4278979612 ) -> 11, ( 4278651916 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4264599548 { -30367748 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4278979600 { -15987696 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4278979612 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 4278190080 { -16777216 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4278651904 { -16315392 } : BV:32
=stack.size
1 : 4264599552 { -30367744 } : BV:32
=input.src.llvm-%add
1 : 11 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 4278651920 { -16315376 } : BV:32
=input.src.llvm-%A.0
1 : 4278651920 { -16315376 } : BV:32
=input.src.llvm-%C.0
1 : 4278190096 { -16777200 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4264599551 { -30367745 } : BV:32
=input.dst.mem
1 : (( 4278979612 ) -> 11, ( 4278651916 ) -> 11, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4278779903 { -16187393 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 4278979600 { -15987696 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 4278190080 { -16777216 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 4278979600 { -15987696 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4278651904 { -16315392 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 4278979616 { -15987680 } : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4278190080 { -16777216 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 11 : BV:32
=input.src.llvm-%B.0
1 : 4278979616 { -15987680 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4278318079 { -16649217 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4278651904 { -16315392 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 4278979616 { -15987680 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 4278190096 { -16777200 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 4278190096 { -16777200 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 4278651920 { -16315376 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4278651920 { -16315376 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 4278979616 { -15987680 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 4278190096 { -16777200 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4279107599 { -15859697 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 11 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
749527092
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 53
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
901482438
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 53 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 973343744 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 360710144 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%A.0
1 : 360710144 : BV:32
=input.src.llvm-%C.0
1 : 973343744 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 897465856 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 973343744 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 897465856 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 360710144 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=input.src.llvm-%B.0
1 : 897465856 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 897465856 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 360710144 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 973343744 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
901482438
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 54
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 23785472 : BV:32
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2042122590
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 54 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 24113148 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 24113148 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 290323600 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 1074643088 : BV:32
=stack.size
1 : 23785472 : BV:32
=input.src.llvm-%A.0
1 : 1074643088 : BV:32
=input.src.llvm-%C.0
1 : 290323600 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (( 24113148 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2137914528 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 290323600 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2137914528 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 1074643088 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=input.src.llvm-%B.0
1 : 2137914528 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2137914528 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 1074643088 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 290323600 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2042122590
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 55
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 234)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 234)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1942813514
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 55 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 108 , m_adder -> 234)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 973343744 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 360710144 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%A.0
1 : 360710144 : BV:32
=input.src.llvm-%C.0
1 : 973343744 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 128, ( 4294967292 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 108 , m_adder -> 234)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 897465856 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 973343744 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 897465856 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 360710144 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=input.src.llvm-%B.0
1 : 897465856 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 897465856 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 360710144 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 973343744 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1942813514
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 56
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 23785472 : BV:32
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1422146546
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 56 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 24113148 : BV:32
=input.dst.exreg.0.5
1 : 1 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 290323600 : BV:32
=symbol.1
1 : 1074643088 : BV:32
=symbol.2
1 : 2137914528 : BV:32
=dst_symbol_addr.1
1 : 1074643088 : BV:32
=dst_symbol_addr.2
1 : 2137914528 : BV:32
=dst_symbol_addr.3
1 : 290323600 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 24113148 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 24113148 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2137914528 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 290323600 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 1074643088 : BV:32
=stack.size
1 : 23785472 : BV:32
=input.src.llvm-%A.0
1 : 1074643088 : BV:32
=input.src.llvm-%C.0
1 : 290323600 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 24113151 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1074771087 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2137914528 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 290323600 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2137914528 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 1074643088 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 290323600 : BV:32
=input.src.llvm-%B.0
1 : 2137914528 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 290451599 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1074643088 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2137914528 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 1074643088 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 290323600 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2138042527 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1422146546
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 57
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 254 , m_adder -> 206)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 254 , m_adder -> 206)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
4163323143
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 57 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 973343744 : BV:32
=symbol.1
1 : 360710144 : BV:32
=symbol.2
1 : 897465856 : BV:32
=dst_symbol_addr.1
1 : 360710144 : BV:32
=dst_symbol_addr.2
1 : 897465856 : BV:32
=dst_symbol_addr.3
1 : 973343744 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 254 , m_adder -> 206)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 897465856 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 973343744 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 360710144 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%A.0
1 : 360710144 : BV:32
=input.src.llvm-%C.0
1 : 973343744 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 254 , m_adder -> 206)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 360838143 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 897465856 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 973343744 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 897465856 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 360710144 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973343744 : BV:32
=input.src.llvm-%B.0
1 : 897465856 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973471743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 360710144 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 897465856 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 360710144 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 973343744 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 897593855 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
4163323143
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 58
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147359392 : BV:32
=symbol.1
1 : 4294836592 { -130704 } : BV:32
=symbol.2
1 : 2147231328 : BV:32
=dst_symbol_addr.1
1 : 4294836592 { -130704 } : BV:32
=dst_symbol_addr.2
1 : 2147231328 : BV:32
=dst_symbol_addr.3
1 : 2147359392 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3892219900 { -402747396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 2147231328 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147631104 { -2147336192 } : BV:32
=stack.size
1 : 1744588800 : BV:32
=memlabel-mem-esp_end
1 : 3892219903 { -402747393 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294964591 { -2705 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147359392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147487391 { -2147479905 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294836592 { -130704 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147359327 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1896595622
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 58 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3892219900 { -402747396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2147359392 : BV:32
=symbol.1
1 : 4294836592 { -130704 } : BV:32
=symbol.2
1 : 2147231328 : BV:32
=dst_symbol_addr.1
1 : 4294836592 { -130704 } : BV:32
=dst_symbol_addr.2
1 : 2147231328 : BV:32
=dst_symbol_addr.3
1 : 2147359392 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3892219900 { -402747396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3892219900 { -402747396 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147231328 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2147359392 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147631104 { -2147336192 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4294836592 { -130704 } : BV:32
=stack.size
1 : 1744588800 : BV:32
=input.src.llvm-%A.0
1 : 4294836592 { -130704 } : BV:32
=input.src.llvm-%C.0
1 : 2147359392 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 3892219903 { -402747393 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294964591 { -2705 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2147231328 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2147359392 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2147231328 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4294836592 { -130704 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147359392 : BV:32
=input.src.llvm-%B.0
1 : 2147231328 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147487391 { -2147479905 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294836592 { -130704 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2147231328 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4294836592 { -130704 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2147359392 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147359327 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1896595622
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 59
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1438904096 : BV:32
=symbol.1
1 : 2646601472 { -1648365824 } : BV:32
=symbol.2
1 : 3588222784 { -706744512 } : BV:32
=dst_symbol_addr.1
1 : 2646601472 { -1648365824 } : BV:32
=dst_symbol_addr.2
1 : 3588222784 { -706744512 } : BV:32
=dst_symbol_addr.3
1 : 1438904096 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 660721660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 3588222784 { -706744512 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 537534464 : BV:32
=stack.size
1 : 123187200 : BV:32
=memlabel-mem-esp_end
1 : 660721663 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2646729471 { -1648237825 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1438904096 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1439032095 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2646601472 { -1648365824 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3588350783 { -706616513 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1290957677
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 59 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 660721660 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1438904096 : BV:32
=symbol.1
1 : 2646601472 { -1648365824 } : BV:32
=symbol.2
1 : 3588222784 { -706744512 } : BV:32
=dst_symbol_addr.1
1 : 2646601472 { -1648365824 } : BV:32
=dst_symbol_addr.2
1 : 3588222784 { -706744512 } : BV:32
=dst_symbol_addr.3
1 : 1438904096 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 660721660 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 660721660 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3588222784 { -706744512 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 1438904096 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 537534464 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 2646601472 { -1648365824 } : BV:32
=stack.size
1 : 123187200 : BV:32
=input.src.llvm-%A.0
1 : 2646601472 { -1648365824 } : BV:32
=input.src.llvm-%C.0
1 : 1438904096 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 660721663 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2646729471 { -1648237825 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3588222784 { -706744512 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 1438904096 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3588222784 { -706744512 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 2646601472 { -1648365824 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1438904096 : BV:32
=input.src.llvm-%B.0
1 : 3588222784 { -706744512 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1439032095 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2646601472 { -1648365824 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3588222784 { -706744512 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 2646601472 { -1648365824 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 1438904096 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3588350783 { -706616513 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1290957677
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 60
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2392064 : BV:32
=symbol.1
1 : 1073627200 : BV:32
=symbol.2
1 : 536969216 : BV:32
=dst_symbol_addr.1
1 : 1073627200 : BV:32
=dst_symbol_addr.2
1 : 536969216 : BV:32
=dst_symbol_addr.3
1 : 2392064 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 536969216 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1073755199 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2392064 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2520063 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073627200 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 537097215 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3761924218
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 60 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2392064 : BV:32
=symbol.1
1 : 1073627200 : BV:32
=symbol.2
1 : 536969216 : BV:32
=dst_symbol_addr.1
1 : 1073627200 : BV:32
=dst_symbol_addr.2
1 : 536969216 : BV:32
=dst_symbol_addr.3
1 : 2392064 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 245 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 536969216 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2392064 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 1073627200 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%A.0
1 : 1073627200 : BV:32
=input.src.llvm-%C.0
1 : 2392064 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 4294967295 ) -> 0, ( 4294967292 ) -> 0, ( 4294967294 ) -> 0, ( 4294967293 ) -> 0, () -> (RAC: m_multiplier -> 245 , m_adder -> 209)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 1073755199 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 536969216 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2392064 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 536969216 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 1073627200 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2392064 : BV:32
=input.src.llvm-%B.0
1 : 536969216 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2520063 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1073627200 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 536969216 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 1073627200 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2392064 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 537097215 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3761924218
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 61
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4269279696 { -25687600 } : BV:32
=symbol.1
1 : 4277423104 { -17544192 } : BV:32
=symbol.2
1 : 4223747072 { -71220224 } : BV:32
=dst_symbol_addr.1
1 : 4277423104 { -17544192 } : BV:32
=dst_symbol_addr.2
1 : 4223747072 { -71220224 } : BV:32
=dst_symbol_addr.3
1 : 4269279696 { -25687600 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4177526780 { -117440516 } : BV:32
=input.src.llvm-mem
1 : (( 4223747080 ) -> 3, ( 4269279708 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4223747072 { -71220224 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4223747080 ) -> 3, ( 4269279708 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 6524928 : BV:32
=stack.size
1 : 4171001856 { -123965440 } : BV:32
=memlabel-mem-esp_end
1 : 4177526783 { -117440513 } : BV:32
=input.dst.mem
1 : (( 4223747080 ) -> 3, ( 4269279708 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4277551103 { -17416193 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4269279696 { -25687600 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4269407695 { -25559601 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4277423104 { -17544192 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4223875071 { -71092225 } : BV:32
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 13 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1256524081
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 61 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4177526780 { -117440516 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4269279696 { -25687600 } : BV:32
=symbol.1
1 : 4277423104 { -17544192 } : BV:32
=symbol.2
1 : 4223747072 { -71220224 } : BV:32
=dst_symbol_addr.1
1 : 4277423104 { -17544192 } : BV:32
=dst_symbol_addr.2
1 : 4223747072 { -71220224 } : BV:32
=dst_symbol_addr.3
1 : 4269279696 { -25687600 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4177526780 { -117440516 } : BV:32
=input.src.llvm-mem
1 : (( 4223747080 ) -> 3, ( 4269279708 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4177526780 { -117440516 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4223747072 { -71220224 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4223747080 ) -> 3, ( 4269279708 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 4269279696 { -25687600 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 6524928 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4277423104 { -17544192 } : BV:32
=stack.size
1 : 4171001856 { -123965440 } : BV:32
=input.src.llvm-%A.0
1 : 4277423104 { -17544192 } : BV:32
=input.src.llvm-%C.0
1 : 4269279696 { -25687600 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4177526783 { -117440513 } : BV:32
=input.dst.mem
1 : (( 4223747080 ) -> 3, ( 4269279708 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4277551103 { -17416193 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 4223747072 { -71220224 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 4269279696 { -25687600 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 4223747072 { -71220224 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4277423104 { -17544192 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4269279696 { -25687600 } : BV:32
=input.src.llvm-%B.0
1 : 4223747072 { -71220224 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4269407695 { -25559601 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4277423104 { -17544192 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 4223747072 { -71220224 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4277423104 { -17544192 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 4269279696 { -25687600 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4223875071 { -71092225 } : BV:32
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 13 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1256524081
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 62
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2638347408 { -1656619888 } : BV:32
=symbol.1
1 : 3221340304 { -1073626992 } : BV:32
=symbol.2
1 : 4284611744 { -10355552 } : BV:32
=dst_symbol_addr.1
1 : 3221340304 { -1073626992 } : BV:32
=dst_symbol_addr.2
1 : 4284611744 { -10355552 } : BV:32
=dst_symbol_addr.3
1 : 2638347408 { -1656619888 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 23326716 : BV:32
=input.src.llvm-mem
1 : (( 2638347420 ) -> 12, ( 2638347408 ) -> 3, ( 4284611744 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4284611744 { -10355552 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2638347420 ) -> 12, ( 2638347408 ) -> 3, ( 4284611744 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 65536 : BV:32
=stack.size
1 : 23261184 : BV:32
=memlabel-mem-esp_end
1 : 23326719 : BV:32
=input.dst.mem
1 : (( 2638347420 ) -> 12, ( 2638347408 ) -> 3, ( 4284611744 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3221468303 { -1073498993 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2638347408 { -1656619888 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2638475407 { -1656491889 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221340304 { -1073626992 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4284739743 { -10227553 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 3 : BV:32
=unaliased_memslot.4
1 : 12 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
506060707
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 62 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 23326716 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 2638347408 { -1656619888 } : BV:32
=symbol.1
1 : 3221340304 { -1073626992 } : BV:32
=symbol.2
1 : 4284611744 { -10355552 } : BV:32
=dst_symbol_addr.1
1 : 3221340304 { -1073626992 } : BV:32
=dst_symbol_addr.2
1 : 4284611744 { -10355552 } : BV:32
=dst_symbol_addr.3
1 : 2638347408 { -1656619888 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 23326716 : BV:32
=input.src.llvm-mem
1 : (( 2638347420 ) -> 12, ( 2638347408 ) -> 3, ( 4284611744 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 23326716 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4284611744 { -10355552 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2638347420 ) -> 12, ( 2638347408 ) -> 3, ( 4284611744 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2638347408 { -1656619888 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 65536 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3221340304 { -1073626992 } : BV:32
=stack.size
1 : 23261184 : BV:32
=input.src.llvm-%A.0
1 : 3221340304 { -1073626992 } : BV:32
=input.src.llvm-%C.0
1 : 2638347408 { -1656619888 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 23326719 : BV:32
=input.dst.mem
1 : (( 2638347420 ) -> 12, ( 2638347408 ) -> 3, ( 4284611744 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3221468303 { -1073498993 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 4284611744 { -10355552 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2638347408 { -1656619888 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 4284611744 { -10355552 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3221340304 { -1073626992 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2638347408 { -1656619888 } : BV:32
=input.src.llvm-%B.0
1 : 4284611744 { -10355552 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2638475407 { -1656491889 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221340304 { -1073626992 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 4284611744 { -10355552 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3221340304 { -1073626992 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2638347408 { -1656619888 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4284739743 { -10227553 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 3 : BV:32
=unaliased_memslot.4
1 : 12 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
506060707
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 63
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 973215744 : BV:32
=symbol.1
1 : 369098752 : BV:32
=symbol.2
1 : 377361424 : BV:32
=dst_symbol_addr.1
1 : 369098752 : BV:32
=dst_symbol_addr.2
1 : 377361424 : BV:32
=dst_symbol_addr.3
1 : 973215744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 377361424 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 377361424 : BV:32
=commonMEM.nonstack.mem
1 : (( 377361424 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 377361424 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 369226751 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973215744 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973343743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 369098752 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 377489423 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
222549294
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 63 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 973215744 : BV:32
=symbol.1
1 : 369098752 : BV:32
=symbol.2
1 : 377361424 : BV:32
=dst_symbol_addr.1
1 : 369098752 : BV:32
=dst_symbol_addr.2
1 : 377361424 : BV:32
=dst_symbol_addr.3
1 : 973215744 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 377361424 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 377361424 : BV:32
=commonMEM.nonstack.mem
1 : (( 377361424 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 973215744 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 369098752 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%A.0
1 : 369098752 : BV:32
=input.src.llvm-%C.0
1 : 973215744 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 377361424 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 369226751 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 377361424 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 973215744 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 377361424 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 369098752 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 973215744 : BV:32
=input.src.llvm-%B.0
1 : 377361424 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 973343743 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 369098752 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 377361424 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 369098752 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 973215744 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 377489423 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
222549294
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 64
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3221220336 { -1073746960 } : BV:32
=symbol.1
1 : 4265439088 { -29528208 } : BV:32
=symbol.2
1 : 1073736688 : BV:32
=dst_symbol_addr.1
1 : 4265439088 { -29528208 } : BV:32
=dst_symbol_addr.2
1 : 1073736688 : BV:32
=dst_symbol_addr.3
1 : 3221220336 { -1073746960 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2415816700 { -1879150596 } : BV:32
=input.src.llvm-mem
1 : (( 3221220340 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 1073736688 : BV:32
=commonMEM.nonstack.mem
1 : (( 3221220340 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147381248 : BV:32
=stack.size
1 : 268435456 : BV:32
=memlabel-mem-esp_end
1 : 2415816703 { -1879150593 } : BV:32
=input.dst.mem
1 : (( 3221220340 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4265567087 { -29400209 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221220336 { -1073746960 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221348335 { -1073618961 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4265439088 { -29528208 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073864687 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
356579531
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 64 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2415816700 { -1879150596 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3221220336 { -1073746960 } : BV:32
=symbol.1
1 : 4265439088 { -29528208 } : BV:32
=symbol.2
1 : 1073736688 : BV:32
=dst_symbol_addr.1
1 : 4265439088 { -29528208 } : BV:32
=dst_symbol_addr.2
1 : 1073736688 : BV:32
=dst_symbol_addr.3
1 : 3221220336 { -1073746960 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2415816700 { -1879150596 } : BV:32
=input.src.llvm-mem
1 : (( 3221220340 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2415816700 { -1879150596 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1073736688 : BV:32
=commonMEM.nonstack.mem
1 : (( 3221220340 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3221220336 { -1073746960 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147381248 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4265439088 { -29528208 } : BV:32
=stack.size
1 : 268435456 : BV:32
=input.src.llvm-%A.0
1 : 4265439088 { -29528208 } : BV:32
=input.src.llvm-%C.0
1 : 3221220336 { -1073746960 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2415816703 { -1879150593 } : BV:32
=input.dst.mem
1 : (( 3221220340 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4265567087 { -29400209 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 1073736688 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3221220336 { -1073746960 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 1073736688 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4265439088 { -29528208 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3221220336 { -1073746960 } : BV:32
=input.src.llvm-%B.0
1 : 1073736688 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3221348335 { -1073618961 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4265439088 { -29528208 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 1073736688 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4265439088 { -29528208 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3221220336 { -1073746960 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1073864687 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
356579531
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 65
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1011260416 : BV:32
=symbol.1
1 : 402653184 : BV:32
=symbol.2
1 : 939427840 : BV:32
=dst_symbol_addr.1
1 : 402653184 : BV:32
=dst_symbol_addr.2
1 : 939427840 : BV:32
=dst_symbol_addr.3
1 : 1011260416 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 939427844 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 939427840 : BV:32
=commonMEM.nonstack.mem
1 : (( 939427844 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 939427844 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 402781183 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1011260416 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1011388415 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 402653184 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 939555839 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
941160530
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 65 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 1011260416 : BV:32
=symbol.1
1 : 402653184 : BV:32
=symbol.2
1 : 939427840 : BV:32
=dst_symbol_addr.1
1 : 402653184 : BV:32
=dst_symbol_addr.2
1 : 939427840 : BV:32
=dst_symbol_addr.3
1 : 1011260416 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 939427844 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 939427840 : BV:32
=commonMEM.nonstack.mem
1 : (( 939427844 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 1011260416 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 402653184 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%A.0
1 : 402653184 : BV:32
=input.src.llvm-%C.0
1 : 1011260416 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=input.dst.mem
1 : (( 939427844 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 402781183 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 939427840 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 1011260416 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 939427840 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 402653184 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1011260416 : BV:32
=input.src.llvm-%B.0
1 : 939427840 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1011388415 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 402653184 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 939427840 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 402653184 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 1011260416 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 939555839 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
941160530
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 66
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1806720168
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 66 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.4
1 : 4290707452 { -4259844 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4290707452 { -4259844 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 4294234112 { -733184 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4294771200 { -196096 } : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=input.src.llvm-%A.0
1 : 4294771200 { -196096 } : BV:32
=input.src.llvm-%C.0
1 : 4294234112 { -733184 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 4292742144 { -2225152 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 4294234112 { -733184 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 4292742144 { -2225152 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4294771200 { -196096 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=input.src.llvm-%B.0
1 : 4292742144 { -2225152 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 4292742144 { -2225152 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4294771200 { -196096 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1806720168
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 67
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
505804741
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 67 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4290707452 { -4259844 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4290707452 { -4259844 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 4294234112 { -733184 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4294771200 { -196096 } : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=input.src.llvm-%A.0
1 : 4294771200 { -196096 } : BV:32
=input.src.llvm-%C.0
1 : 4294234112 { -733184 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 4292742144 { -2225152 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 4294234112 { -733184 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 4292742144 { -2225152 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4294771200 { -196096 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=input.src.llvm-%B.0
1 : 4292742144 { -2225152 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 4292742144 { -2225152 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4294771200 { -196096 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
505804741
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 68
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3511549072 { -783418224 } : BV:32
=symbol.1
1 : 3758997648 { -535969648 } : BV:32
=symbol.2
1 : 4285398176 { -9569120 } : BV:32
=dst_symbol_addr.1
1 : 3758997648 { -535969648 } : BV:32
=dst_symbol_addr.2
1 : 4285398176 { -9569120 } : BV:32
=dst_symbol_addr.3
1 : 3511549072 { -783418224 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 829419516 : BV:32
=input.src.llvm-mem
1 : (( 3511549084 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4285398176 { -9569120 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3511549084 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=stack.size
1 : 829091840 : BV:32
=memlabel-mem-esp_end
1 : 829419519 : BV:32
=input.dst.mem
1 : (( 3511549084 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3759125647 { -535841649 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3511549072 { -783418224 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3511677071 { -783290225 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758997648 { -535969648 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4285526175 { -9441121 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1613666650
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 68 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 829419516 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 3511549072 { -783418224 } : BV:32
=symbol.1
1 : 3758997648 { -535969648 } : BV:32
=symbol.2
1 : 4285398176 { -9569120 } : BV:32
=dst_symbol_addr.1
1 : 3758997648 { -535969648 } : BV:32
=dst_symbol_addr.2
1 : 4285398176 { -9569120 } : BV:32
=dst_symbol_addr.3
1 : 3511549072 { -783418224 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 829419516 : BV:32
=input.src.llvm-mem
1 : (( 3511549084 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 829419516 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4285398176 { -9569120 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3511549084 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3511549072 { -783418224 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 327680 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3758997648 { -535969648 } : BV:32
=stack.size
1 : 829091840 : BV:32
=input.src.llvm-%A.0
1 : 3758997648 { -535969648 } : BV:32
=input.src.llvm-%C.0
1 : 3511549072 { -783418224 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 829419519 : BV:32
=input.dst.mem
1 : (( 3511549084 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3759125647 { -535841649 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 4285398176 { -9569120 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3511549072 { -783418224 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 4285398176 { -9569120 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3758997648 { -535969648 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3511549072 { -783418224 } : BV:32
=input.src.llvm-%B.0
1 : 4285398176 { -9569120 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3511677071 { -783290225 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3758997648 { -535969648 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 4285398176 { -9569120 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3758997648 { -535969648 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3511549072 { -783418224 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4285526175 { -9441121 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1613666650
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 69
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1639672320
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%A.0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%C.0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%B.0
1 : symbol.2 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : 0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : eq(9, 2) : BOOL
11 : 4 : INT
12 : isindexforsize(10, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : 4 : BV:32
8 : bvmul(3, 7) : BV:32
9 : bvadd(6, 8) : BV:32
10 : bvadd(2, 9) : BV:32
11 : isgepoffset(10, 8) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((((((start_pc_edge*  br label %for.cond, !dbg !22)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*badref)*(badref*((badref*badref)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)))*badref)*((badref*((badref*badref)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16))*badref))*(badref*((((((badref*badref)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !22))*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*  br label %for.cond, !dbg !22)*(  br label %for.cond, !dbg !22*  br label %for.cond, !dbg !22))))
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(start_pc_edge*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 69 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4290707452 { -4259844 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=symbol.3
1 : 4294234112 { -733184 } : BV:32
=symbol.1
1 : 4294771200 { -196096 } : BV:32
=symbol.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.1
1 : 4294771200 { -196096 } : BV:32
=dst_symbol_addr.2
1 : 4292742144 { -2225152 } : BV:32
=dst_symbol_addr.3
1 : 4294234112 { -733184 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4290707452 { -4259844 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4290707452 { -4259844 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4292742144 { -2225152 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 4294234112 { -733184 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 61440 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4294771200 { -196096 } : BV:32
=stack.size
1 : 4290646016 { -4321280 } : BV:32
=input.src.llvm-%A.0
1 : 4294771200 { -196096 } : BV:32
=input.src.llvm-%C.0
1 : 4294234112 { -733184 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 4290707455 { -4259841 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294899199 { -68097 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 4292742144 { -2225152 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 4294234112 { -733184 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 4292742144 { -2225152 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4294771200 { -196096 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294234112 { -733184 } : BV:32
=input.src.llvm-%B.0
1 : 4292742144 { -2225152 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294362111 { -605185 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294771200 { -196096 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 4292742144 { -2225152 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4294771200 { -196096 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 4294234112 { -733184 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 4292870143 { -2097153 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1639672320
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 70
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1006632956 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1679808720 : BV:32
=symbol.1
1 : 2558263264 { -1736704032 } : BV:32
=symbol.2
1 : 1897797616 : BV:32
=dst_symbol_addr.1
1 : 2558263264 { -1736704032 } : BV:32
=dst_symbol_addr.2
1 : 1897797616 : BV:32
=dst_symbol_addr.3
1 : 1679808720 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1006632956 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1006632956 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1897797616 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 1679808720 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 2558263264 { -1736704032 } : BV:32
=stack.size
1 : 1006632960 : BV:32
=input.src.llvm-%A.0
1 : 2558263328 { -1736703968 } : BV:32
=input.src.llvm-%C.0
1 : 1679808784 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1006632959 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2558391263 { -1736576033 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 1897797616 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 1679808720 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 1897797616 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 2558263264 { -1736704032 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1679808720 : BV:32
=input.src.llvm-%B.0
1 : 1897797680 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=input.src.llvm-%i.0
1 : 16 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1679936719 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2558263264 { -1736704032 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 1897797680 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 2558263328 { -1736703968 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 1679808784 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1897925615 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1927647495
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 70 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 80 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1006632956 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1679808720 : BV:32
=symbol.1
1 : 2558263264 { -1736704032 } : BV:32
=symbol.2
1 : 1897797616 : BV:32
=dst_symbol_addr.1
1 : 2558263264 { -1736704032 } : BV:32
=dst_symbol_addr.2
1 : 1897797616 : BV:32
=dst_symbol_addr.3
1 : 1679808720 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1006632956 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1006632956 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1897797616 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 1679808720 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 2558263264 { -1736704032 } : BV:32
=stack.size
1 : 1006632960 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 2558263344 { -1736703952 } : BV:32
=input.src.llvm-%A.0
1 : 2558263344 { -1736703952 } : BV:32
=input.src.llvm-%C.0
1 : 1679808800 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1006632959 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2558391263 { -1736576033 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 1897797616 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 1679808720 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 1897797616 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 2558263264 { -1736704032 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 1897797696 : BV:32
=input.src.llvm-%inc
1 : 20 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1679808720 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 1897797696 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 20 : BV:32
=input.src.llvm-%i.0
1 : 20 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1679936719 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2558263264 { -1736704032 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 1897797696 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 1679808800 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 1679808800 : BV:32
=input.src.llvm-%incdec.ptr
1 : 2558263344 { -1736703952 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 2558263344 { -1736703952 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 1897797696 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 1679808800 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1897925615 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1927647495
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 71
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1065353212 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 3218999952 { -1075967344 } : BV:32
=symbol.1
1 : 4293786112 { -1181184 } : BV:32
=symbol.2
1 : 3240084864 { -1054882432 } : BV:32
=dst_symbol_addr.1
1 : 4293786112 { -1181184 } : BV:32
=dst_symbol_addr.2
1 : 3240084864 { -1054882432 } : BV:32
=dst_symbol_addr.3
1 : 3218999952 { -1075967344 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1065353212 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1065353212 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3240084864 { -1054882432 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3218999952 { -1075967344 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4293786112 { -1181184 } : BV:32
=stack.size
1 : 1065353216 : BV:32
=input.src.llvm-%A.0
1 : 4293786240 { -1181056 } : BV:32
=input.src.llvm-%C.0
1 : 3219000080 { -1075967216 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1065353215 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4293914111 { -1053185 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3240084864 { -1054882432 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3218999952 { -1075967344 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3240084864 { -1054882432 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4293786112 { -1181184 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3218999952 { -1075967344 } : BV:32
=input.src.llvm-%B.0
1 : 3240084992 { -1054882304 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=input.src.llvm-%i.0
1 : 32 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3219127951 { -1075839345 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293786112 { -1181184 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3240084992 { -1054882304 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4293786240 { -1181056 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3219000080 { -1075967216 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3240212863 { -1054754433 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
687579920
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 71 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 144 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1065353212 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 3218999952 { -1075967344 } : BV:32
=symbol.1
1 : 4293786112 { -1181184 } : BV:32
=symbol.2
1 : 3240084864 { -1054882432 } : BV:32
=dst_symbol_addr.1
1 : 4293786112 { -1181184 } : BV:32
=dst_symbol_addr.2
1 : 3240084864 { -1054882432 } : BV:32
=dst_symbol_addr.3
1 : 3218999952 { -1075967344 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1065353212 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1065353212 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3240084864 { -1054882432 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 3218999952 { -1075967344 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4293786112 { -1181184 } : BV:32
=stack.size
1 : 1065353216 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 4293786256 { -1181040 } : BV:32
=input.src.llvm-%A.0
1 : 4293786256 { -1181040 } : BV:32
=input.src.llvm-%C.0
1 : 3219000096 { -1075967200 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1065353215 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4293914111 { -1053185 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3240084864 { -1054882432 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 3218999952 { -1075967344 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3240084864 { -1054882432 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4293786112 { -1181184 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3240085008 { -1054882288 } : BV:32
=input.src.llvm-%inc
1 : 36 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3218999952 { -1075967344 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3240085008 { -1054882288 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 36 : BV:32
=input.src.llvm-%i.0
1 : 36 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3219127951 { -1075839345 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4293786112 { -1181184 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3240085008 { -1054882288 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 3219000096 { -1075967200 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 3219000096 { -1075967200 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 4293786256 { -1181040 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4293786256 { -1181040 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3240085008 { -1054882288 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 3219000096 { -1075967200 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3240212863 { -1054754433 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
687579920
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 72
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1509818364 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2112840720 : BV:32
=symbol.1
1 : 4294781952 { -185344 } : BV:32
=symbol.2
1 : 3086886272 { -1208081024 } : BV:32
=dst_symbol_addr.1
1 : 4294781952 { -185344 } : BV:32
=dst_symbol_addr.2
1 : 3086886272 { -1208081024 } : BV:32
=dst_symbol_addr.3
1 : 2112840720 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1509818364 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1509818364 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3086886272 { -1208081024 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2112840720 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4294781952 { -185344 } : BV:32
=stack.size
1 : 1509818368 : BV:32
=input.src.llvm-%A.0
1 : 4294782208 { -185088 } : BV:32
=input.src.llvm-%C.0
1 : 2112840976 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1509818367 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294909951 { -57345 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3086886272 { -1208081024 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2112840720 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3086886272 { -1208081024 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4294781952 { -185344 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2112840720 : BV:32
=input.src.llvm-%B.0
1 : 3086886528 { -1208080768 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=input.src.llvm-%i.0
1 : 64 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2112968719 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294781952 { -185344 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3086886528 { -1208080768 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4294782208 { -185088 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2112840976 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3087014271 { -1207953025 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
335322394
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 72 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 272 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1509818364 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2112840720 : BV:32
=symbol.1
1 : 4294781952 { -185344 } : BV:32
=symbol.2
1 : 3086886272 { -1208081024 } : BV:32
=dst_symbol_addr.1
1 : 4294781952 { -185344 } : BV:32
=dst_symbol_addr.2
1 : 3086886272 { -1208081024 } : BV:32
=dst_symbol_addr.3
1 : 2112840720 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1509818364 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1509818364 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3086886272 { -1208081024 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2112840720 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4294781952 { -185344 } : BV:32
=stack.size
1 : 1509818368 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 4294782224 { -185072 } : BV:32
=input.src.llvm-%A.0
1 : 4294782224 { -185072 } : BV:32
=input.src.llvm-%C.0
1 : 2112840992 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1509818367 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294909951 { -57345 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3086886272 { -1208081024 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2112840720 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3086886272 { -1208081024 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4294781952 { -185344 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3086886544 { -1208080752 } : BV:32
=input.src.llvm-%inc
1 : 68 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2112840720 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3086886544 { -1208080752 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 68 : BV:32
=input.src.llvm-%i.0
1 : 68 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2112968719 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294781952 { -185344 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3086886544 { -1208080752 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 2112840992 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 2112840992 : BV:32
=input.src.llvm-%incdec.ptr
1 : 4294782224 { -185072 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4294782224 { -185072 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3086886544 { -1208080752 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2112840992 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3087014271 { -1207953025 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
335322394
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 73
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 503316476 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1476390672 : BV:32
=symbol.1
1 : 4294790144 { -177152 } : BV:32
=symbol.2
1 : 2147356160 : BV:32
=dst_symbol_addr.1
1 : 4294790144 { -177152 } : BV:32
=dst_symbol_addr.2
1 : 2147356160 : BV:32
=dst_symbol_addr.3
1 : 1476390672 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 503316476 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 503316476 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147356160 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 1476390672 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4294790144 { -177152 } : BV:32
=stack.size
1 : 503316480 : BV:32
=input.src.llvm-%A.0
1 : 4294790656 { -176640 } : BV:32
=input.src.llvm-%C.0
1 : 1476391184 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 503316479 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294918143 { -49153 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2147356160 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 1476390672 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2147356160 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4294790144 { -177152 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1476390672 : BV:32
=input.src.llvm-%B.0
1 : 2147356672 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=input.src.llvm-%i.0
1 : 128 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1476518671 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294790144 { -177152 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2147356672 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4294790656 { -176640 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 1476391184 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147484159 { -2147483137 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2055825325
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 73 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 528 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 503316476 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1476390672 : BV:32
=symbol.1
1 : 4294790144 { -177152 } : BV:32
=symbol.2
1 : 2147356160 : BV:32
=dst_symbol_addr.1
1 : 4294790144 { -177152 } : BV:32
=dst_symbol_addr.2
1 : 2147356160 : BV:32
=dst_symbol_addr.3
1 : 1476390672 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 503316476 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 503316476 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2147356160 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 1476390672 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4294790144 { -177152 } : BV:32
=stack.size
1 : 503316480 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 4294790672 { -176624 } : BV:32
=input.src.llvm-%A.0
1 : 4294790672 { -176624 } : BV:32
=input.src.llvm-%C.0
1 : 1476391200 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 503316479 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294918143 { -49153 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2147356160 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 1476390672 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2147356160 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4294790144 { -177152 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 2147356688 : BV:32
=input.src.llvm-%inc
1 : 132 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1476390672 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 2147356688 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 132 : BV:32
=input.src.llvm-%i.0
1 : 132 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1476518671 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294790144 { -177152 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2147356688 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 1476391200 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 1476391200 : BV:32
=input.src.llvm-%incdec.ptr
1 : 4294790672 { -176624 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4294790672 { -176624 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 2147356688 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 1476391200 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2147484159 { -2147483137 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2055825325
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 74
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1996423164 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2147414288 : BV:32
=symbol.1
1 : 4294810624 { -156672 } : BV:32
=symbol.2
1 : 3221224448 { -1073742848 } : BV:32
=dst_symbol_addr.1
1 : 4294810624 { -156672 } : BV:32
=dst_symbol_addr.2
1 : 3221224448 { -1073742848 } : BV:32
=dst_symbol_addr.3
1 : 2147414288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1996423164 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1996423164 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221224448 { -1073742848 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2147414288 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4294810624 { -156672 } : BV:32
=stack.size
1 : 1996423168 : BV:32
=input.src.llvm-%A.0
1 : 4294811648 { -155648 } : BV:32
=input.src.llvm-%C.0
1 : 2147415312 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1996423167 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294938623 { -28673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3221224448 { -1073742848 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2147414288 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3221224448 { -1073742848 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4294810624 { -156672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147414288 : BV:32
=input.src.llvm-%B.0
1 : 3221225472 { -1073741824 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=input.src.llvm-%i.0
1 : 256 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147542287 { -2147425009 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294810624 { -156672 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3221225472 { -1073741824 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4294811648 { -155648 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2147415312 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221352447 { -1073614849 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
738633193
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 74 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1040 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1996423164 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2147414288 : BV:32
=symbol.1
1 : 4294810624 { -156672 } : BV:32
=symbol.2
1 : 3221224448 { -1073742848 } : BV:32
=dst_symbol_addr.1
1 : 4294810624 { -156672 } : BV:32
=dst_symbol_addr.2
1 : 3221224448 { -1073742848 } : BV:32
=dst_symbol_addr.3
1 : 2147414288 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1996423164 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1996423164 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3221224448 { -1073742848 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2147414288 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4294810624 { -156672 } : BV:32
=stack.size
1 : 1996423168 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 4294811664 { -155632 } : BV:32
=input.src.llvm-%A.0
1 : 4294811664 { -155632 } : BV:32
=input.src.llvm-%C.0
1 : 2147415328 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1996423167 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294938623 { -28673 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3221224448 { -1073742848 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2147414288 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3221224448 { -1073742848 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4294810624 { -156672 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3221225488 { -1073741808 } : BV:32
=input.src.llvm-%inc
1 : 260 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2147414288 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3221225488 { -1073741808 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 260 : BV:32
=input.src.llvm-%i.0
1 : 260 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2147542287 { -2147425009 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294810624 { -156672 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3221225488 { -1073741808 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 2147415328 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 2147415328 : BV:32
=input.src.llvm-%incdec.ptr
1 : 4294811664 { -155632 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4294811664 { -155632 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3221225488 { -1073741808 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2147415328 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3221352447 { -1073614849 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
738633193
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 75
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147483644 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2679078160 { -1615889136 } : BV:32
=symbol.1
1 : 3221076592 { -1073890704 } : BV:32
=symbol.2
1 : 3136226448 { -1158740848 } : BV:32
=dst_symbol_addr.1
1 : 3221076592 { -1073890704 } : BV:32
=dst_symbol_addr.2
1 : 3136226448 { -1158740848 } : BV:32
=dst_symbol_addr.3
1 : 2679078160 { -1615889136 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147483644 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147483644 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3136226448 { -1158740848 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2679078160 { -1615889136 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3221076592 { -1073890704 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%A.0
1 : 3221078640 { -1073888656 } : BV:32
=input.src.llvm-%C.0
1 : 2679080208 { -1615887088 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2147483647 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3221204591 { -1073762705 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3136226448 { -1158740848 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2679078160 { -1615889136 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3136226448 { -1158740848 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3221076592 { -1073890704 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2679078160 { -1615889136 } : BV:32
=input.src.llvm-%B.0
1 : 3136228496 { -1158738800 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=input.src.llvm-%i.0
1 : 512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2679206159 { -1615761137 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221076592 { -1073890704 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3136228496 { -1158738800 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3221078640 { -1073888656 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2679080208 { -1615887088 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3136354447 { -1158612849 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1618749117
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 75 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2064 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2147483644 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2679078160 { -1615889136 } : BV:32
=symbol.1
1 : 3221076592 { -1073890704 } : BV:32
=symbol.2
1 : 3136226448 { -1158740848 } : BV:32
=dst_symbol_addr.1
1 : 3221076592 { -1073890704 } : BV:32
=dst_symbol_addr.2
1 : 3136226448 { -1158740848 } : BV:32
=dst_symbol_addr.3
1 : 2679078160 { -1615889136 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2147483644 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2147483644 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3136226448 { -1158740848 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2679078160 { -1615889136 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3221076592 { -1073890704 } : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3221078656 { -1073888640 } : BV:32
=input.src.llvm-%A.0
1 : 3221078656 { -1073888640 } : BV:32
=input.src.llvm-%C.0
1 : 2679080224 { -1615887072 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 2147483647 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3221204591 { -1073762705 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 3136226448 { -1158740848 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2679078160 { -1615889136 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 3136226448 { -1158740848 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3221076592 { -1073890704 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 3136228512 { -1158738784 } : BV:32
=input.src.llvm-%inc
1 : 516 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2679078160 { -1615889136 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 3136228512 { -1158738784 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 516 : BV:32
=input.src.llvm-%i.0
1 : 516 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2679206159 { -1615761137 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221076592 { -1073890704 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 3136228512 { -1158738784 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 2679080224 { -1615887072 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 2679080224 { -1615887072 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3221078656 { -1073888640 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3221078656 { -1073888640 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 3136228512 { -1158738784 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2679080224 { -1615887072 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 3136354447 { -1158612849 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1618749117
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 76
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 941621244 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2269738976 { -2025228320 } : BV:32
=symbol.1
1 : 3221208064 { -1073759232 } : BV:32
=symbol.2
1 : 2752988288 { -1541979008 } : BV:32
=dst_symbol_addr.1
1 : 3221208064 { -1073759232 } : BV:32
=dst_symbol_addr.2
1 : 2752988288 { -1541979008 } : BV:32
=dst_symbol_addr.3
1 : 2269738976 { -2025228320 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 941621244 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 941621244 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2752988288 { -1541979008 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2269738976 { -2025228320 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3221208064 { -1073759232 } : BV:32
=stack.size
1 : 941621248 : BV:32
=input.src.llvm-%A.0
1 : 3221212160 { -1073755136 } : BV:32
=input.src.llvm-%C.0
1 : 2269743072 { -2025224224 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 941621247 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3221336063 { -1073631233 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2752988288 { -1541979008 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2269738976 { -2025228320 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2752988288 { -1541979008 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3221208064 { -1073759232 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2269738976 { -2025228320 } : BV:32
=input.src.llvm-%B.0
1 : 2752992384 { -1541974912 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=input.src.llvm-%i.0
1 : 1024 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2269866975 { -2025100321 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221208064 { -1073759232 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2752992384 { -1541974912 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3221212160 { -1073755136 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2269743072 { -2025224224 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2753116287 { -1541851009 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
998318550
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 76 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 941621244 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2269738976 { -2025228320 } : BV:32
=symbol.1
1 : 3221208064 { -1073759232 } : BV:32
=symbol.2
1 : 2752988288 { -1541979008 } : BV:32
=dst_symbol_addr.1
1 : 3221208064 { -1073759232 } : BV:32
=dst_symbol_addr.2
1 : 2752988288 { -1541979008 } : BV:32
=dst_symbol_addr.3
1 : 2269738976 { -2025228320 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 941621244 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 941621244 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2752988288 { -1541979008 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2269738976 { -2025228320 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3221208064 { -1073759232 } : BV:32
=stack.size
1 : 941621248 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3221212176 { -1073755120 } : BV:32
=input.src.llvm-%A.0
1 : 3221212176 { -1073755120 } : BV:32
=input.src.llvm-%C.0
1 : 2269743088 { -2025224208 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 941621247 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3221336063 { -1073631233 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2752988288 { -1541979008 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2269738976 { -2025228320 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2752988288 { -1541979008 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3221208064 { -1073759232 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 2752992400 { -1541974896 } : BV:32
=input.src.llvm-%inc
1 : 1028 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2269738976 { -2025228320 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 2752992400 { -1541974896 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 1028 : BV:32
=input.src.llvm-%i.0
1 : 1028 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2269866975 { -2025100321 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221208064 { -1073759232 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2752992400 { -1541974896 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 2269743088 { -2025224208 } : BV:32
=input.src.llvm-%incdec.ptr2
1 : 2269743088 { -2025224208 } : BV:32
=input.src.llvm-%incdec.ptr
1 : 3221212176 { -1073755120 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3221212176 { -1073755120 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 2752992400 { -1541974896 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2269743088 { -2025224208 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2753116287 { -1541851009 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
998318550
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 77
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 400556028 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 503185680 : BV:32
=symbol.1
1 : 2147252352 : BV:32
=symbol.2
1 : 1665047040 : BV:32
=dst_symbol_addr.1
1 : 2147252352 : BV:32
=dst_symbol_addr.2
1 : 1665047040 : BV:32
=dst_symbol_addr.3
1 : 503185680 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 400556028 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 400556028 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1665047040 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 503185680 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 2147252352 : BV:32
=stack.size
1 : 400556032 : BV:32
=input.src.llvm-%A.0
1 : 2147260544 : BV:32
=input.src.llvm-%C.0
1 : 503193872 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 400556031 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2147380351 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 1665047040 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 503185680 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 1665047040 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 2147252352 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 503185680 : BV:32
=input.src.llvm-%B.0
1 : 1665055232 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=input.src.llvm-%i.0
1 : 2048 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 503313679 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147252352 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 1665055232 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 2147260544 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 503193872 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1665175039 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
558188317
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 77 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8208 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 400556028 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 503185680 : BV:32
=symbol.1
1 : 2147252352 : BV:32
=symbol.2
1 : 1665047040 : BV:32
=dst_symbol_addr.1
1 : 2147252352 : BV:32
=dst_symbol_addr.2
1 : 1665047040 : BV:32
=dst_symbol_addr.3
1 : 503185680 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 400556028 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 400556028 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1665047040 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 503185680 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 2147252352 : BV:32
=stack.size
1 : 400556032 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 2147260560 : BV:32
=input.src.llvm-%A.0
1 : 2147260560 : BV:32
=input.src.llvm-%C.0
1 : 503193888 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 400556031 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 2147380351 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 1665047040 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 503185680 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 1665047040 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 2147252352 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 1665055248 : BV:32
=input.src.llvm-%inc
1 : 2052 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 503185680 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 1665055248 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 2052 : BV:32
=input.src.llvm-%i.0
1 : 2052 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 503313679 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147252352 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 1665055248 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 503193888 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 503193888 : BV:32
=input.src.llvm-%incdec.ptr
1 : 2147260560 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 2147260560 : BV:32
=input.src.llvm-%incdec.ptr1
1 : 1665055248 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 503193888 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1665175039 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
558188317
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 78
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073741820 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 2134821872 : BV:32
=symbol.1
1 : 4294834176 { -133120 } : BV:32
=symbol.2
1 : 2194598688 { -2100368608 } : BV:32
=dst_symbol_addr.1
1 : 4294834176 { -133120 } : BV:32
=dst_symbol_addr.2
1 : 2194598688 { -2100368608 } : BV:32
=dst_symbol_addr.3
1 : 2134821872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073741820 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1073741820 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2194598688 { -2100368608 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2134821872 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4294834176 { -133120 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=input.src.llvm-%A.0
1 : 4294850560 { -116736 } : BV:32
=input.src.llvm-%C.0
1 : 2134838256 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1073741823 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294962175 { -5121 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2194598688 { -2100368608 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2134821872 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2194598688 { -2100368608 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4294834176 { -133120 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2134821872 : BV:32
=input.src.llvm-%B.0
1 : 2194615072 { -2100352224 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=input.src.llvm-%i.0
1 : 4096 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2134949871 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294834176 { -133120 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2194615072 { -2100352224 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4294850560 { -116736 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2134838256 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2194726687 { -2100240609 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1029560978
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 78 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16400 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073741820 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 2134821872 : BV:32
=symbol.1
1 : 4294834176 { -133120 } : BV:32
=symbol.2
1 : 2194598688 { -2100368608 } : BV:32
=dst_symbol_addr.1
1 : 4294834176 { -133120 } : BV:32
=dst_symbol_addr.2
1 : 2194598688 { -2100368608 } : BV:32
=dst_symbol_addr.3
1 : 2134821872 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073741820 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1073741820 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2194598688 { -2100368608 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 2134821872 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 4294834176 { -133120 } : BV:32
=stack.size
1 : 1073741824 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 4294850576 { -116720 } : BV:32
=input.src.llvm-%A.0
1 : 4294850576 { -116720 } : BV:32
=input.src.llvm-%C.0
1 : 2134838272 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1073741823 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 4294962175 { -5121 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2194598688 { -2100368608 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 2134821872 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2194598688 { -2100368608 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 4294834176 { -133120 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 2194615088 { -2100352208 } : BV:32
=input.src.llvm-%inc
1 : 4100 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2134821872 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 2194615088 { -2100352208 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 4100 : BV:32
=input.src.llvm-%i.0
1 : 4100 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2134949871 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294834176 { -133120 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2194615088 { -2100352208 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 2134838272 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 2134838272 : BV:32
=input.src.llvm-%incdec.ptr
1 : 4294850576 { -116720 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 4294850576 { -116720 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 2194615088 { -2100352208 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 2134838272 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2194726687 { -2100240609 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1029560978
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 79
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073610748 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1308462352 : BV:32
=symbol.1
1 : 3221159936 { -1073807360 } : BV:32
=symbol.2
1 : 1442734352 : BV:32
=dst_symbol_addr.1
1 : 3221159936 { -1073807360 } : BV:32
=dst_symbol_addr.2
1 : 1442734352 : BV:32
=dst_symbol_addr.3
1 : 1308462352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073610748 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1073610748 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1442734352 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 1308462352 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3221159936 { -1073807360 } : BV:32
=stack.size
1 : 1073610752 : BV:32
=input.src.llvm-%A.0
1 : 3221192704 { -1073774592 } : BV:32
=input.src.llvm-%C.0
1 : 1308495120 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1073610751 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3221287935 { -1073679361 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 1442734352 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 1308462352 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 1442734352 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3221159936 { -1073807360 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1308462352 : BV:32
=input.src.llvm-%B.0
1 : 1442767120 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=input.src.llvm-%i.0
1 : 8192 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1308590351 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221159936 { -1073807360 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 1442767120 : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3221192704 { -1073774592 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 1308495120 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1442862351 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1079329225
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 79 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32784 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1073610748 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1308462352 : BV:32
=symbol.1
1 : 3221159936 { -1073807360 } : BV:32
=symbol.2
1 : 1442734352 : BV:32
=dst_symbol_addr.1
1 : 3221159936 { -1073807360 } : BV:32
=dst_symbol_addr.2
1 : 1442734352 : BV:32
=dst_symbol_addr.3
1 : 1308462352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1073610748 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1073610748 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1442734352 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 1308462352 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3221159936 { -1073807360 } : BV:32
=stack.size
1 : 1073610752 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3221192720 { -1073774576 } : BV:32
=input.src.llvm-%A.0
1 : 3221192720 { -1073774576 } : BV:32
=input.src.llvm-%C.0
1 : 1308495136 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1073610751 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3221287935 { -1073679361 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 1442734352 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 1308462352 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 1442734352 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3221159936 { -1073807360 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 1442767136 : BV:32
=input.src.llvm-%inc
1 : 8196 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1308462352 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 1442767136 : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 8196 : BV:32
=input.src.llvm-%i.0
1 : 8196 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1308590351 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3221159936 { -1073807360 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 1442767136 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 1308495136 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 1308495136 : BV:32
=input.src.llvm-%incdec.ptr
1 : 3221192720 { -1073774576 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3221192720 { -1073774576 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 1442767136 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 1308495136 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1442862351 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1079329225
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 80
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1677688828 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 1699746960 : BV:32
=symbol.1
1 : 3067741952 { -1227225344 } : BV:32
=symbol.2
1 : 2595225600 { -1699741696 } : BV:32
=dst_symbol_addr.1
1 : 3067741952 { -1227225344 } : BV:32
=dst_symbol_addr.2
1 : 2595225600 { -1699741696 } : BV:32
=dst_symbol_addr.3
1 : 1699746960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1677688828 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1677688828 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2595225600 { -1699741696 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 1699746960 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3067741952 { -1227225344 } : BV:32
=stack.size
1 : 1677688832 : BV:32
=input.src.llvm-%A.0
1 : 3067807488 { -1227159808 } : BV:32
=input.src.llvm-%C.0
1 : 1699812496 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1677688831 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3067869951 { -1227097345 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2595225600 { -1699741696 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 1699746960 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2595225600 { -1699741696 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3067741952 { -1227225344 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1699746960 : BV:32
=input.src.llvm-%B.0
1 : 2595291136 { -1699676160 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=input.src.llvm-%i.0
1 : 16384 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1699874959 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3067741952 { -1227225344 } : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2595291136 { -1699676160 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3067807488 { -1227159808 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 1699812496 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2595353599 { -1699613697 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1478104712
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 80 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65552 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1677688828 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 1699746960 : BV:32
=symbol.1
1 : 3067741952 { -1227225344 } : BV:32
=symbol.2
1 : 2595225600 { -1699741696 } : BV:32
=dst_symbol_addr.1
1 : 3067741952 { -1227225344 } : BV:32
=dst_symbol_addr.2
1 : 2595225600 { -1699741696 } : BV:32
=dst_symbol_addr.3
1 : 1699746960 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1677688828 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1677688828 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2595225600 { -1699741696 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 1699746960 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3067741952 { -1227225344 } : BV:32
=stack.size
1 : 1677688832 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3067807504 { -1227159792 } : BV:32
=input.src.llvm-%A.0
1 : 3067807504 { -1227159792 } : BV:32
=input.src.llvm-%C.0
1 : 1699812512 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 1677688831 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3067869951 { -1227097345 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2595225600 { -1699741696 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 1699746960 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2595225600 { -1699741696 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3067741952 { -1227225344 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 2595291152 { -1699676144 } : BV:32
=input.src.llvm-%inc
1 : 16388 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1699746960 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 2595291152 { -1699676144 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 16388 : BV:32
=input.src.llvm-%i.0
1 : 16388 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1699874959 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3067741952 { -1227225344 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2595291152 { -1699676144 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 1699812512 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 1699812512 : BV:32
=input.src.llvm-%incdec.ptr
1 : 3067807504 { -1227159792 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3067807504 { -1227159792 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 2595291152 { -1699676144 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 1699812512 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2595353599 { -1699613697 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1478104712
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 81
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L1%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 130547708 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.6.0
1 : 0 : BV:32
=symbol.3
1 : 132090928 : BV:32
=symbol.1
1 : 3220658192 { -1074309104 } : BV:32
=symbol.2
1 : 2232093712 { -2062873584 } : BV:32
=dst_symbol_addr.1
1 : 3220658192 { -1074309104 } : BV:32
=dst_symbol_addr.2
1 : 2232093712 { -2062873584 } : BV:32
=dst_symbol_addr.3
1 : 132090928 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 130547708 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 130547708 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2232093712 { -2062873584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 132090928 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3220658192 { -1074309104 } : BV:32
=stack.size
1 : 130547712 : BV:32
=input.src.llvm-%A.0
1 : 3220786160 { -1074181136 } : BV:32
=input.src.llvm-%C.0
1 : 132218896 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 130547711 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3220786191 { -1074181105 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2232093712 { -2062873584 } : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 132090928 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2232093712 { -2062873584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3220658192 { -1074309104 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 132090928 : BV:32
=input.src.llvm-%B.0
1 : 2232221680 { -2062745616 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 132218927 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3220658192 { -1074309104 } : BV:32
=input.src.llvm-%hidden-reg
1 : 0 : BV:32
=input.src.llvm-callee-save.0
1 : 0 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2232221680 { -2062745616 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3220786160 { -1074181136 } : BV:32
=input.src.llvm-callee-save.1
1 : 0 : BV:32
=input.src.llvm-callee-save.2
1 : 0 : BV:32
=input.src.llvm-callee-save.3
1 : 0 : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 132218896 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2232221711 { -2062745585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1962888786
=counter_example_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.graph_edge_composition
(Lfor.body%1%1_L1%1%0=>Lfor.body%1%1_L1%1%0)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge: Lfor.body%1%1_L1%1%0 => Lfor.body%1%1_L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.2 : MEMLABEL
3 : input.src.llvm-%A.0 : BV:32
4 : mlvar.llvm.s1351.0 : MEMLABEL
5 : input.src.llvm-%B.0 : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 4, 5, 6, 7) : BV:32
9 : mlvar.llvm.s1351.1 : MEMLABEL
10 : input.src.llvm-%C.0 : BV:32
11 : select(1, 9, 10, 6, 7) : BV:32
12 : bvadd(8, 11) : BV:32
13 : store(1, 2, 3, 12, 6, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%C.0.phi.tmpvar
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0.phi.tmpvar
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%incdec.ptr
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : mlvar.llvm.s1351.1 : MEMLABEL
8 : input.src.llvm-%C.0 : BV:32
9 : select(1, 7, 8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
=src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.s1351.1 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 1 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 1 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%incdec.ptr1
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%C.0
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%incdec.ptr2
1 : input.src.llvm-%C.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%A.0.phi.tmpvar
1 : input.src.llvm-%A.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=src.llvm-%B.0
1 : input.src.llvm-%B.0 : BV:32
2 : 0 : BV:32
3 : 1 : BV:32
4 : 4 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : 1 : BV:32
3 : 0 : BV:32
4 : bvslt(2, 3) : BOOL
5 : 32 : INT
6 : bvsign_ext(2, 5) : BV:64
7 : 4 : BV:32
8 : bvzero_ext(7, 5) : BV:64
9 : bvmul(6, 8) : BV:64
10 : 63 : INT
11 : bvextract(9, 10, 5) : BV:32
12 : 4294967295 { -1 } : BV:32
13 : eq(11, 12) : BOOL
14 : eq(11, 3) : BOOL
15 : ite(4, 13, 14) : BOOL
16 : 4 : INT
17 : isindexforsize(15, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
21 : implies(1, 20) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 0 : BV:32
4 : 1 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : bvadd(2, 7) : BV:32
9 : isgepoffset(8, 6) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
13 : implies(1, 12) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%C.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : input.src.llvm-%B.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : input.src.llvm-%A.0 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((((  %0 = load i32, i32* %B.0, align 4, !dbg !26*  %0 = load i32, i32* %B.0, align 4, !dbg !26)*((  %1 = load i32, i32* %C.0, align 4, !dbg !28*  %1 = load i32, i32* %C.0, align 4, !dbg !28)*  %add = add nsw i32 %0, %1, !dbg !29))*  store i32 %add, i32* %A.0, align 4, !dbg !30)*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*(  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31*  %incdec.ptr = getelementptr inbounds i32, i32* %A.0, i32 1, !dbg !31)))*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*(  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32*  %incdec.ptr1 = getelementptr inbounds i32, i32* %B.0, i32 1, !dbg !32)))*((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*(((  %incdec.ptr2 = getelementptr inbounds i32, i32* %C.0, i32 1, !dbg !33*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)*  br label %for.inc, !dbg !34)))*(((((((((  %inc = add nsw i32 %i.0, 1, !dbg !35*  br label %for.cond, !dbg !36, !llvm.loop !37)*  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !21)*  %C.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @c, i32 0, i32 0), %entry ], [ %incdec.ptr2, %for.inc ], !dbg !16)*  %B.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @b, i32 0, i32 0), %entry ], [ %incdec.ptr1, %for.inc ], !dbg !16)*(  %A.0 = phi i32* [ getelementptr inbounds ([32000 x i32], [32000 x i32]* @a, i32 0, i32 0), %entry ], [ %incdec.ptr, %for.inc ], !dbg !16*  br label %for.cond, !dbg !36, !llvm.loop !37))*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*  br label %for.cond, !dbg !36, !llvm.loop !37)*(  br label %for.cond, !dbg !36, !llvm.loop !37*  br label %for.cond, !dbg !36, !llvm.loop !37))))
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !23)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !25*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)*  br i1 %cmp, label %for.body, label %for.end, !dbg !25)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.ec from L1%1%0 to L1%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L1%1%0=>L6%1%1)*(L6%1%1=>L1%1%0))
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge: L1%1%0 => L6%1%1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.0 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.3 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : mlvar.dst.1 : MEMLABEL
13 : dst_symbol_addr.2 : BV:32
14 : bvadd(3, 13) : BV:32
15 : select(1, 12, 14, 6, 7) : BV:128
16 : bvextract(15, 9, 10) : BV:32
17 : bvadd(11, 16) : BV:32
18 : 95 : INT
19 : 64 : INT
20 : bvextract(8, 18, 19) : BV:32
21 : bvextract(15, 18, 19) : BV:32
22 : bvadd(20, 21) : BV:32
23 : bvconcat(17, 22) : BV:64
24 : 63 : INT
25 : 32 : INT
26 : bvextract(8, 24, 25) : BV:32
27 : bvextract(15, 24, 25) : BV:32
28 : bvadd(26, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(8, 29, 30) : BV:32
32 : bvextract(15, 29, 30) : BV:32
33 : bvadd(31, 32) : BV:32
34 : bvconcat(28, 33) : BV:64
35 : bvconcat(23, 34) : BV:128
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.2 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.1 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.0 : MEMLABEL
21 : dst_symbol_addr.3 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : mlvar.dst.1 : MEMLABEL
30 : dst_symbol_addr.2 : BV:32
31 : bvadd(3, 30) : BV:32
32 : select(1, 29, 31, 23, 24) : BV:128
33 : bvextract(32, 26, 27) : BV:32
34 : bvadd(28, 33) : BV:32
35 : 95 : INT
36 : 64 : INT
37 : bvextract(25, 35, 36) : BV:32
38 : bvextract(32, 35, 36) : BV:32
39 : bvadd(37, 38) : BV:32
40 : bvconcat(34, 39) : BV:64
41 : 63 : INT
42 : 32 : INT
43 : bvextract(25, 41, 42) : BV:32
44 : bvextract(32, 41, 42) : BV:32
45 : bvadd(43, 44) : BV:32
46 : bvextract(25, 9, 10) : BV:32
47 : bvextract(32, 9, 10) : BV:32
48 : bvadd(46, 47) : BV:32
49 : bvconcat(45, 48) : BV:64
50 : bvconcat(40, 49) : BV:128
51 : store(1, 2, 19, 50, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge: L6%1%1 => L1%1%0
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L1%1%0 nodece 81 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 130547708 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=symbol.3
1 : 132090928 : BV:32
=symbol.1
1 : 3220658192 { -1074309104 } : BV:32
=symbol.2
1 : 2232093712 { -2062873584 } : BV:32
=dst_symbol_addr.1
1 : 3220658192 { -1074309104 } : BV:32
=dst_symbol_addr.2
1 : 2232093712 { -2062873584 } : BV:32
=dst_symbol_addr.3
1 : 132090928 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.1.total_offset
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 130547708 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 130547708 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2232093712 { -2062873584 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.gepoffset.3.total_offset
1 : 132090928 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.1.total_offset
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.2.total_offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.gepoffset.3.total_offset
1 : 3220658192 { -1074309104 } : BV:32
=stack.size
1 : 130547712 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.gepoffset.2.total_offset
1 : 3220786176 { -1074181120 } : BV:32
=input.src.llvm-%A.0
1 : 3220786176 { -1074181120 } : BV:32
=input.src.llvm-%C.0
1 : 132218912 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=memlabel-mem-esp_end
1 : 130547711 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.1.0_end
1 : 3220786191 { -1074181105 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.gepoffset.3.total_offset
1 : 2232093712 { -2062873584 } : BV:32
=input.src.llvm-%7822ae49cde6773c3e3e406fbae65b.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.constexpr
1 : 132090928 : BV:32
=input.src.llvm-%f342fa1be61720c974212c9fbb8e19e.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.constexpr
1 : 2232093712 { -2062873584 } : BV:32
=input.src.llvm-%f576f033203fafb7b4bedac5bced44fd.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.constexpr
1 : 3220658192 { -1074309104 } : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%34897d1be2ff8615f3e2aa6ebfc636a.intermediate.gepoffset.2.offset
1 : 0 : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.intermediate.gepoffset.1.offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%bfe778dfec9aec5fecd48f4642548f5.gepoffset.2.total_offset
1 : 2232221696 { -2062745600 } : BV:32
=input.src.llvm-%inc
1 : 31996 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 132090928 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%B.0
1 : 2232221696 { -2062745600 } : BV:32
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 132218927 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3220658192 { -1074309104 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.1.total_offset
1 : 4 : BV:32
=input.src.llvm-%B.0.phi.tmpvar
1 : 2232221696 { -2062745600 } : BV:32
=input.src.llvm-%55d1824ab5568bbefac12de71df28.gepoffset.2.total_offset
1 : 132218912 : BV:32
=input.src.llvm-%incdec.ptr2
1 : 132218912 : BV:32
=input.src.llvm-%incdec.ptr
1 : 3220786176 { -1074181120 } : BV:32
=input.src.llvm-%A.0.phi.tmpvar
1 : 3220786176 { -1074181120 } : BV:32
=input.src.llvm-%incdec.ptr1
1 : 2232221696 { -2062745600 } : BV:32
=input.src.llvm-%C.0.phi.tmpvar
1 : 132218912 : BV:32
=memlabel-mem-symbol.2.0_end
1 : 2232221711 { -2062745585 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1962888786
=counter_example_end
=graph_with_ce done
=graph_with_guessing begin
=Invariant states
=Invariant state at node L0%0%1_L0%0%1:
=pc L0%0%1_L0%0%1 invariant_state
is_top 0
is_stable 1
=pc L0%0%1_L0%0%1 invariant_state done
=Invariant state at node Lfor.body%1%1_L1%1%0:
=pc Lfor.body%1%1_L1%1%0 invariant_state
is_top 0
is_stable 1
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr_group_type ARR_EQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr expr 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 0 type arr predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr_group_type BV_EQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 0
1 : symbol.1 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 1
1 : symbol.2 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 2
1 : symbol.3 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 3
1 : retaddr_const : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 4
1 : input.src.llvm-%A.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 5
1 : input.src.llvm-%B.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 6
1 : input.src.llvm-%C.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 7
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 8
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 9
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 10
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 11
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 12
1 : input.src.llvm-%A.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 13
1 : input.src.llvm-%B.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 14
1 : input.src.llvm-%C.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 15
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : 4 : BV:32
4 : input.src.llvm-%B.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 16
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : 4 : BV:32
4 : input.src.llvm-%C.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 17
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 18
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 8 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 19
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : input.src.llvm-%B.0 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 20
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%C.0 : BV:32
4 : 12 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 4 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 21
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 22
1 : input.src.llvm-%i.0 : BV:32
2 : 2 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 23
1 : input.src.llvm-%i.0 : BV:32
2 : 3 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 24
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 25
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 26
1 : input.dst.exreg.0.6 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 27
1 : input.dst.exreg.0.7 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 28
1 : input.dst.exreg.0.3 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 29
1 : input.dst.exreg.0.5 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 30
1 : input.dst.exreg.0.4 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 31
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv expr 32
1 : input.dst.esp.L0%1%1 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 0
=Comment
linear2-32-free_var_idx.32
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.esp.L0%1%1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 1
=Comment
linear2-32-free_var_idx.31
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 2
=Comment
linear2-32-free_var_idx.25
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : bvmul(1, 2) : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 3
=Comment
linear2-32-free_var_idx.23
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 3 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 4
=Comment
linear2-32-free_var_idx.22
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 2 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 5
=Comment
linear2-4-free_var_idx.0
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : symbol.3 : BV:32
7 : bvextract(6, 2, 3) : BV:4
8 : 14 { -2 } : BV:4
9 : bvmul(7, 8) : BV:4
10 : bvadd(5, 9) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 6
=Comment
linear3-32-free_var_idx.1
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%B.0 : BV:32
2 : symbol.2 : BV:32
3 : bvneg(2) : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4294967292 { -4 } : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 3, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 7
=Comment
linear1-4-free_var_idx.2
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 8
=Comment
linear1-2-free_var_idx.8
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:2
5 : bvneg(4) : BV:2
=RhsExpr
1 : 0 : BV:2
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 9
=Comment
linear2-32-free_var_idx.21
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 10
=Comment
linear3-32-free_var_idx.4
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%A.0 : BV:32
3 : bvneg(2) : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 3, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 11
=Comment
linear5-12-free_var_idx.30
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4092 { -4 } : BV:12
2 : 2560 { -1536 } : BV:12
3 : symbol.3 : BV:32
4 : 11 : INT
5 : 0 : INT
6 : bvextract(3, 4, 5) : BV:12
7 : bvmul(2, 6) : BV:12
8 : symbol.1 : BV:32
9 : bvextract(8, 4, 5) : BV:12
10 : 3584 { -512 } : BV:12
11 : bvmul(9, 10) : BV:12
12 : input.src.llvm-%B.0 : BV:32
13 : bvextract(12, 4, 5) : BV:12
14 : 1280 : BV:12
15 : bvmul(13, 14) : BV:12
16 : 3072 { -1024 } : BV:12
17 : input.src.llvm-%i.0 : BV:32
18 : bvextract(17, 4, 5) : BV:12
19 : bvmul(16, 18) : BV:12
20 : bvadd(1, 7, 11, 15, 19) : BV:12
=RhsExpr
1 : input.dst.exreg.0.4 : BV:32
2 : 11 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:12
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 12
=Comment
linear4-4-free_var_idx.5
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : 4 : BV:4
6 : bvmul(4, 5) : BV:4
7 : input.src.llvm-%B.0 : BV:32
8 : bvextract(7, 2, 3) : BV:4
9 : bvneg(8) : BV:4
10 : symbol.3 : BV:32
11 : bvextract(10, 2, 3) : BV:4
12 : 8 { -8 } : BV:4
13 : bvmul(11, 12) : BV:4
14 : symbol.1 : BV:32
15 : bvextract(14, 2, 3) : BV:4
16 : 14 { -2 } : BV:4
17 : bvmul(15, 16) : BV:4
18 : bvadd(6, 9, 13, 17) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 13
=Comment
linear3-32-free_var_idx.6
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvneg(2) : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 3, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 14
=Comment
linear2-32-free_var_idx.9
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : input.src.llvm-%i.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 15
=Comment
linear1-32-free_var_idx.7
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BV:32
2 : 0 : BV:31
3 : input.src.llvm-%cmp : BOOL
4 : bool_to_bv(3) : BV:1
5 : bvconcat(2, 4) : BV:32
6 : bvneg(5) : BV:32
7 : bvadd(1, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 16
=Comment
linear2-32-free_var_idx.14
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%C.0 : BV:32
2 : input.src.llvm-%C.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 17
=Comment
linear2-32-free_var_idx.12
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%A.0 : BV:32
2 : input.src.llvm-%A.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv pred 18
=Comment
linear2-32-free_var_idx.13
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%B.0 : BV:32
2 : input.src.llvm-%B.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 1 type bv predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose expr 0
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 1
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose pred 2
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 2 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose expr 0
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 1
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose pred 2
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 3 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr_group_type HOUDINI
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 0
1 : 1 : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 1
1 : input.src.llvm-%B.0 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.2.0 : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 2
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0 : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 3
1 : input.src.llvm-%C.0 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.3.0 : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 4
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.3.0 : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 5
1 : input.src.llvm-%B.0 : BV:32
2 : 8 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0 : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 6
1 : input.src.llvm-%C.0 : BV:32
2 : 8 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.3.0 : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 7
1 : input.src.llvm-%B.0 : BV:32
2 : 12 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0 : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini expr 8
1 : input.src.llvm-%C.0 : BV:32
2 : 12 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.3.0 : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 0
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%C.0 : BV:32
2 : 12 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.3.0 : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 1
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%B.0 : BV:32
2 : 12 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0 : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 2
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%C.0 : BV:32
2 : 8 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.3.0 : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 3
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%B.0 : BV:32
2 : 8 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0 : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 4
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4 : BV:32
2 : input.src.llvm-%C.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.3.0 : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 5
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4 : BV:32
2 : input.src.llvm-%B.0 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 4 : INT
5 : memlabel-mem-symbol.2.0 : MEMLABEL
6 : ismemlabel(3, 4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 6
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%B.0 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.2.0 : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 7
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%C.0 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.3.0 : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini pred 8
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L1%1%0 invariant_state_eqclass 4 type houdini predicate_set done
=pc Lfor.body%1%1_L1%1%0 invariant_state done
=Invariant state at node E0%0%1_E0%0%1:
=pc E0%0%1_E0%0%1 invariant_state
is_top 0
is_stable 1
=pc E0%0%1_E0%0%1 invariant_state done
=graph_with_guessing done
=corr_graph_done
