=FunctionName: vpvts
=result: 1
=corr_graph vpvts
=src_tfg
=TFG_LLVM llvm.vpvts:
=TFG:
=Nodes: L0%0%1 Lfor.cond%1%0 Lfor.cond%2%1 Lfor.body%1%1 Lfor.end%1%1 E0%0%1
=Edges:
Lfor.end%1%1 => E0%0%1
Lfor.cond%2%1 => Lfor.body%1%1
Lfor.cond%2%1 => Lfor.end%1%1
L0%0%1 => Lfor.cond%1%0
Lfor.cond%1%0 => Lfor.cond%2%1
Lfor.body%1%1 => Lfor.cond%1%0
=graph done
=Node outputs: E0%0%1
=Output: src.llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: symbol.1.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : 0 : BV:32
=Output: symbol.3.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.2.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : s : 4 : 4 : 0
C_SYMBOL3 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.cond%1%0
=Lfor.cond%1%0 assume predicate_set done
=Lfor.cond%1%0 assert predicate_set done
=Node assumes and asserts: Lfor.cond%2%1
=Lfor.cond%2%1 assume predicate_set done
=Lfor.cond%2%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1
=Lfor.body%1%1 assume predicate_set done
=Lfor.body%1%1 assert predicate_set done
=Node assumes and asserts: Lfor.end%1%1
=Lfor.end%1%1 assume predicate_set done
=Lfor.end%1%1 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.llvm.vpvts.0 : memlabel-mem-symbol.1.0
=memlabel_map.1
mlvar.llvm.vpvts.1 : memlabel-mem-symbol.2.0
=memlabel_map.2
mlvar.llvm.vpvts.2 : memlabel-mem-symbol.3.0
=memlabel_map.3
mlvar.llvm.vpvts.3 : memlabel-mem-symbol.3.0
=Edge: Lfor.end%1%1 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:  ret i32 0, !dbg !31

=Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)

=Edge: L0%0%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))

=Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)

=Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lentry%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%1=>Lentry%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100003=>Lentry%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100004=>Lentry%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100005=>Lentry%1%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%0=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%1=>Lfor.cond%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100003
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.cond%2%100005
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.body%1%1
1 : input.src.llvm-%cmp : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%1=>Lfor.end%1%1
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100003=>Lfor.cond%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100004=>Lfor.body%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100005=>Lfor.cond%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%2%100006=>Lfor.end%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%1=>Lfor.body%1%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100003=>Lfor.body%1%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100004=>Lfor.body%1%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%100005=>Lfor.body%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%1=>Lfor.body%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%2%100003=>Lfor.body%3%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%1=>Lfor.body%3%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%3%100003=>Lfor.body%4%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%4%1=>Lfor.body%5%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%1=>Lfor.body%5%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100003=>Lfor.body%5%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100004=>Lfor.body%5%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%5%100005=>Lfor.body%6%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%1=>Lfor.body%6%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%6%100003=>Lfor.body%7%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%7%1=>Lfor.body%8%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%8%1=>Lfor.body%9%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%1=>Lfor.body%9%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%100003=>Lfor.body%9%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%9%100004=>Lfor.inc%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%1%1=>Lfor.inc%2%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%1=>Lfor.inc%2%100003
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100003=>Lfor.inc%2%100004
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100004=>Lfor.inc%2%100005
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100005=>Lfor.inc%2%100006
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.inc%2%100006=>Lfor.cond%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lentry%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>Lfor.cond%1%0
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%1=>Lentry%1%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100003=>Lentry%1%100004
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100004=>Lentry%1%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100005=>Lentry%1%100006
=src.llvm-%i.0
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%0=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%1=>Lfor.cond%2%1
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.cond%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%1=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100003=>Lfor.cond%2%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100004=>Lfor.body%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100005=>Lfor.cond%2%100006
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%2%100006=>Lfor.end%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.cond%1%0
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : select(1, 11, 12, 8, 9) : BV:32
14 : memlabel-mem-symbol.1.0 : MEMLABEL
15 : symbol.1 : BV:32
16 : bvadd(15, 6) : BV:32
17 : select(1, 14, 16, 8, 9) : BV:32
18 : bvmul(13, 17) : BV:32
19 : bvadd(10, 18) : BV:32
20 : store(1, 2, 7, 19, 8, 9) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : symbol.1 : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : select(1, 7, 12, 4, 5) : BV:32
14 : bvmul(6, 13) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : select(1, 11, 12, 8, 9) : BV:32
14 : memlabel-mem-symbol.1.0 : MEMLABEL
15 : symbol.1 : BV:32
16 : bvadd(15, 6) : BV:32
17 : select(1, 14, 16, 8, 9) : BV:32
18 : bvmul(13, 17) : BV:32
19 : bvadd(10, 18) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%1=>Lfor.body%1%100003
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100003=>Lfor.body%1%100004
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100004=>Lfor.body%1%100005
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%100005=>Lfor.body%2%1
=src.llvm-%arrayidx
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%1=>Lfor.body%2%100003
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%2%100003=>Lfor.body%3%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%1=>Lfor.body%3%100003
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%3%100003=>Lfor.body%4%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%4%1=>Lfor.body%5%1
=src.llvm-%mul
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%1=>Lfor.body%5%100003
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100003=>Lfor.body%5%100004
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100004=>Lfor.body%5%100005
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%5%100005=>Lfor.body%6%1
=src.llvm-%arrayidx1
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%1=>Lfor.body%6%100003
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%6%100003=>Lfor.body%7%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%7%1=>Lfor.body%8%1
=src.llvm-%add
1 : input.src.llvm-%2 : BV:32
2 : input.src.llvm-%mul : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%8%1=>Lfor.body%9%1
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%1=>Lfor.body%9%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%100003=>Lfor.body%9%100004
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%9%100004=>Lfor.inc%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%1=>E0%0%1
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%1%1=>Lfor.inc%2%1
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%1=>Lfor.inc%2%100003
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100003=>Lfor.inc%2%100004
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%inc : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100004=>Lfor.inc%2%100005
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100005=>Lfor.inc%2%100006
=src.llvm-%i.0
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.inc%2%100006=>Lfor.cond%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.simplified_assumes at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 2
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 3
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 4
1 : symbol.2 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 5
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 6
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 7
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 assume# 8
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : islangaligned(5, 6) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 0
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 0
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%100005=>Lfor.body%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 assume# 0
1 : input.src.llvm-%arrayidx : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 assume# 0
1 : symbol.2 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%4%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%3%100003=>Lfor.body%4%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%5%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%4%1=>Lfor.body%5%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 assume# 0
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : isgepoffset(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 assume# 1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 assume# 0
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : isgepoffset(5, 4) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 assume# 1
1 : 0 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:64
6 : bvmul(4, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 3) : BV:32
9 : eq(1, 8) : BOOL
10 : 4 : INT
11 : isindexforsize(9, 10) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100003=>Lfor.body%5%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100004=>Lfor.body%5%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100004=>Lfor.body%5%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100005=>Lfor.body%6%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%5%100005=>Lfor.body%6%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%6%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%6%100003 assume# 0
1 : input.src.llvm-%arrayidx1 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%1=>Lfor.body%6%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%100003=>Lfor.body%7%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%6%100003=>Lfor.body%7%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%8%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%7%1=>Lfor.body%8%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1 assume# 0
1 : input.src.llvm-%arrayidx1 : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%8%1=>Lfor.body%9%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%1=>Lfor.body%9%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%1=>Lfor.body%9%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100003=>Lfor.body%9%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100003=>Lfor.body%9%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.simplified_assumes at Lfor.body%9%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.simplified_assumes at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lentry%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1020
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 for loc_id 1021
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%1=>Lentry%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 for loc_id 1021
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100003=>Lentry%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100004=>Lentry%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 for loc_id 1020
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100005=>Lentry%1%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lentry%1%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 for loc_id 1018
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%0=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 for loc_id 1018
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%1%1=>Lfor.cond%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.cond%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%1=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100003=>Lfor.cond%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100004=>Lfor.body%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100005=>Lfor.cond%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.cond%2%100006=>Lfor.end%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1004
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1005
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1006
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1007
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1008
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1009
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1010
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1011
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1012
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1013
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1014
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1015
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : select(1, 11, 12, 8, 9) : BV:32
14 : memlabel-mem-symbol.1.0 : MEMLABEL
15 : symbol.1 : BV:32
16 : bvadd(15, 6) : BV:32
17 : select(1, 14, 16, 8, 9) : BV:32
18 : bvmul(13, 17) : BV:32
19 : bvadd(10, 18) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1016
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1017
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1020
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1021
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1022
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1023
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : symbol.1 : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : select(1, 7, 12, 4, 5) : BV:32
14 : bvmul(6, 13) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 for loc_id 1032
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : symbol.2 : BV:32
13 : select(1, 11, 12, 8, 9) : BV:32
14 : memlabel-mem-symbol.1.0 : MEMLABEL
15 : symbol.1 : BV:32
16 : bvadd(15, 6) : BV:32
17 : select(1, 14, 16, 8, 9) : BV:32
18 : bvmul(13, 17) : BV:32
19 : bvadd(10, 18) : BV:32
20 : store(1, 2, 7, 19, 8, 9) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1005
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 for loc_id 1008
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%1=>Lfor.body%1%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1006
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 for loc_id 1009
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100003=>Lfor.body%1%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 for loc_id 1007
1 : symbol.1 : BV:32
2 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100004=>Lfor.body%1%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1 for loc_id 1016
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%1%100005=>Lfor.body%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 for loc_id 1002
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : input.src.llvm-%arrayidx : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%1=>Lfor.body%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%2%100003=>Lfor.body%3%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 for loc_id 1003
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%1=>Lfor.body%3%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%4%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%3%100003=>Lfor.body%4%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%5%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%5%1 for loc_id 1023
1 : input.src.llvm-%0 : BV:32
2 : input.src.llvm-%1 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%4%1=>Lfor.body%5%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 for loc_id 1010
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 for loc_id 1013
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%1=>Lfor.body%5%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 for loc_id 1011
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 for loc_id 1014
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100003=>Lfor.body%5%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%5%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%5%100005 for loc_id 1012
1 : symbol.3 : BV:32
2 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100004=>Lfor.body%5%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100005=>Lfor.body%6%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100005=>Lfor.body%6%1 for loc_id 1017
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%5%100005=>Lfor.body%6%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%6%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%6%100003 for loc_id 1004
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%1=>Lfor.body%6%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%100003=>Lfor.body%7%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%6%100003=>Lfor.body%7%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%8%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%8%1 for loc_id 1015
1 : input.src.llvm-%2 : BV:32
2 : input.src.llvm-%mul : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%7%1=>Lfor.body%8%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1 for loc_id 1032
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : input.src.llvm-%arrayidx1 : BV:32
4 : input.src.llvm-%add : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%8%1=>Lfor.body%9%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%9%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%1=>Lfor.body%9%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100003=>Lfor.body%9%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100003=>Lfor.body%9%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100004=>Lfor.inc%1%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.body%9%100004=>Lfor.inc%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1001
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1019
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 for loc_id 1024
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.end%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 for loc_id 1022
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%1%1=>Lfor.inc%2%1 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%1=>Lfor.inc%2%100003 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 for loc_id 1021
1 : input.src.llvm-%inc : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100003=>Lfor.inc%2%100004 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100004=>Lfor.inc%2%100005 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 for loc_id 1020
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100005=>Lfor.inc%2%100006 done
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0
=graph_with_simplified_assets.loc_to_expr_map at Lfor.inc%2%100006=>Lfor.cond%1%0 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in llvm.vpvts
=Loc 1001 in llvm.vpvts.
LLVMVAR
llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Loc 1002 in llvm.vpvts.
LLVMVAR
src.llvm-%0
1 : input.src.llvm-%0 : BV:32
=Loc 1003 in llvm.vpvts.
LLVMVAR
src.llvm-%1
1 : input.src.llvm-%1 : BV:32
=Loc 1004 in llvm.vpvts.
LLVMVAR
src.llvm-%2
1 : input.src.llvm-%2 : BV:32
=Loc 1005 in llvm.vpvts.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset : BV:32
=Loc 1006 in llvm.vpvts.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset : BV:32
=Loc 1007 in llvm.vpvts.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset : BV:32
=Loc 1008 in llvm.vpvts.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset : BV:32
=Loc 1009 in llvm.vpvts.
LLVMVAR
src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset : BV:32
=Loc 1010 in llvm.vpvts.
LLVMVAR
src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset : BV:32
=Loc 1011 in llvm.vpvts.
LLVMVAR
src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset : BV:32
=Loc 1012 in llvm.vpvts.
LLVMVAR
src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset : BV:32
=Loc 1013 in llvm.vpvts.
LLVMVAR
src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset : BV:32
=Loc 1014 in llvm.vpvts.
LLVMVAR
src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset : BV:32
=Loc 1015 in llvm.vpvts.
LLVMVAR
src.llvm-%add
1 : input.src.llvm-%add : BV:32
=Loc 1016 in llvm.vpvts.
LLVMVAR
src.llvm-%arrayidx
1 : input.src.llvm-%arrayidx : BV:32
=Loc 1017 in llvm.vpvts.
LLVMVAR
src.llvm-%arrayidx1
1 : input.src.llvm-%arrayidx1 : BV:32
=Loc 1018 in llvm.vpvts.
LLVMVAR
src.llvm-%cmp
1 : input.src.llvm-%cmp : BOOL
=Loc 1019 in llvm.vpvts.
LLVMVAR
src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=Loc 1020 in llvm.vpvts.
LLVMVAR
src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
=Loc 1021 in llvm.vpvts.
LLVMVAR
src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=Loc 1022 in llvm.vpvts.
LLVMVAR
src.llvm-%inc
1 : input.src.llvm-%inc : BV:32
=Loc 1023 in llvm.vpvts.
LLVMVAR
src.llvm-%mul
1 : input.src.llvm-%mul : BV:32
=Loc 1024 in llvm.vpvts.
LLVMVAR
src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Loc 1025 in llvm.vpvts.
REGMEM
econd
1 : input.econd : BOOL
=Loc 1026 in llvm.vpvts.
REGMEM
uset_visit_expr
1 : input.uset_visit_expr : BOOL
=Loc 1027 in llvm.vpvts.
SLOT
=memname
src.llvm-mem
=addr
1 : symbol.2 : BV:32
=nbytes
4
=bigendian
false
=Loc 1028 in llvm.vpvts.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1029 in llvm.vpvts.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1030 in llvm.vpvts.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1031 in llvm.vpvts.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1032 in llvm.vpvts.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.3.0

=Alias analysis results in llvm.vpvts
=Alias analysis result in llvm.vpvts at L0%0%1
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1004 (input.src.llvm-%2)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1009 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1010 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1011 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1012 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1013 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1014 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1015 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1016 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1017 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1018 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1019 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1020 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1021 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1022 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1023 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1024 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1025 (input.econd)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1026 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1027 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1028 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.vpvts at L0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1004 (input.src.llvm-%2)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1009 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1010 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1011 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1012 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1013 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1014 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1015 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1016 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1017 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1018 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1019 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1020 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1021 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1022 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1023 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1024 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1025 (input.econd)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1026 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1027 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1028 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%1%0 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1004 (input.src.llvm-%2)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1009 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1010 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1011 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1012 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1013 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1014 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1015 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1016 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1017 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1018 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1019 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1020 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1021 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1022 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1023 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1024 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1025 (input.econd)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1026 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1027 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1028 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.cond%2%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1004 (input.src.llvm-%2)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1009 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1010 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1011 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1012 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1013 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1014 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1015 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1016 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1017 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1018 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1019 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1020 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1021 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1022 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1023 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1024 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1025 (input.econd)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1026 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1027 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1028 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.body%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1001 (input.llvm-%ret-reg)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1004 (input.src.llvm-%2)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1009 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1010 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1011 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1012 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1013 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1014 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1015 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1016 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1017 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1018 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1019 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1020 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1021 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1022 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1023 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1024 (input.src.llvm-indir_tgt)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1025 (input.econd)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1026 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1027 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1028 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.vpvts at Lfor.end%1%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1001 (input.llvm-%ret-reg)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1002 (input.src.llvm-%0)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1003 (input.src.llvm-%1)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1004 (input.src.llvm-%2)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1005 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1006 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1007 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1008 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1009 (input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1010 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1011 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1012 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1013 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1014 (input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1015 (input.src.llvm-%add)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1016 (input.src.llvm-%arrayidx)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1017 (input.src.llvm-%arrayidx1)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1018 (input.src.llvm-%cmp)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1019 (input.src.llvm-%hidden-reg)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1020 (input.src.llvm-%i.0)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1021 (input.src.llvm-%i.0.phi.tmpvar)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1022 (input.src.llvm-%inc)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1023 (input.src.llvm-%mul)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1024 (input.src.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1025 (input.econd)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1026 (input.uset_visit_expr)
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1027 (select(input.src.llvm-mem, memlabel-mem-symbol.2.0, symbol.2, 4, false))
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1028 (memmask(input.src.llvm-mem, memlabel-mem-heap))
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1029 (memmask(input.src.llvm-mem, memlabel-mem-esp))
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1030 (memmask(input.src.llvm-mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1031 (memmask(input.src.llvm-mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in llvm.vpvts at E0%0%1 for loc 1032 (memmask(input.src.llvm-mem, memlabel-mem-symbol.3.0))
nullptr

=Liveness in llvm.vpvts
=live locs at L0%0%1
1027, 1028, 1030, 1031, 1032
=live locs at Lfor.cond%1%0
1020, 1027, 1028, 1030, 1031, 1032
=live locs at Lfor.cond%2%1
1018, 1020, 1027, 1028, 1030, 1031, 1032
=live locs at Lfor.body%1%1
1020, 1027, 1028, 1030, 1031, 1032
=live locs at Lfor.end%1%1
1027, 1028, 1030, 1031, 1032
=live locs at E0%0%1
1027, 1028, 1030, 1031, 1032

=Available expressions in llvm.vpvts
=available expressions at L0%0%1 in llvm.vpvts
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%1%0 in llvm.vpvts
=avail_exprs begin
=avail_exprs end
=available expressions at Lfor.cond%2%1 in llvm.vpvts
=avail_exprs begin
=loc 1018
=from_expr
17404 : input.src.llvm-%cmp : BOOL
=to_expr
17401 : input.src.llvm-%i.0 : BV:32
17402 : 32000 : BV:32
17403 : bvslt(17401, 17402) : BOOL
=avail_exprs end
=available expressions at Lfor.body%1%1 in llvm.vpvts
=avail_exprs begin
=loc 1018
=from_expr
17404 : input.src.llvm-%cmp : BOOL
=to_expr
17401 : input.src.llvm-%i.0 : BV:32
17402 : 32000 : BV:32
17403 : bvslt(17401, 17402) : BOOL
=avail_exprs end
=available expressions at Lfor.end%1%1 in llvm.vpvts
=avail_exprs begin
=loc 1018
=from_expr
17404 : input.src.llvm-%cmp : BOOL
=to_expr
17401 : input.src.llvm-%i.0 : BV:32
17402 : 32000 : BV:32
17403 : bvslt(17401, 17402) : BOOL
=avail_exprs end
=available expressions at E0%0%1 in llvm.vpvts
=avail_exprs begin
=loc 1001
=from_expr
17502 : input.llvm-%ret-reg : BV:32
=to_expr
17389 : 0 : BV:32
=loc 1018
=from_expr
17404 : input.src.llvm-%cmp : BOOL
=to_expr
17401 : input.src.llvm-%i.0 : BV:32
17402 : 32000 : BV:32
17403 : bvslt(17401, 17402) : BOOL
=loc 1024
=from_expr
17507 : input.src.llvm-indir_tgt : BV:32
=to_expr
17387 : retaddr_const : BV:32
=avail_exprs end

=sprel_maps in llvm.vpvts
=sprel_map at L0%0%1 in llvm.vpvts
=sprel_map at Lfor.cond%1%0 in llvm.vpvts
=sprel_map at Lfor.cond%2%1 in llvm.vpvts
=sprel_map at Lfor.body%1%1 in llvm.vpvts
=sprel_map at Lfor.end%1%1 in llvm.vpvts
=sprel_map at E0%0%1 in llvm.vpvts
=loc 1001
17389 : 0 : BV:32
=loc 1024
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=PC_to_linename:
=pc
Lentry%1%1
=linename
(line 9 at column 8)
=pc
Lfor.cond%1%1
=linename
(line 9 at column 21)
=pc
Lfor.cond%2%1
=linename
(line 9 at column 3)
=pc
Lfor.body%1%1
=linename
(line 10 at column 12)
=pc
Lfor.body%2%1
=linename
(line 10 at column 12)
=pc
Lfor.body%3%1
=linename
(line 10 at column 19)
=pc
Lfor.body%4%1
=linename
(line 10 at column 17)
=pc
Lfor.body%5%1
=linename
(line 10 at column 4)
=pc
Lfor.body%6%1
=linename
line 10
=pc
Lfor.body%7%1
=linename
line 10
=pc
Lfor.body%8%1
=linename
line 10
=pc
Lfor.body%9%1
=linename
line 11
=pc
Lfor.end%1%1
=linename
line 12
=pc
Lfor.inc%1%1
=linename
(line 9 at column 29)
=pc
Lfor.inc%2%1
=linename
line 9
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%1%1
=column_name
 at column 8
=pc
Lfor.cond%1%1
=column_name
 at column 21
=pc
Lfor.cond%2%1
=column_name
 at column 3
=pc
Lfor.body%1%1
=column_name
 at column 12
=pc
Lfor.body%2%1
=column_name
 at column 12
=pc
Lfor.body%3%1
=column_name
 at column 19
=pc
Lfor.body%4%1
=column_name
 at column 17
=pc
Lfor.body%5%1
=column_name
 at column 4
=pc
Lfor.body%6%1
=column_name
 at column 9
=pc
Lfor.body%7%1
=column_name
 at column 9
=pc
Lfor.body%8%1
=column_name
 at column 9
=pc
Lfor.body%9%1
=column_name
 at column 3
=pc
Lfor.end%1%1
=column_name
 at column 2
=pc
Lfor.inc%1%1
=column_name
 at column 29
=pc
Lfor.inc%2%1
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%1%1
=line_and_column
line 9
=pc
Lfor.cond%1%1
=line_and_column
line 9
=pc
Lfor.cond%2%1
=line_and_column
line 9
=pc
Lfor.body%1%1
=line_and_column
line 10
=pc
Lfor.body%2%1
=line_and_column
line 10
=pc
Lfor.body%3%1
=line_and_column
line 10
=pc
Lfor.body%4%1
=line_and_column
line 10
=pc
Lfor.body%5%1
=line_and_column
line 10
=pc
Lfor.body%6%1
=line_and_column
line 10
=pc
Lfor.body%7%1
=line_and_column
line 10
=pc
Lfor.body%8%1
=line_and_column
line 10
=pc
Lfor.body%9%1
=line_and_column
line 11
=pc
Lfor.end%1%1
=line_and_column
line 12
=pc
Lfor.inc%1%1
=line_and_column
line 9
=pc
Lfor.inc%2%1
=line_and_column
line 9
=PC_to_line_and_column done
=SourceToLLVMVarnames:
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset : 0
input.src.llvm-%cmp : (i&lt;<sub>s</sub>32000)
input.src.llvm-%i.0.phi.tmpvar : 0
input.src.llvm-%i.0 : i
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset : (@b + bvmul(i, 4))
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset : bvmul(i, 4)
input.src.llvm-%arrayidx : (@b + bvmul(i, 4))
input.llvm-%ret-reg : 0
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset : 0
input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset : 0
input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset : bvmul(i, 4)
input.src.llvm-indir_tgt : retaddr_const
input.src.llvm-%add : (input.src.llvm-%2 + bvmul(input.src.llvm-%0, input.src.llvm-%1))
input.src.llvm-%inc : i
input.src.llvm-%arrayidx1 : (@a + bvmul(i, 4))
input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset : 0
input.src.llvm-%mul : bvmul(input.src.llvm-%0, input.src.llvm-%1)
input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset : (@a + bvmul(i, 4))
input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset : bvmul(i, 4)
=InputLLVMToSourceVarnames done
=TFG_LLVM_done
=dst_tfg
=TFG:
=Nodes: L0%0%1 L3%1%0 L9%1%1 L10%1%0 E0%0%1
=Edges:
L9%1%1 => L3%1%0
L9%1%1 => L10%1%0
L10%1%0 => E0%0%1
L0%0%1 => L3%1%0
L3%1%0 => L9%1%1
=graph done
=Node outputs: E0%0%1
=Output: src.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Output: symbol.1.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.dst.exreg.0.0 : BV:32
=Output: symbol.3.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: heap
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Node outputs done for E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : s : 4 : 4 : 0
C_SYMBOL3 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=state_end

=Node assumes and asserts: L0%0%1
=L0%0%1 assume predicate_set done
=L0%0%1 assert predicate_set done
=Node assumes and asserts: L3%1%0
=L3%1%0 assume predicate_set done
=L3%1%0 assert predicate_set done
=Node assumes and asserts: L9%1%1
=L9%1%1 assume predicate_set done
=L9%1%1 assert predicate_set done
=Node assumes and asserts: L10%1%0
=L10%1%0 assume predicate_set done
=L10%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1
=E0%0%1 assume predicate_set done
=E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-esp
=memlabel_map.5
mlvar.dst.5 : memlabel-mem-esp
=Edge: L9%1%1 => L3%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L9%1%1 => L10%1%0
=Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented

=Edge: L10%1%0 => E0%0%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input.dst.exreg.0.4 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)

=Edge: L0%0%1 => L3%1%0
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))

=Edge: L3%1%0 => L9%1%1
=Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L0%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%0%1=>L3%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%1%1=>L1%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%1=>L2%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%1%1=>L3%1%0
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%0=>L3%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%0=>L9%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%1=>L4%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L4%1%1=>L5%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L5%1%1=>L6%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L6%1%1=>L7%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L7%1%1=>L8%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L8%1%1=>L9%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%1=>L3%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L9%1%1=>L10%1%0
1 : 1 : BV:1
2 : input.dst.exreg.8.0 : BV:1
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%0=>L10%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%0=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L10%1%1=>L11%1%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond at L11%1%1=>E0%0%1
1 : 1 : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L0%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%0%1=>L3%1%0
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.2.2
1 : 0 : BV:96
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvconcat(1, 7) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : bvconcat(6, 6, 6, 6) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%1%1=>L1%1%1
=dst.exreg.2.2
1 : 0 : BV:96
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvconcat(1, 7) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%1=>L2%1%1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%1%1=>L3%1%0
=dst.exreg.2.1
1 : input.dst.exreg.2.2 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : bvconcat(4, 4, 4, 4) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%0=>L3%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%0=>L9%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvmul(9, 15) : BV:32
17 : bvadd(3, 4, 11) : BV:32
18 : select(1, 2, 17, 13, 14) : BV:32
19 : bvadd(16, 18) : BV:32
20 : 95 : INT
21 : 64 : INT
22 : bvextract(6, 20, 21) : BV:32
23 : 8 : BV:32
24 : bvadd(10, 4, 23) : BV:32
25 : select(1, 2, 24, 13, 14) : BV:32
26 : bvmul(22, 25) : BV:32
27 : bvadd(3, 4, 23) : BV:32
28 : select(1, 2, 27, 13, 14) : BV:32
29 : bvadd(26, 28) : BV:32
30 : 63 : INT
31 : 32 : INT
32 : bvextract(6, 30, 31) : BV:32
33 : 4 : BV:32
34 : bvadd(10, 33, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvmul(32, 35) : BV:32
37 : bvadd(3, 33, 4) : BV:32
38 : select(1, 2, 37, 13, 14) : BV:32
39 : bvadd(36, 38) : BV:32
40 : 31 : INT
41 : 0 : INT
42 : bvextract(6, 40, 41) : BV:32
43 : bvadd(10, 4) : BV:32
44 : select(1, 2, 43, 13, 14) : BV:32
45 : bvmul(42, 44) : BV:32
46 : select(1, 2, 5, 13, 14) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(19, 29, 39, 47) : BV:128
49 : 16 : INT
50 : store(1, 2, 5, 48, 49, 14) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839312 { -127984 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127984 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 128000 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127984 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.2.0
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvmul(4, 13) : BV:32
15 : dst_symbol_addr.3 : BV:32
16 : bvadd(15, 8, 9) : BV:32
17 : select(5, 6, 16, 11, 12) : BV:32
18 : bvadd(14, 17) : BV:32
19 : 95 : INT
20 : 64 : INT
21 : bvextract(1, 19, 20) : BV:32
22 : 8 : BV:32
23 : bvadd(7, 8, 22) : BV:32
24 : select(5, 6, 23, 11, 12) : BV:32
25 : bvmul(21, 24) : BV:32
26 : bvadd(15, 8, 22) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(25, 27) : BV:32
29 : 63 : INT
30 : 32 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : 4 : BV:32
33 : bvadd(7, 32, 8) : BV:32
34 : select(5, 6, 33, 11, 12) : BV:32
35 : bvmul(31, 34) : BV:32
36 : bvadd(15, 32, 8) : BV:32
37 : select(5, 6, 36, 11, 12) : BV:32
38 : bvadd(35, 37) : BV:32
39 : 31 : INT
40 : 0 : INT
41 : bvextract(1, 39, 40) : BV:32
42 : bvadd(7, 8) : BV:32
43 : select(5, 6, 42, 11, 12) : BV:32
44 : bvmul(41, 43) : BV:32
45 : bvadd(15, 8) : BV:32
46 : select(5, 6, 45, 11, 12) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvconcat(18, 28, 38, 47) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127984 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%1=>L4%1%1
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L4%1%1=>L5%1%1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=dst.exreg.11.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L5%1%1=>L6%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.1 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvmul(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvmul(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvmul(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(5, 18, 19) : BV:32
21 : bvextract(1, 18, 19) : BV:32
22 : bvmul(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L6%1%1=>L7%1%1
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.3 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967292 { -4 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 4294967288 { -8 } : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4294967284 { -12 } : BV:32
26 : bvadd(7, 8, 25) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : 4294967280 { -16 } : BV:32
33 : bvadd(7, 8, 32) : BV:32
34 : select(5, 6, 33, 11, 12) : BV:32
35 : bvadd(31, 34) : BV:32
36 : bvconcat(14, 21, 28, 35) : BV:128
=state_end
=graph_with_simplified_assets.simplified_to_state at L7%1%1=>L8%1%1
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state at L8%1%1=>L9%1%1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839296 { -128000 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 128000 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.7.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.10.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 128000 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.14.0
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839296 { -128000 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%1=>L3%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L9%1%1=>L10%1%0
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%0=>L10%1%1
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%0=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=dst.llvm-indir_tgt
1 : retaddr_const : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L10%1%1=>L11%1%1
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=dst.exreg.7.0
1 : 1 : BV:1
=dst.exreg.8.0
1 : 0 : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : 0 : BV:1
=dst.exreg.11.0
1 : 0 : BV:1
=dst.exreg.12.0
1 : 0 : BV:1
=dst.exreg.13.0
1 : 1 : BV:1
=dst.exreg.0.0
1 : 0 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : 1 : BV:1
=dst.exreg.14.0
1 : 1 : BV:1
=state_end
=graph_with_simplified_assets.simplified_to_state at L11%1%1=>E0%0%1
=dst.esp.E0%0%1
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L3%1%0
=graph_with_simplified_assets.simplified_assumes at L0%0%1=>L3%1%0 done
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%1
=graph_with_simplified_assets.simplified_assumes at L0%1%1=>L1%1%1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1
=graph_with_simplified_assets.simplified_assumes at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%0
=graph_with_simplified_assets.simplified_assumes at L2%1%1=>L3%1%0 done
=graph_with_simplified_assets.simplified_assumes at L3%1%0=>L3%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%0=>L3%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%0=>L9%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%0=>L9%1%1 done
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1
=graph_with_simplified_assets.simplified_assumes at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1
=graph_with_simplified_assets.simplified_assumes at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1
=graph_with_simplified_assets.simplified_assumes at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1
=graph_with_simplified_assets.simplified_assumes at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1
=graph_with_simplified_assets.simplified_assumes at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%1
=graph_with_simplified_assets.simplified_assumes at L8%1%1=>L9%1%1 done
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L3%1%0
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L3%1%0 done
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%0
=graph_with_simplified_assets.simplified_assumes at L9%1%1=>L10%1%0 done
=graph_with_simplified_assets.simplified_assumes at L10%1%0=>L10%1%1
=graph_with_simplified_assets.simplified_assumes at L10%1%0=>L10%1%1 done
=graph_with_simplified_assets.simplified_assumes at L10%1%0=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L10%1%0=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L11%1%1
=graph_with_simplified_assets.simplified_assumes at L10%1%1=>L11%1%1 done
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>E0%0%1
=graph_with_simplified_assets.simplified_assumes at L11%1%1=>E0%0%1 done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1019
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1029
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 for loc_id 1033
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L0%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 3
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 4
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 5
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 6
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 7
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1009
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : bvconcat(6, 6, 6, 6) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1010
1 : 0 : BV:96
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvconcat(1, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1014
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1015
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1016
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1019
1 : input_stack_pointer_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1029
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : memmask(7, 2) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 for loc_id 1033
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L0%0%1=>L3%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1010
1 : 0 : BV:96
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : select(2, 3, 4, 5, 6) : BV:32
8 : bvconcat(1, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L0%1%1=>L1%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1014
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1015
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 for loc_id 1016
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L1%1%1=>L2%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%0
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%0 for loc_id 1009
1 : input.dst.exreg.2.2 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : bvconcat(4, 4, 4, 4) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L2%1%1=>L3%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L3%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L3%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : andnot1(3, 7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 127984 : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : 0 : BV:1
19 : ite(17, 1, 18) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 16 : BV:32
5 : bvadd(1, 4) : BV:32
6 : 128000 : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : or(3, 8) : BOOL
10 : 1 : BV:1
11 : 0 : BV:1
12 : ite(9, 10, 11) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1005
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : 127984 : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : 0 : BV:1
20 : ite(18, 1, 19) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839312 { -127984 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 16 : BV:32
9 : bvadd(2, 8) : BV:32
10 : bvextract(9, 5, 5) : BV:1
11 : eq(1, 10) : BOOL
12 : xor(11, 7) : BOOL
13 : and(11, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 1, 15) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1008
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.1 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 12 : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvmul(4, 13) : BV:32
15 : dst_symbol_addr.3 : BV:32
16 : bvadd(15, 8, 9) : BV:32
17 : select(5, 6, 16, 11, 12) : BV:32
18 : bvadd(14, 17) : BV:32
19 : 95 : INT
20 : 64 : INT
21 : bvextract(1, 19, 20) : BV:32
22 : 8 : BV:32
23 : bvadd(7, 8, 22) : BV:32
24 : select(5, 6, 23, 11, 12) : BV:32
25 : bvmul(21, 24) : BV:32
26 : bvadd(15, 8, 22) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(25, 27) : BV:32
29 : 63 : INT
30 : 32 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : 4 : BV:32
33 : bvadd(7, 32, 8) : BV:32
34 : select(5, 6, 33, 11, 12) : BV:32
35 : bvmul(31, 34) : BV:32
36 : bvadd(15, 32, 8) : BV:32
37 : select(5, 6, 36, 11, 12) : BV:32
38 : bvadd(35, 37) : BV:32
39 : 31 : INT
40 : 0 : INT
41 : bvextract(1, 39, 40) : BV:32
42 : bvadd(7, 8) : BV:32
43 : select(5, 6, 42, 11, 12) : BV:32
44 : bvmul(41, 43) : BV:32
45 : bvadd(15, 8) : BV:32
46 : select(5, 6, 45, 11, 12) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvconcat(18, 28, 38, 47) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : 16 : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 4294839312 { -127984 } : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(5, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(10, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 5, 17) : BV:1
19 : 10 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : eq(5, 20) : BOOL
22 : ite(21, 5, 17) : BV:1
23 : 9 : INT
24 : 8 : INT
25 : bvextract(1, 23, 24) : BV:2
26 : ite(14, 5, 17) : BV:1
27 : 127984 : BV:32
28 : eq(6, 27) : BOOL
29 : ite(28, 5, 17) : BV:1
30 : 5 : INT
31 : bvextract(1, 30, 30) : BV:1
32 : 4 : INT
33 : bvextract(12, 32, 32) : BV:1
34 : eq(5, 33) : BOOL
35 : bvextract(8, 32, 32) : BV:1
36 : eq(5, 35) : BOOL
37 : xor(34, 36) : BOOL
38 : ite(37, 5, 17) : BV:1
39 : 3 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : 1 : INT
42 : bvextract(1, 41, 41) : BV:1
43 : 128000 : BV:32
44 : bvuge(8, 43) : BOOL
45 : not(44) : BOOL
46 : ite(45, 5, 17) : BV:1
47 : bvconcat(4, 18, 22, 25, 26, 29, 31, 38, 40, 17, 42, 46) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 127984 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 128000 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1027
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvmul(9, 15) : BV:32
17 : bvadd(3, 4, 11) : BV:32
18 : select(1, 2, 17, 13, 14) : BV:32
19 : bvadd(16, 18) : BV:32
20 : 95 : INT
21 : 64 : INT
22 : bvextract(6, 20, 21) : BV:32
23 : 8 : BV:32
24 : bvadd(10, 4, 23) : BV:32
25 : select(1, 2, 24, 13, 14) : BV:32
26 : bvmul(22, 25) : BV:32
27 : bvadd(3, 4, 23) : BV:32
28 : select(1, 2, 27, 13, 14) : BV:32
29 : bvadd(26, 28) : BV:32
30 : 63 : INT
31 : 32 : INT
32 : bvextract(6, 30, 31) : BV:32
33 : 4 : BV:32
34 : bvadd(10, 33, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvmul(32, 35) : BV:32
37 : bvadd(3, 33, 4) : BV:32
38 : select(1, 2, 37, 13, 14) : BV:32
39 : bvadd(36, 38) : BV:32
40 : 31 : INT
41 : 0 : INT
42 : bvextract(6, 40, 41) : BV:32
43 : bvadd(10, 4) : BV:32
44 : select(1, 2, 43, 13, 14) : BV:32
45 : bvmul(42, 44) : BV:32
46 : select(1, 2, 5, 13, 14) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(19, 29, 39, 47) : BV:128
49 : 16 : INT
50 : store(1, 2, 5, 48, 49, 14) : ARRAY[BV:32 -> BV:8]
51 : dst_symbol_addr.2 : BV:32
52 : select(50, 2, 51, 13, 14) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1028
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvmul(9, 15) : BV:32
17 : bvadd(3, 4, 11) : BV:32
18 : select(1, 2, 17, 13, 14) : BV:32
19 : bvadd(16, 18) : BV:32
20 : 95 : INT
21 : 64 : INT
22 : bvextract(6, 20, 21) : BV:32
23 : 8 : BV:32
24 : bvadd(10, 4, 23) : BV:32
25 : select(1, 2, 24, 13, 14) : BV:32
26 : bvmul(22, 25) : BV:32
27 : bvadd(3, 4, 23) : BV:32
28 : select(1, 2, 27, 13, 14) : BV:32
29 : bvadd(26, 28) : BV:32
30 : 63 : INT
31 : 32 : INT
32 : bvextract(6, 30, 31) : BV:32
33 : 4 : BV:32
34 : bvadd(10, 33, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvmul(32, 35) : BV:32
37 : bvadd(3, 33, 4) : BV:32
38 : select(1, 2, 37, 13, 14) : BV:32
39 : bvadd(36, 38) : BV:32
40 : 31 : INT
41 : 0 : INT
42 : bvextract(6, 40, 41) : BV:32
43 : bvadd(10, 4) : BV:32
44 : select(1, 2, 43, 13, 14) : BV:32
45 : bvmul(42, 44) : BV:32
46 : select(1, 2, 5, 13, 14) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(19, 29, 39, 47) : BV:128
49 : 16 : INT
50 : store(1, 2, 5, 48, 49, 14) : ARRAY[BV:32 -> BV:8]
51 : memlabel-mem-heap : MEMLABEL
52 : memmask(50, 51) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1030
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvmul(9, 15) : BV:32
17 : bvadd(3, 4, 11) : BV:32
18 : select(1, 2, 17, 13, 14) : BV:32
19 : bvadd(16, 18) : BV:32
20 : 95 : INT
21 : 64 : INT
22 : bvextract(6, 20, 21) : BV:32
23 : 8 : BV:32
24 : bvadd(10, 4, 23) : BV:32
25 : select(1, 2, 24, 13, 14) : BV:32
26 : bvmul(22, 25) : BV:32
27 : bvadd(3, 4, 23) : BV:32
28 : select(1, 2, 27, 13, 14) : BV:32
29 : bvadd(26, 28) : BV:32
30 : 63 : INT
31 : 32 : INT
32 : bvextract(6, 30, 31) : BV:32
33 : 4 : BV:32
34 : bvadd(10, 33, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvmul(32, 35) : BV:32
37 : bvadd(3, 33, 4) : BV:32
38 : select(1, 2, 37, 13, 14) : BV:32
39 : bvadd(36, 38) : BV:32
40 : 31 : INT
41 : 0 : INT
42 : bvextract(6, 40, 41) : BV:32
43 : bvadd(10, 4) : BV:32
44 : select(1, 2, 43, 13, 14) : BV:32
45 : bvmul(42, 44) : BV:32
46 : select(1, 2, 5, 13, 14) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(19, 29, 39, 47) : BV:128
49 : 16 : INT
50 : store(1, 2, 5, 48, 49, 14) : ARRAY[BV:32 -> BV:8]
51 : memlabel-mem-symbol.1.0 : MEMLABEL
52 : memmask(50, 51) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1031
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvmul(9, 15) : BV:32
17 : bvadd(3, 4, 11) : BV:32
18 : select(1, 2, 17, 13, 14) : BV:32
19 : bvadd(16, 18) : BV:32
20 : 95 : INT
21 : 64 : INT
22 : bvextract(6, 20, 21) : BV:32
23 : 8 : BV:32
24 : bvadd(10, 4, 23) : BV:32
25 : select(1, 2, 24, 13, 14) : BV:32
26 : bvmul(22, 25) : BV:32
27 : bvadd(3, 4, 23) : BV:32
28 : select(1, 2, 27, 13, 14) : BV:32
29 : bvadd(26, 28) : BV:32
30 : 63 : INT
31 : 32 : INT
32 : bvextract(6, 30, 31) : BV:32
33 : 4 : BV:32
34 : bvadd(10, 33, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvmul(32, 35) : BV:32
37 : bvadd(3, 33, 4) : BV:32
38 : select(1, 2, 37, 13, 14) : BV:32
39 : bvadd(36, 38) : BV:32
40 : 31 : INT
41 : 0 : INT
42 : bvextract(6, 40, 41) : BV:32
43 : bvadd(10, 4) : BV:32
44 : select(1, 2, 43, 13, 14) : BV:32
45 : bvmul(42, 44) : BV:32
46 : select(1, 2, 5, 13, 14) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(19, 29, 39, 47) : BV:128
49 : 16 : INT
50 : store(1, 2, 5, 48, 49, 14) : ARRAY[BV:32 -> BV:8]
51 : memlabel-mem-symbol.2.0 : MEMLABEL
52 : memmask(50, 51) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : input.dst.exreg.2.1 : BV:128
7 : 127 : INT
8 : 96 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : dst_symbol_addr.1 : BV:32
11 : 12 : BV:32
12 : bvadd(10, 4, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : bvmul(9, 15) : BV:32
17 : bvadd(3, 4, 11) : BV:32
18 : select(1, 2, 17, 13, 14) : BV:32
19 : bvadd(16, 18) : BV:32
20 : 95 : INT
21 : 64 : INT
22 : bvextract(6, 20, 21) : BV:32
23 : 8 : BV:32
24 : bvadd(10, 4, 23) : BV:32
25 : select(1, 2, 24, 13, 14) : BV:32
26 : bvmul(22, 25) : BV:32
27 : bvadd(3, 4, 23) : BV:32
28 : select(1, 2, 27, 13, 14) : BV:32
29 : bvadd(26, 28) : BV:32
30 : 63 : INT
31 : 32 : INT
32 : bvextract(6, 30, 31) : BV:32
33 : 4 : BV:32
34 : bvadd(10, 33, 4) : BV:32
35 : select(1, 2, 34, 13, 14) : BV:32
36 : bvmul(32, 35) : BV:32
37 : bvadd(3, 33, 4) : BV:32
38 : select(1, 2, 37, 13, 14) : BV:32
39 : bvadd(36, 38) : BV:32
40 : 31 : INT
41 : 0 : INT
42 : bvextract(6, 40, 41) : BV:32
43 : bvadd(10, 4) : BV:32
44 : select(1, 2, 43, 13, 14) : BV:32
45 : bvmul(42, 44) : BV:32
46 : select(1, 2, 5, 13, 14) : BV:32
47 : bvadd(45, 46) : BV:32
48 : bvconcat(19, 29, 39, 47) : BV:128
49 : 16 : INT
50 : store(1, 2, 5, 48, 49, 14) : ARRAY[BV:32 -> BV:8]
51 : memlabel-mem-symbol.3.0 : MEMLABEL
52 : memmask(50, 51) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L3%1%0=>L9%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1008
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.1 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L3%1%1=>L4%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 0
1 : input.dst.exreg.0.0 : BV:32
2 : 16 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1002
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : 4294967280 { -16 } : BV:32
11 : eq(3, 10) : BOOL
12 : not(11) : BOOL
13 : andnot1(9, 12) : BOOL
14 : ite(13, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : 4294967280 { -16 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : bvconcat(5, 1) : BV:33
7 : 16 : BV:33
8 : bvadd(6, 7) : BV:33
9 : 32 : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(4, 10) : BOOL
12 : or(3, 11) : BOOL
13 : ite(12, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1005
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 16 : BV:32
6 : bvadd(1, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : 0 : BV:1
11 : bvextract(1, 7, 7) : BV:1
12 : eq(10, 11) : BOOL
13 : eq(4, 11) : BOOL
14 : xor(13, 9) : BOOL
15 : and(12, 14) : BOOL
16 : iff(9, 15) : BOOL
17 : not(16) : BOOL
18 : or(3, 17) : BOOL
19 : ite(18, 4, 10) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1006
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : not(9) : BOOL
11 : ite(10, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 16 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : 0 : BV:1
9 : bvextract(2, 5, 5) : BV:1
10 : eq(8, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 7) : BOOL
13 : and(10, 12) : BOOL
14 : iff(7, 13) : BOOL
15 : ite(14, 1, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 1 : BV:1
10 : eq(9, 7) : BOOL
11 : 16 : BV:32
12 : bvadd(6, 11) : BV:32
13 : bvextract(12, 2, 2) : BV:1
14 : eq(9, 13) : BOOL
15 : xor(10, 14) : BOOL
16 : and(8, 15) : BOOL
17 : ite(16, 9, 5) : BV:1
18 : 10 : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(9, 19) : BOOL
21 : ite(20, 9, 5) : BV:1
22 : 9 : INT
23 : 8 : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 9, 5) : BV:1
26 : 4294967280 { -16 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 9, 5) : BV:1
29 : 5 : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 : INT
32 : bvextract(12, 31, 31) : BV:1
33 : eq(9, 32) : BOOL
34 : bvextract(6, 31, 31) : BV:1
35 : eq(9, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 9, 5) : BV:1
38 : 3 : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 : INT
41 : bvextract(1, 40, 40) : BV:1
42 : bvconcat(5, 6) : BV:33
43 : 16 : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(9, 46) : BOOL
48 : ite(47, 9, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1014
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1015
1 : input.dst.exreg.0.0 : BV:32
2 : 4294967280 { -16 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 for loc_id 1016
1 : 1 : BV:1
2 : 0 : BV:1
3 : input.dst.exreg.0.0 : BV:32
4 : bvconcat(2, 3) : BV:33
5 : 16 : BV:33
6 : bvadd(4, 5) : BV:33
7 : 32 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(1, 8) : BOOL
10 : ite(9, 1, 2) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L4%1%1=>L5%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.exreg.2.1 : BV:128
6 : bvextract(5, 2, 3) : BV:32
7 : bvmul(4, 6) : BV:32
8 : 95 : INT
9 : 64 : INT
10 : bvextract(1, 8, 9) : BV:32
11 : bvextract(5, 8, 9) : BV:32
12 : bvmul(10, 11) : BV:32
13 : 63 : INT
14 : 32 : INT
15 : bvextract(1, 13, 14) : BV:32
16 : bvextract(5, 13, 14) : BV:32
17 : bvmul(15, 16) : BV:32
18 : 31 : INT
19 : 0 : INT
20 : bvextract(5, 18, 19) : BV:32
21 : bvextract(1, 18, 19) : BV:32
22 : bvmul(20, 21) : BV:32
23 : bvconcat(7, 12, 17, 22) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L5%1%1=>L6%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1008
1 : input.dst.exreg.2.0 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
5 : input.dst.mem : ARRAY[BV:32 -> BV:8]
6 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
7 : dst_symbol_addr.3 : BV:32
8 : input.dst.exreg.0.0 : BV:32
9 : 4294967292 { -4 } : BV:32
10 : bvadd(7, 8, 9) : BV:32
11 : 4 : INT
12 : 0 : BOOL
13 : select(5, 6, 10, 11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(1, 15, 16) : BV:32
18 : 4294967288 { -8 } : BV:32
19 : bvadd(7, 8, 18) : BV:32
20 : select(5, 6, 19, 11, 12) : BV:32
21 : bvadd(17, 20) : BV:32
22 : 63 : INT
23 : 32 : INT
24 : bvextract(1, 22, 23) : BV:32
25 : 4294967284 { -12 } : BV:32
26 : bvadd(7, 8, 25) : BV:32
27 : select(5, 6, 26, 11, 12) : BV:32
28 : bvadd(24, 27) : BV:32
29 : 31 : INT
30 : 0 : INT
31 : bvextract(1, 29, 30) : BV:32
32 : 4294967280 { -16 } : BV:32
33 : bvadd(7, 8, 32) : BV:32
34 : select(5, 6, 33, 11, 12) : BV:32
35 : bvadd(31, 34) : BV:32
36 : bvconcat(14, 21, 28, 35) : BV:128
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L6%1%1=>L7%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1020
1 : input.dst.exreg.5.3 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1027
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : dst_symbol_addr.2 : BV:32
12 : 4 : INT
13 : select(10, 2, 11, 12, 9) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1028
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-heap : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1030
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.1.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1031
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.2.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 for loc_id 1032
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.3 : BV:32
4 : input.dst.exreg.0.0 : BV:32
5 : 4294967280 { -16 } : BV:32
6 : bvadd(3, 4, 5) : BV:32
7 : input.dst.exreg.2.0 : BV:128
8 : 16 : INT
9 : 0 : BOOL
10 : store(1, 2, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-symbol.3.0 : MEMLABEL
12 : memmask(10, 11) : ARRAY[BV:32 -> BV:8]
=graph_with_simplified_assets.loc_to_expr_map at L7%1%1=>L8%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1001
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1002
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(2, 1) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1003
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 128000 : BV:32
14 : eq(13, 2) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1004
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : eq(2, 1) : BOOL
6 : or(4, 5) : BOOL
7 : 1 : BV:1
8 : 0 : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1005
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 4294839296 { -128000 } : BV:32
6 : bvadd(2, 5) : BV:32
7 : 31 : INT
8 : bvextract(6, 7, 7) : BV:1
9 : eq(4, 8) : BOOL
10 : bvextract(2, 7, 7) : BV:1
11 : eq(4, 10) : BOOL
12 : xor(11, 9) : BOOL
13 : and(11, 12) : BOOL
14 : iff(9, 13) : BOOL
15 : not(14) : BOOL
16 : or(3, 15) : BOOL
17 : 0 : BV:1
18 : ite(16, 4, 17) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1006
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1007
1 : 1 : BV:1
2 : input.dst.exreg.0.0 : BV:32
3 : 4294839296 { -128000 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 : BV:1
6 : input.dst.exreg.0.0 : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294839296 { -128000 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 : INT
22 : 8 : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 128000 : BV:32
26 : eq(25, 6) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1014
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : 1 : BV:1
5 : 0 : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1015
1 : 128000 : BV:32
2 : input.dst.exreg.0.0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 for loc_id 1016
1 : input.dst.exreg.0.0 : BV:32
2 : 128000 : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L8%1%1=>L9%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1020
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1021
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1022
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1023
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1024
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1025
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1026
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1034
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1035
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1036
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 for loc_id 1037
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L3%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1020
1 : input.dst.exreg.6.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1021
1 : input.dst.exreg.7.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1022
1 : input.dst.exreg.16.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1023
1 : input.dst.exreg.8.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1024
1 : input.dst.exreg.9.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1025
1 : input.dst.exreg.10.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1026
1 : input.dst.exreg.11.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1034
1 : input.dst.exreg.12.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1035
1 : input.dst.exreg.13.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1036
1 : input.dst.exreg.14.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 for loc_id 1037
1 : input.dst.exreg.15.0 : BV:1
2 : 1 : BV:1
3 : eq(1, 2) : BOOL
=graph_with_simplified_assets.loc_to_expr_map at L9%1%1=>L10%1%0 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>L10%1%1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>L10%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1014
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1015
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1016
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1017
1 : retaddr_const : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1018
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1020
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1021
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1023
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1024
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1025
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1026
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 for loc_id 1034
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%0=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 0
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1001
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1002
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1003
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1004
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1005
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1006
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1007
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1013
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 12 : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 : BV:1
6 : 1 : BV:1
7 : 10 : INT
8 : bvextract(1, 7, 7) : BV:1
9 : eq(6, 8) : BOOL
10 : ite(9, 6, 5) : BV:1
11 : 9 : INT
12 : 8 : INT
13 : bvextract(1, 11, 12) : BV:2
14 : 1 : BV:2
15 : 5 : INT
16 : bvextract(1, 15, 15) : BV:1
17 : 3 : INT
18 : bvextract(1, 17, 17) : BV:1
19 : 1 : INT
20 : bvextract(1, 19, 19) : BV:1
21 : bvconcat(4, 5, 10, 13, 14, 16, 5, 18, 5, 20, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1014
1 : 1 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1015
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 for loc_id 1016
1 : 0 : BV:1
=graph_with_simplified_assets.loc_to_expr_map at L10%1%1=>L11%1%1 done
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 4
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1017
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1018
1 : input_stack_pointer_const : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1020
1 : input.dst.exreg.5.2 : BV:16
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1021
1 : callee_save_const.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1023
1 : callee_save_const.0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1024
1 : callee_save_const.1 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1025
1 : callee_save_const.3 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1026
1 : 0 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 for loc_id 1034
1 : input.dst.exreg.0.2 : BV:32
=graph_with_simplified_assets.loc_to_expr_map at L11%1%1=>E0%0%1 done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in dst
=Loc 0 in dst.
REGMEM
dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=Loc 2 in dst.
REGMEM
dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=Loc 3 in dst.
REGMEM
dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=Loc 4 in dst.
REGMEM
dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=Loc 5 in dst.
REGMEM
dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=Loc 6 in dst.
REGMEM
dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=Loc 7 in dst.
REGMEM
dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=Loc 1001 in dst.
REGMEM
dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=Loc 1002 in dst.
REGMEM
dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=Loc 1003 in dst.
REGMEM
dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=Loc 1004 in dst.
REGMEM
dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=Loc 1005 in dst.
REGMEM
dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=Loc 1006 in dst.
REGMEM
dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=Loc 1007 in dst.
REGMEM
dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=Loc 1008 in dst.
REGMEM
dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=Loc 1009 in dst.
REGMEM
dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=Loc 1010 in dst.
REGMEM
dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=Loc 1011 in dst.
REGMEM
dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=Loc 1012 in dst.
REGMEM
dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=Loc 1013 in dst.
REGMEM
dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=Loc 1014 in dst.
REGMEM
dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=Loc 1015 in dst.
REGMEM
dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=Loc 1016 in dst.
REGMEM
dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=Loc 1017 in dst.
LLVMVAR
dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=Loc 1018 in dst.
REGMEM
dst.esp.E0%0%1
1 : input.dst.esp.E0%0%1 : BV:32
=Loc 1019 in dst.
REGMEM
dst.esp.L0%1%1
1 : input.dst.esp.L0%1%1 : BV:32
=Loc 1020 in dst.
REGMEM
dst.hidden_reg.0
1 : input.dst.hidden_reg.0 : BV:32
=Loc 1021 in dst.
REGMEM
dst.hidden_reg.1
1 : input.dst.hidden_reg.1 : BOOL
=Loc 1022 in dst.
REGMEM
dst.hidden_reg.10
1 : input.dst.hidden_reg.10 : BOOL
=Loc 1023 in dst.
REGMEM
dst.hidden_reg.2
1 : input.dst.hidden_reg.2 : BOOL
=Loc 1024 in dst.
REGMEM
dst.hidden_reg.3
1 : input.dst.hidden_reg.3 : BOOL
=Loc 1025 in dst.
REGMEM
dst.hidden_reg.4
1 : input.dst.hidden_reg.4 : BOOL
=Loc 1026 in dst.
REGMEM
dst.hidden_reg.5
1 : input.dst.hidden_reg.5 : BOOL
=Loc 1027 in dst.
SLOT
=memname
dst.mem
=addr
1 : dst_symbol_addr.2 : BV:32
=nbytes
4
=bigendian
false
=Loc 1028 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-heap
=Loc 1029 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-esp
=Loc 1030 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.1.0
=Loc 1031 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.2.0
=Loc 1032 in dst.
MASKED
=memname
dst.mem
=memlabel
memlabel-mem-symbol.3.0
=Loc 1033 in dst.
SLOT
=memname
dst.mem
=addr
1 : input_stack_pointer_const : BV:32
=nbytes
4
=bigendian
false
=Loc 1034 in dst.
REGMEM
dst.hidden_reg.6
1 : input.dst.hidden_reg.6 : BOOL
=Loc 1035 in dst.
REGMEM
dst.hidden_reg.7
1 : input.dst.hidden_reg.7 : BOOL
=Loc 1036 in dst.
REGMEM
dst.hidden_reg.8
1 : input.dst.hidden_reg.8 : BOOL
=Loc 1037 in dst.
REGMEM
dst.hidden_reg.9
1 : input.dst.hidden_reg.9 : BOOL
=Loc 1038 in dst.
REGMEM
econd
1 : input.econd : BOOL

=Alias analysis results in dst
=Alias analysis result in dst at L0%0%1
=Alias analysis result in dst at L0%0%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 3 (input.dst.exreg.0.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 4 (input.dst.exreg.0.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 5 (input.dst.exreg.0.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 6 (input.dst.exreg.0.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 7 (input.dst.exreg.0.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1014 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1015 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1016 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1017 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1018 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1019 (input.dst.esp.L0%1%1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1025 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1026 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1027 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1028 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1029 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1030 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1031 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1033 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1034 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1035 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1036 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1037 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L0%0%1 for loc 1038 (input.econd)
nullptr
=Alias analysis result in dst at L3%1%0
=Alias analysis result in dst at L3%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L3%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1014 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1015 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1016 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1017 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1018 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1019 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L3%1%0 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1025 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1026 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1027 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1028 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1029 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1030 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1031 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1033 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L3%1%0 for loc 1034 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1035 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1036 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1037 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L3%1%0 for loc 1038 (input.econd)
nullptr
=Alias analysis result in dst at L9%1%1
=Alias analysis result in dst at L9%1%1 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L9%1%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%1 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1014 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1015 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1016 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1017 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1018 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1019 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L9%1%1 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1025 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1026 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1027 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1028 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1029 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1030 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1031 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1033 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L9%1%1 for loc 1034 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1035 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1036 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1037 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L9%1%1 for loc 1038 (input.econd)
nullptr
=Alias analysis result in dst at L10%1%0
=Alias analysis result in dst at L10%1%0 for loc 0 (input.dst.exreg.0.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%0 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L10%1%0 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%0 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%0 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%0 for loc 1001 (input.dst.exreg.10.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1002 (input.dst.exreg.11.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1003 (input.dst.exreg.12.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1004 (input.dst.exreg.13.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1005 (input.dst.exreg.14.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1006 (input.dst.exreg.15.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1007 (input.dst.exreg.16.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1014 (input.dst.exreg.7.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1015 (input.dst.exreg.8.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1016 (input.dst.exreg.9.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1017 (input.dst.llvm-indir_tgt)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1018 (input.dst.esp.E0%0%1)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1019 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at L10%1%0 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1025 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1026 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1027 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1028 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1029 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1030 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1031 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1032 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1033 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at L10%1%0 for loc 1034 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1035 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1036 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1037 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at L10%1%0 for loc 1038 (input.econd)
nullptr
=Alias analysis result in dst at E0%0%1
=Alias analysis result in dst at E0%0%1 for loc 0 (input.dst.exreg.0.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 2 (input.dst.exreg.0.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 3 (input.dst.exreg.0.3)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 4 (input.dst.exreg.0.4)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 5 (input.dst.exreg.0.5)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 6 (input.dst.exreg.0.6)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 7 (input.dst.exreg.0.7)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1001 (input.dst.exreg.10.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1002 (input.dst.exreg.11.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1003 (input.dst.exreg.12.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1004 (input.dst.exreg.13.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1005 (input.dst.exreg.14.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1006 (input.dst.exreg.15.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1007 (input.dst.exreg.16.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1008 (input.dst.exreg.2.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1009 (input.dst.exreg.2.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1010 (input.dst.exreg.2.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1011 (input.dst.exreg.5.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1012 (input.dst.exreg.5.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1013 (input.dst.exreg.6.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1014 (input.dst.exreg.7.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1015 (input.dst.exreg.8.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1016 (input.dst.exreg.9.0)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at E0%0%1 for loc 1017 (input.dst.llvm-indir_tgt)
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1018 (input.dst.esp.E0%0%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1019 (input.dst.esp.L0%1%1)
lr_status
lr_status_linearly_related(esp, ; )
=Alias analysis result in dst at E0%0%1 for loc 1020 (input.dst.hidden_reg.0)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1021 (input.dst.hidden_reg.1)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1022 (input.dst.hidden_reg.10)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1023 (input.dst.hidden_reg.2)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1024 (input.dst.hidden_reg.3)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1025 (input.dst.hidden_reg.4)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1026 (input.dst.hidden_reg.5)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1027 (select(input.dst.mem, memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap, dst_symbol_addr.2, 4, false))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1028 (memmask(input.dst.mem, memlabel-mem-heap))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1029 (memmask(input.dst.mem, memlabel-mem-esp))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1030 (memmask(input.dst.mem, memlabel-mem-symbol.1.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1031 (memmask(input.dst.mem, memlabel-mem-symbol.2.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1032 (memmask(input.dst.mem, memlabel-mem-symbol.3.0))
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1033 (select(input.dst.mem, memlabel-mem-esp, input_stack_pointer_const, 4, false))
lr_status
lr_status_bottom(symbol.1, symbol.2, symbol.3, ; memlabel-mem-heap, )
=Alias analysis result in dst at E0%0%1 for loc 1034 (input.dst.hidden_reg.6)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1035 (input.dst.hidden_reg.7)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1036 (input.dst.hidden_reg.8)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1037 (input.dst.hidden_reg.9)
nullptr
=Alias analysis result in dst at E0%0%1 for loc 1038 (input.econd)
nullptr

=Liveness in dst
=live locs at L0%0%1
1027, 1028, 1030, 1031, 1032
=live locs at L3%1%0
0, 1009, 1027, 1028, 1030, 1031, 1032
=live locs at L9%1%1
0, 1009, 1015, 1027, 1028, 1030, 1031, 1032
=live locs at L10%1%0
1027, 1028, 1030, 1031, 1032
=live locs at E0%0%1
0, 1017, 1027, 1028, 1030, 1031, 1032

=Available expressions in dst

=sprel_maps in dst
=sprel_map at L0%0%1 in dst
=sprel_map at L3%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
=loc 1033
17387 : retaddr_const : BV:32
=sprel_map at L9%1%1 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
=loc 1033
17387 : retaddr_const : BV:32
=sprel_map at L10%1%0 in dst
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
=loc 1033
17387 : retaddr_const : BV:32
=sprel_map at E0%0%1 in dst
=loc 0
17389 : 0 : BV:32
=loc 3
17251 : callee_save_const.2 : BV:32
=loc 4
17386 : input_stack_pointer_const : BV:32
17424 : 4 : BV:32
17986 : bvadd(17386, 17424) : BV:32
=loc 5
17249 : callee_save_const.0 : BV:32
=loc 6
17250 : callee_save_const.1 : BV:32
=loc 7
17252 : callee_save_const.3 : BV:32
=loc 1001
17608 : 0 : BV:1
=loc 1002
17608 : 0 : BV:1
=loc 1003
17608 : 0 : BV:1
=loc 1004
17605 : 1 : BV:1
=loc 1005
17605 : 1 : BV:1
=loc 1006
17605 : 1 : BV:1
=loc 1007
17605 : 1 : BV:1
=loc 1014
17605 : 1 : BV:1
=loc 1015
17608 : 0 : BV:1
=loc 1016
17608 : 0 : BV:1
=loc 1017
17387 : retaddr_const : BV:32
=loc 1018
17386 : input_stack_pointer_const : BV:32
17424 : 4 : BV:32
17986 : bvadd(17386, 17424) : BV:32
=loc 1019
17386 : input_stack_pointer_const : BV:32
=loc 1033
17387 : retaddr_const : BV:32
=graph_with_aliasing_done
=String-contents:
=Nextpc-map:
=TFGdone
=eqcheck_info
=eqcheck
=proof_filename vpvts_vpvts.gcc.eqchecker.O3.i386.ALL.proof
=function_name vpvts
=fixed_reg_mappings begin
0 : 0 : 0
0 : 4 : 4
=fixed_reg_mappings end
=rodata_map begin
=rodata_map end
=dst_iseq
.i0: movd %exvr5.3w:C_SYMBOL0,%exvr2.2 #
.i1: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i2: pshufd $0x0,%exvr2.2,%exvr2.1 #
.i3: movdqa %exvr5.3w:C_SYMBOL1(%exvr0.0d),%exvr2.0 #
.i4: addl $0x10,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i5: pmulld %exvr2.1,%exvr2.0 #
.i6: paddd %exvr5.3w:C_SYMBOL2*1+-16/umask/32(%exvr0.0d),%exvr2.0 #
.i7: movaps %exvr2.0,%exvr5.3w:C_SYMBOL2*1+-16/umask/32(%exvr0.0d) #
.i8: cmpl $0x1f400,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i9: jne .i3 #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i10: xorl %exvr0.0d,%exvr0.0d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i11: retl  #%exvr0.4d,%exvr5.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
=dst_iseq done
=dst_insn_pcs
0 : 0x0
1 : 0x4
2 : 0xc
3 : 0xe
4 : 0x13
5 : 0x17
6 : 0x18
7 : 0x20
8 : 0x23
9 : 0x28
10 : 0x30
11 : 0x37
=dst_insn_pcs done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : s : 4 : 4 : 0
C_SYMBOL3 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.3.0_begin : BV:32
2 : memlabel-mem-symbol.3.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-esp_begin : BV:32
11 : memlabel-mem-esp_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : stack.size : BV:32
15 : bvadd(14, 5) : BV:32
16 : bvadd(10, 15) : BV:32
17 : eq(11, 16) : BOOL
18 : and(13, 17) : BOOL
19 : memlabel-mem-symbol.1.0_begin : BV:32
20 : memlabel-mem-symbol.1.0_end : BV:32
21 : bvule(19, 20) : BOOL
22 : and(18, 21) : BOOL
23 : bvadd(19, 6) : BV:32
24 : eq(20, 23) : BOOL
25 : and(22, 24) : BOOL
26 : memlabel-mem-symbol.2.0_begin : BV:32
27 : memlabel-mem-symbol.2.0_end : BV:32
28 : bvule(26, 27) : BOOL
29 : and(25, 28) : BOOL
30 : 4 : BV:32
31 : bvadd(30, 5) : BV:32
32 : bvadd(26, 31) : BV:32
33 : eq(27, 32) : BOOL
34 : and(29, 33) : BOOL
35 : bvuge(1, 10) : BOOL
36 : bvule(1, 11) : BOOL
37 : and(35, 36) : BOOL
38 : bvuge(2, 10) : BOOL
39 : bvule(2, 11) : BOOL
40 : and(38, 39) : BOOL
41 : not(40) : BOOL
42 : andnot1(37, 41) : BOOL
43 : bvuge(1, 19) : BOOL
44 : bvule(1, 20) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(2, 19) : BOOL
47 : bvule(2, 20) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(1, 26) : BOOL
53 : bvule(1, 27) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(2, 26) : BOOL
56 : bvule(2, 27) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(10, 1) : BOOL
62 : bvule(10, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(11, 1) : BOOL
65 : bvule(11, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(10, 19) : BOOL
71 : bvule(10, 20) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(11, 19) : BOOL
74 : bvule(11, 20) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : bvuge(10, 26) : BOOL
80 : bvule(10, 27) : BOOL
81 : and(79, 80) : BOOL
82 : bvuge(11, 26) : BOOL
83 : bvule(11, 27) : BOOL
84 : and(82, 83) : BOOL
85 : not(84) : BOOL
86 : andnot1(81, 85) : BOOL
87 : and(78, 86) : BOOL
88 : bvuge(19, 1) : BOOL
89 : bvule(19, 2) : BOOL
90 : and(88, 89) : BOOL
91 : bvuge(20, 1) : BOOL
92 : bvule(20, 2) : BOOL
93 : and(91, 92) : BOOL
94 : not(93) : BOOL
95 : andnot1(90, 94) : BOOL
96 : and(87, 95) : BOOL
97 : bvuge(19, 10) : BOOL
98 : bvule(19, 11) : BOOL
99 : and(97, 98) : BOOL
100 : bvuge(20, 10) : BOOL
101 : bvule(20, 11) : BOOL
102 : and(100, 101) : BOOL
103 : not(102) : BOOL
104 : andnot1(99, 103) : BOOL
105 : and(96, 104) : BOOL
106 : bvuge(19, 26) : BOOL
107 : bvule(19, 27) : BOOL
108 : and(106, 107) : BOOL
109 : bvuge(20, 26) : BOOL
110 : bvule(20, 27) : BOOL
111 : and(109, 110) : BOOL
112 : not(111) : BOOL
113 : andnot1(108, 112) : BOOL
114 : and(105, 113) : BOOL
115 : bvuge(26, 1) : BOOL
116 : bvule(26, 2) : BOOL
117 : and(115, 116) : BOOL
118 : bvuge(27, 1) : BOOL
119 : bvule(27, 2) : BOOL
120 : and(118, 119) : BOOL
121 : not(120) : BOOL
122 : andnot1(117, 121) : BOOL
123 : and(114, 122) : BOOL
124 : bvuge(26, 10) : BOOL
125 : bvule(26, 11) : BOOL
126 : and(124, 125) : BOOL
127 : bvuge(27, 10) : BOOL
128 : bvule(27, 11) : BOOL
129 : and(127, 128) : BOOL
130 : not(129) : BOOL
131 : andnot1(126, 130) : BOOL
132 : and(123, 131) : BOOL
133 : bvuge(26, 19) : BOOL
134 : bvule(26, 20) : BOOL
135 : and(133, 134) : BOOL
136 : bvuge(27, 19) : BOOL
137 : bvule(27, 20) : BOOL
138 : and(136, 137) : BOOL
139 : not(138) : BOOL
140 : andnot1(135, 139) : BOOL
141 : and(132, 140) : BOOL
142 : and(34, 141) : BOOL
143 : symbol.3 : BV:32
144 : 15 : BV:32
145 : bvand(143, 144) : BV:32
146 : 0 : BV:32
147 : eq(145, 146) : BOOL
148 : and(142, 147) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 144) : BV:32
151 : eq(150, 146) : BOOL
152 : and(148, 151) : BOOL
153 : symbol.2 : BV:32
154 : 3 : BV:32
155 : bvand(153, 154) : BV:32
156 : eq(155, 146) : BOOL
157 : and(152, 156) : BOOL
158 : eq(149, 19) : BOOL
159 : eq(153, 26) : BOOL
160 : and(158, 159) : BOOL
161 : eq(143, 1) : BOOL
162 : and(160, 161) : BOOL
163 : and(157, 162) : BOOL
164 : input_stack_pointer_const : BV:32
165 : bvule(10, 164) : BOOL
166 : bvule(164, 11) : BOOL
167 : and(165, 166) : BOOL
168 : bvadd(164, 154) : BV:32
169 : eq(168, 11) : BOOL
170 : and(167, 169) : BOOL
171 : and(163, 170) : BOOL
172 : 4294963200 { -4096 } : BV:32
173 : bvand(10, 172) : BV:32
174 : eq(173, 10) : BOOL
175 : 1 : BV:32
176 : bvadd(11, 175) : BV:32
177 : bvand(176, 172) : BV:32
178 : eq(177, 176) : BOOL
179 : and(174, 178) : BOOL
180 : and(171, 179) : BOOL
181 : dst_symbol_addr.1 : BV:32
182 : eq(149, 181) : BOOL
183 : dst_symbol_addr.2 : BV:32
184 : eq(153, 183) : BOOL
185 : and(182, 184) : BOOL
186 : dst_symbol_addr.3 : BV:32
187 : eq(143, 186) : BOOL
188 : and(185, 187) : BOOL
189 : and(180, 188) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 25037824 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 33452028 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : symbol.3 : BV:32
9 : 4064224 : BV:32
10 : eq(8, 9) : BOOL
11 : and(7, 10) : BOOL
12 : dst_symbol_addr.1 : BV:32
13 : eq(12, 2) : BOOL
14 : and(11, 13) : BOOL
15 : dst_symbol_addr.2 : BV:32
16 : eq(15, 5) : BOOL
17 : and(14, 16) : BOOL
18 : dst_symbol_addr.3 : BV:32
19 : eq(18, 9) : BOOL
20 : and(17, 19) : BOOL
21 : input_stack_pointer_const : BV:32
22 : 4286459900 { -8507396 } : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.3.0_begin : BV:32
26 : eq(25, 9) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.3.0_end : BV:32
29 : 4192223 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-esp_begin : BV:32
33 : 58597376 : BV:32
34 : eq(32, 33) : BOOL
35 : and(31, 34) : BOOL
36 : memlabel-mem-esp_end : BV:32
37 : 4286459903 { -8507393 } : BV:32
38 : eq(36, 37) : BOOL
39 : and(35, 38) : BOOL
40 : stack.size : BV:32
41 : 4227862528 { -67104768 } : BV:32
42 : eq(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : memlabel-mem-symbol.1.0_begin : BV:32
45 : eq(44, 2) : BOOL
46 : and(43, 45) : BOOL
47 : memlabel-mem-symbol.1.0_end : BV:32
48 : 25165823 : BV:32
49 : eq(47, 48) : BOOL
50 : and(46, 49) : BOOL
51 : memlabel-mem-symbol.2.0_begin : BV:32
52 : eq(51, 5) : BOOL
53 : and(50, 52) : BOOL
54 : memlabel-mem-symbol.2.0_end : BV:32
55 : 33452031 : BV:32
56 : eq(54, 55) : BOOL
57 : and(53, 56) : BOOL
=use_concrete_assertion : 1
=Memlabel assertions done
=llvm2ir 0
=eqcheck done
=graph_with_guessing
=Nodes: L0%0%1_L0%0%1 Lfor.body%1%1_L3%1%0 E0%0%1_E0%0%1
=Edges:
L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
Lfor.body%1%1_L3%1%0 => E0%0%1_E0%0%1
=graph done
=Node outputs: E0%0%1_E0%0%1
=Node outputs done for E0%0%1_E0%0%1
=input_outputs done
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : s : 4 : 4 : 0
C_SYMBOL3 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=StartState:
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:80
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:80
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:80
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:80
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:80
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:80
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:80
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:80
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:16
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:16
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:11
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:48
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=state_end

=Node assumes and asserts: L0%0%1_L0%0%1
=L0%0%1_L0%0%1 assume pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=L0%0%1_L0%0%1 assume predicate_set done
=L0%0%1_L0%0%1 assert predicate_set done
=Node assumes and asserts: Lfor.body%1%1_L3%1%0
=Lfor.body%1%1_L3%1%0 assume predicate_set done
=Lfor.body%1%1_L3%1%0 assert predicate_set done
=Node assumes and asserts: E0%0%1_E0%0%1
=E0%0%1_E0%0%1 assume predicate_set done
=E0%0%1_E0%0%1 assert pred 0
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=E0%0%1_E0%0%1 assert pred 1
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=E0%0%1_E0%0%1 assert pred 2
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.llvm-indir_tgt : BV:32
=predicate done
=E0%0%1_E0%0%1 assert predicate_set done
=Global assumes
=global assume predicate_set done
=memlabel_map.0
mlvar.dst.0 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.1
mlvar.dst.1 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.2
mlvar.dst.2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.3
mlvar.dst.3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=memlabel_map.4
mlvar.dst.4 : memlabel-mem-esp
=memlabel_map.5
mlvar.dst.5 : memlabel-mem-esp
=memlabel_map.6
mlvar.llvm.vpvts.0 : memlabel-mem-symbol.1.0
=memlabel_map.7
mlvar.llvm.vpvts.1 : memlabel-mem-symbol.2.0
=memlabel_map.8
mlvar.llvm.vpvts.2 : memlabel-mem-symbol.3.0
=memlabel_map.9
mlvar.llvm.vpvts.3 : memlabel-mem-symbol.3.0
=Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset done

=Edge: Lfor.body%1%1_L3%1%0 => E0%0%1_E0%0%1
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to E0%0%1 at unroll 8 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1)))))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))+(((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))+((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.end%1%1)*(Lfor.end%1%1=>E0%0%1))))))))))))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge3
=Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.end%1%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
2 : not(1) : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=Edge.src_tfg_full_pathset.graph_edge_composition.Edge4
=Edge.src_tfg_full_pathset.Edge: Lfor.end%1%1 => E0%0%1
=Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=state_end
=Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=Edge.src_tfg_full_pathset.Edge.Assumes.end
=Edge.src_tfg_full_pathset.Edge.te_comment
0:1:  ret i32 0, !dbg !31
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L3%1%0 to E0%0%1 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*((L9%1%1=>L10%1%0)*(L10%1%0=>E0%0%1)))
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L10%1%0
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=Edge.dst_tfg_full_pathset.graph_edge_composition.Edge2
=Edge.dst_tfg_full_pathset.Edge: L10%1%0 => E0%0%1
=Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.esp.E0%0%1
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.hidden_reg.2
1 : input.dst.exreg.0.5 : BV:32
=dst.hidden_reg.6
1 : input.dst.exreg.0.2 : BV:32
=dst.hidden_reg.1
1 : input.dst.exreg.0.3 : BV:32
=dst.hidden_reg.3
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.hidden_reg.0
1 : input.dst.exreg.5.2 : BV:16
=dst.hidden_reg.4
1 : input.dst.exreg.0.7 : BV:32
=dst.hidden_reg.5
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=dst.llvm-indir_tgt
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.4 : MEMLABEL
3 : input.dst.exreg.0.4 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=state_end
=Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=Edge.dst_tfg_full_pathset.Edge.Assumes.end
=Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)
=Edge.dst_tfg_full_pathset done

=graph_with_predicates_done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_assert_preds
=predicate_map
=predicates at E0%0%1_E0%0%1
=predicates at E0%0%1_E0%0%1 predicate# 0
=Comment
exit.src.llvm-indir_tgt
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : retaddr_const : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 1
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicates at E0%0%1_E0%0%1 predicate# 2
=Comment
exit.llvm-%ret-reg
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=predicates at E0%0%1_E0%0%1 done
=predicate_map done
=graph_with_simplified_assets.simplified_assert_preds done
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets.loc_to_expr_map done
=graph_with_simplified_assets done

=Locs in vpvts

=Alias analysis results in vpvts
=Alias analysis result in vpvts at L0%0%1_L0%0%1
=Alias analysis result in vpvts at Lfor.body%1%1_L3%1%0
=Alias analysis result in vpvts at E0%0%1_E0%0%1

=Liveness in vpvts
=live locs at L0%0%1_L0%0%1

=live locs at Lfor.body%1%1_L3%1%0

=live locs at E0%0%1_E0%0%1


=Available expressions in vpvts

=sprel_maps in vpvts
=sprel_map at L0%0%1_L0%0%1 in vpvts
=sprel_map at Lfor.body%1%1_L3%1%0 in vpvts
=sprel_map at E0%0%1_E0%0%1 in vpvts
=graph_with_aliasing_done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : b : 128000 : 16 : 0
C_SYMBOL2 : s : 4 : 4 : 0
C_SYMBOL3 : a : 128000 : 16 : 0
=Symbol-map done
=Locals-map:
=Locals-map done
=rodata_map begin
=rodata_map end
=assertion
1 : memlabel-mem-symbol.3.0_begin : BV:32
2 : memlabel-mem-symbol.3.0_end : BV:32
3 : bvule(1, 2) : BOOL
4 : 128000 : BV:32
5 : 4294967295 { -1 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : memlabel-mem-esp_begin : BV:32
11 : memlabel-mem-esp_end : BV:32
12 : bvule(10, 11) : BOOL
13 : and(9, 12) : BOOL
14 : stack.size : BV:32
15 : bvadd(14, 5) : BV:32
16 : bvadd(10, 15) : BV:32
17 : eq(11, 16) : BOOL
18 : and(13, 17) : BOOL
19 : memlabel-mem-symbol.1.0_begin : BV:32
20 : memlabel-mem-symbol.1.0_end : BV:32
21 : bvule(19, 20) : BOOL
22 : and(18, 21) : BOOL
23 : bvadd(19, 6) : BV:32
24 : eq(20, 23) : BOOL
25 : and(22, 24) : BOOL
26 : memlabel-mem-symbol.2.0_begin : BV:32
27 : memlabel-mem-symbol.2.0_end : BV:32
28 : bvule(26, 27) : BOOL
29 : and(25, 28) : BOOL
30 : 4 : BV:32
31 : bvadd(30, 5) : BV:32
32 : bvadd(26, 31) : BV:32
33 : eq(27, 32) : BOOL
34 : and(29, 33) : BOOL
35 : bvuge(1, 10) : BOOL
36 : bvule(1, 11) : BOOL
37 : and(35, 36) : BOOL
38 : bvuge(2, 10) : BOOL
39 : bvule(2, 11) : BOOL
40 : and(38, 39) : BOOL
41 : not(40) : BOOL
42 : andnot1(37, 41) : BOOL
43 : bvuge(1, 19) : BOOL
44 : bvule(1, 20) : BOOL
45 : and(43, 44) : BOOL
46 : bvuge(2, 19) : BOOL
47 : bvule(2, 20) : BOOL
48 : and(46, 47) : BOOL
49 : not(48) : BOOL
50 : andnot1(45, 49) : BOOL
51 : and(42, 50) : BOOL
52 : bvuge(1, 26) : BOOL
53 : bvule(1, 27) : BOOL
54 : and(52, 53) : BOOL
55 : bvuge(2, 26) : BOOL
56 : bvule(2, 27) : BOOL
57 : and(55, 56) : BOOL
58 : not(57) : BOOL
59 : andnot1(54, 58) : BOOL
60 : and(51, 59) : BOOL
61 : bvuge(10, 1) : BOOL
62 : bvule(10, 2) : BOOL
63 : and(61, 62) : BOOL
64 : bvuge(11, 1) : BOOL
65 : bvule(11, 2) : BOOL
66 : and(64, 65) : BOOL
67 : not(66) : BOOL
68 : andnot1(63, 67) : BOOL
69 : and(60, 68) : BOOL
70 : bvuge(10, 19) : BOOL
71 : bvule(10, 20) : BOOL
72 : and(70, 71) : BOOL
73 : bvuge(11, 19) : BOOL
74 : bvule(11, 20) : BOOL
75 : and(73, 74) : BOOL
76 : not(75) : BOOL
77 : andnot1(72, 76) : BOOL
78 : and(69, 77) : BOOL
79 : bvuge(10, 26) : BOOL
80 : bvule(10, 27) : BOOL
81 : and(79, 80) : BOOL
82 : bvuge(11, 26) : BOOL
83 : bvule(11, 27) : BOOL
84 : and(82, 83) : BOOL
85 : not(84) : BOOL
86 : andnot1(81, 85) : BOOL
87 : and(78, 86) : BOOL
88 : bvuge(19, 1) : BOOL
89 : bvule(19, 2) : BOOL
90 : and(88, 89) : BOOL
91 : bvuge(20, 1) : BOOL
92 : bvule(20, 2) : BOOL
93 : and(91, 92) : BOOL
94 : not(93) : BOOL
95 : andnot1(90, 94) : BOOL
96 : and(87, 95) : BOOL
97 : bvuge(19, 10) : BOOL
98 : bvule(19, 11) : BOOL
99 : and(97, 98) : BOOL
100 : bvuge(20, 10) : BOOL
101 : bvule(20, 11) : BOOL
102 : and(100, 101) : BOOL
103 : not(102) : BOOL
104 : andnot1(99, 103) : BOOL
105 : and(96, 104) : BOOL
106 : bvuge(19, 26) : BOOL
107 : bvule(19, 27) : BOOL
108 : and(106, 107) : BOOL
109 : bvuge(20, 26) : BOOL
110 : bvule(20, 27) : BOOL
111 : and(109, 110) : BOOL
112 : not(111) : BOOL
113 : andnot1(108, 112) : BOOL
114 : and(105, 113) : BOOL
115 : bvuge(26, 1) : BOOL
116 : bvule(26, 2) : BOOL
117 : and(115, 116) : BOOL
118 : bvuge(27, 1) : BOOL
119 : bvule(27, 2) : BOOL
120 : and(118, 119) : BOOL
121 : not(120) : BOOL
122 : andnot1(117, 121) : BOOL
123 : and(114, 122) : BOOL
124 : bvuge(26, 10) : BOOL
125 : bvule(26, 11) : BOOL
126 : and(124, 125) : BOOL
127 : bvuge(27, 10) : BOOL
128 : bvule(27, 11) : BOOL
129 : and(127, 128) : BOOL
130 : not(129) : BOOL
131 : andnot1(126, 130) : BOOL
132 : and(123, 131) : BOOL
133 : bvuge(26, 19) : BOOL
134 : bvule(26, 20) : BOOL
135 : and(133, 134) : BOOL
136 : bvuge(27, 19) : BOOL
137 : bvule(27, 20) : BOOL
138 : and(136, 137) : BOOL
139 : not(138) : BOOL
140 : andnot1(135, 139) : BOOL
141 : and(132, 140) : BOOL
142 : and(34, 141) : BOOL
143 : symbol.3 : BV:32
144 : 15 : BV:32
145 : bvand(143, 144) : BV:32
146 : 0 : BV:32
147 : eq(145, 146) : BOOL
148 : and(142, 147) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 144) : BV:32
151 : eq(150, 146) : BOOL
152 : and(148, 151) : BOOL
153 : symbol.2 : BV:32
154 : 3 : BV:32
155 : bvand(153, 154) : BV:32
156 : eq(155, 146) : BOOL
157 : and(152, 156) : BOOL
158 : eq(149, 19) : BOOL
159 : eq(153, 26) : BOOL
160 : and(158, 159) : BOOL
161 : eq(143, 1) : BOOL
162 : and(160, 161) : BOOL
163 : and(157, 162) : BOOL
164 : input_stack_pointer_const : BV:32
165 : bvule(10, 164) : BOOL
166 : bvule(164, 11) : BOOL
167 : and(165, 166) : BOOL
168 : bvadd(164, 154) : BV:32
169 : eq(168, 11) : BOOL
170 : and(167, 169) : BOOL
171 : and(163, 170) : BOOL
172 : 4294963200 { -4096 } : BV:32
173 : bvand(10, 172) : BV:32
174 : eq(173, 10) : BOOL
175 : 1 : BV:32
176 : bvadd(11, 175) : BV:32
177 : bvand(176, 172) : BV:32
178 : eq(177, 176) : BOOL
179 : and(174, 178) : BOOL
180 : and(171, 179) : BOOL
181 : dst_symbol_addr.1 : BV:32
182 : eq(149, 181) : BOOL
183 : dst_symbol_addr.2 : BV:32
184 : eq(153, 183) : BOOL
185 : and(182, 184) : BOOL
186 : dst_symbol_addr.3 : BV:32
187 : eq(143, 186) : BOOL
188 : and(185, 187) : BOOL
189 : and(180, 188) : BOOL
=concrete_assertion
1 : symbol.1 : BV:32
2 : 25037824 : BV:32
3 : eq(1, 2) : BOOL
4 : symbol.2 : BV:32
5 : 33452028 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : symbol.3 : BV:32
9 : 4064224 : BV:32
10 : eq(8, 9) : BOOL
11 : and(7, 10) : BOOL
12 : dst_symbol_addr.1 : BV:32
13 : eq(12, 2) : BOOL
14 : and(11, 13) : BOOL
15 : dst_symbol_addr.2 : BV:32
16 : eq(15, 5) : BOOL
17 : and(14, 16) : BOOL
18 : dst_symbol_addr.3 : BV:32
19 : eq(18, 9) : BOOL
20 : and(17, 19) : BOOL
21 : input_stack_pointer_const : BV:32
22 : 4286459900 { -8507396 } : BV:32
23 : eq(21, 22) : BOOL
24 : and(20, 23) : BOOL
25 : memlabel-mem-symbol.3.0_begin : BV:32
26 : eq(25, 9) : BOOL
27 : and(24, 26) : BOOL
28 : memlabel-mem-symbol.3.0_end : BV:32
29 : 4192223 : BV:32
30 : eq(28, 29) : BOOL
31 : and(27, 30) : BOOL
32 : memlabel-mem-esp_begin : BV:32
33 : 58597376 : BV:32
34 : eq(32, 33) : BOOL
35 : and(31, 34) : BOOL
36 : memlabel-mem-esp_end : BV:32
37 : 4286459903 { -8507393 } : BV:32
38 : eq(36, 37) : BOOL
39 : and(35, 38) : BOOL
40 : stack.size : BV:32
41 : 4227862528 { -67104768 } : BV:32
42 : eq(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : memlabel-mem-symbol.1.0_begin : BV:32
45 : eq(44, 2) : BOOL
46 : and(43, 45) : BOOL
47 : memlabel-mem-symbol.1.0_end : BV:32
48 : 25165823 : BV:32
49 : eq(47, 48) : BOOL
50 : and(46, 49) : BOOL
51 : memlabel-mem-symbol.2.0_begin : BV:32
52 : eq(51, 5) : BOOL
53 : and(50, 52) : BOOL
54 : memlabel-mem-symbol.2.0_end : BV:32
55 : 33452031 : BV:32
56 : eq(54, 55) : BOOL
57 : and(53, 56) : BOOL
=use_concrete_assertion : 0
=Memlabel assertions done
=counterexamples at pc L0%0%1_L0%0%1
=pc L0%0%1_L0%0%1 nodece 0
=pc L0%0%1_L0%0%1 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 0 nodece_path
=pc L0%0%1_L0%0%1 nodece 0 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 0 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1714636915
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1
=pc L0%0%1_L0%0%1 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 1 nodece_path
=pc L0%0%1_L0%0%1 nodece 1 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 1 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2
=pc L0%0%1_L0%0%1 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 2 nodece_path
=pc L0%0%1_L0%0%1 nodece 2 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 2 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3
=pc L0%0%1_L0%0%1 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 7, ( 33452030 ) -> 32, ( 25037828 ) -> 136, ( 25037829 ) -> 88, ( 25037830 ) -> 108, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 7, ( 33452030 ) -> 32, ( 25037828 ) -> 136, ( 25037829 ) -> 88, ( 25037830 ) -> 108, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 7, ( 33452030 ) -> 32, ( 25037828 ) -> 136, ( 25037829 ) -> 88, ( 25037830 ) -> 108, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 7100552 : BV:32
=unaliased_memslot.0
1 : 2097159 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 3 nodece_path
=pc L0%0%1_L0%0%1 nodece 3 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 3 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 7, ( 33452030 ) -> 32, ( 25037828 ) -> 136, ( 25037829 ) -> 88, ( 25037830 ) -> 108, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 7, ( 33452030 ) -> 32, ( 25037828 ) -> 136, ( 25037829 ) -> 88, ( 25037830 ) -> 108, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 7, ( 33452030 ) -> 32, ( 25037828 ) -> 136, ( 25037829 ) -> 88, ( 25037830 ) -> 108, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 7100552 : BV:32
=unaliased_memslot.0
1 : 2097159 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4
=pc L0%0%1_L0%0%1 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 255, ( 33452031 ) -> 255, ( 33452029 ) -> 255, ( 33452030 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 255, ( 33452031 ) -> 255, ( 33452029 ) -> 255, ( 33452030 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 255, ( 33452031 ) -> 255, ( 33452029 ) -> 255, ( 33452030 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 4 nodece_path
=pc L0%0%1_L0%0%1 nodece 4 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 4 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 255, ( 33452031 ) -> 255, ( 33452029 ) -> 255, ( 33452030 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 255, ( 33452031 ) -> 255, ( 33452029 ) -> 255, ( 33452030 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 255, ( 33452031 ) -> 255, ( 33452029 ) -> 255, ( 33452030 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5
=pc L0%0%1_L0%0%1 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452031 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452031 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452031 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1850952926
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 5 nodece_path
=pc L0%0%1_L0%0%1 nodece 5 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 5 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452031 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452031 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452031 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1850952926
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6
=pc L0%0%1_L0%0%1 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064224 ) -> 43, ( 4064225 ) -> 72, ( 4064226 ) -> 6, ( 4064227 ) -> 232, ( 4064228 ) -> 12, ( 4064229 ) -> 156, ( 4064230 ) -> 212, ( 4064231 ) -> 14, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064224 ) -> 43, ( 4064225 ) -> 72, ( 4064226 ) -> 6, ( 4064227 ) -> 232, ( 4064228 ) -> 12, ( 4064229 ) -> 156, ( 4064230 ) -> 212, ( 4064231 ) -> 14, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064224 ) -> 43, ( 4064225 ) -> 72, ( 4064226 ) -> 6, ( 4064227 ) -> 232, ( 4064228 ) -> 12, ( 4064229 ) -> 156, ( 4064230 ) -> 212, ( 4064231 ) -> 14, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 3892725803 { -402241493 } : BV:32
=unaliased_memslot.0
1 : 248814604 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 6 nodece_path
=pc L0%0%1_L0%0%1 nodece 6 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 6 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064224 ) -> 43, ( 4064225 ) -> 72, ( 4064226 ) -> 6, ( 4064227 ) -> 232, ( 4064228 ) -> 12, ( 4064229 ) -> 156, ( 4064230 ) -> 212, ( 4064231 ) -> 14, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064224 ) -> 43, ( 4064225 ) -> 72, ( 4064226 ) -> 6, ( 4064227 ) -> 232, ( 4064228 ) -> 12, ( 4064229 ) -> 156, ( 4064230 ) -> 212, ( 4064231 ) -> 14, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064224 ) -> 43, ( 4064225 ) -> 72, ( 4064226 ) -> 6, ( 4064227 ) -> 232, ( 4064228 ) -> 12, ( 4064229 ) -> 156, ( 4064230 ) -> 212, ( 4064231 ) -> 14, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 3892725803 { -402241493 } : BV:32
=unaliased_memslot.0
1 : 248814604 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7
=pc L0%0%1_L0%0%1 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064228 ) -> 255, ( 4064229 ) -> 255, ( 4064230 ) -> 255, ( 4064231 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064228 ) -> 255, ( 4064229 ) -> 255, ( 4064230 ) -> 255, ( 4064231 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064228 ) -> 255, ( 4064229 ) -> 255, ( 4064230 ) -> 255, ( 4064231 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 7 nodece_path
=pc L0%0%1_L0%0%1 nodece 7 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 7 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064228 ) -> 255, ( 4064229 ) -> 255, ( 4064230 ) -> 255, ( 4064231 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064228 ) -> 255, ( 4064229 ) -> 255, ( 4064230 ) -> 255, ( 4064231 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064228 ) -> 255, ( 4064229 ) -> 255, ( 4064230 ) -> 255, ( 4064231 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8
=pc L0%0%1_L0%0%1 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064231 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064231 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064231 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1253207672
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 8 nodece_path
=pc L0%0%1_L0%0%1 nodece 8 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 8 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064231 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064231 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064231 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1253207672
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9
=pc L0%0%1_L0%0%1 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037824 ) -> 7, ( 25037825 ) -> 8, ( 25037826 ) -> 106, ( 25037827 ) -> 33, ( 4064236 ) -> 64, ( 4064237 ) -> 189, ( 4064238 ) -> 150, ( 4064239 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037824 ) -> 7, ( 25037825 ) -> 8, ( 25037826 ) -> 106, ( 25037827 ) -> 33, ( 4064236 ) -> 64, ( 4064237 ) -> 189, ( 4064238 ) -> 150, ( 4064239 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037824 ) -> 7, ( 25037825 ) -> 8, ( 25037826 ) -> 106, ( 25037827 ) -> 33, ( 4064236 ) -> 64, ( 4064237 ) -> 189, ( 4064238 ) -> 150, ( 4064239 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 560596999 : BV:32
=unaliased_memslot.0
1 : 227982656 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242608872
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 9 nodece_path
=pc L0%0%1_L0%0%1 nodece 9 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 9 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037824 ) -> 7, ( 25037825 ) -> 8, ( 25037826 ) -> 106, ( 25037827 ) -> 33, ( 4064236 ) -> 64, ( 4064237 ) -> 189, ( 4064238 ) -> 150, ( 4064239 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037824 ) -> 7, ( 25037825 ) -> 8, ( 25037826 ) -> 106, ( 25037827 ) -> 33, ( 4064236 ) -> 64, ( 4064237 ) -> 189, ( 4064238 ) -> 150, ( 4064239 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037824 ) -> 7, ( 25037825 ) -> 8, ( 25037826 ) -> 106, ( 25037827 ) -> 33, ( 4064236 ) -> 64, ( 4064237 ) -> 189, ( 4064238 ) -> 150, ( 4064239 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 560596999 : BV:32
=unaliased_memslot.0
1 : 227982656 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242608872
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10
=pc L0%0%1_L0%0%1 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064236 ) -> 255, ( 4064237 ) -> 255, ( 4064238 ) -> 255, ( 4064239 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064236 ) -> 255, ( 4064237 ) -> 255, ( 4064238 ) -> 255, ( 4064239 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064236 ) -> 255, ( 4064237 ) -> 255, ( 4064238 ) -> 255, ( 4064239 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1137949908
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 10 nodece_path
=pc L0%0%1_L0%0%1 nodece 10 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 10 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064236 ) -> 255, ( 4064237 ) -> 255, ( 4064238 ) -> 255, ( 4064239 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064236 ) -> 255, ( 4064237 ) -> 255, ( 4064238 ) -> 255, ( 4064239 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064236 ) -> 255, ( 4064237 ) -> 255, ( 4064238 ) -> 255, ( 4064239 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1137949908
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11
=pc L0%0%1_L0%0%1 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064239 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064239 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064239 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1277849958
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 11 nodece_path
=pc L0%0%1_L0%0%1 nodece 11 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 11 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064239 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064239 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064239 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2147483648 { -2147483648 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1277849958
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12
=pc L0%0%1_L0%0%1 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037824 ) -> 1, ( 33452028 ) -> 1, ( 25037827 ) -> 16, ( 4064232 ) -> 140, ( 4064233 ) -> 24, ( 4064234 ) -> 18, ( 4064235 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037824 ) -> 1, ( 33452028 ) -> 1, ( 25037827 ) -> 16, ( 4064232 ) -> 140, ( 4064233 ) -> 24, ( 4064234 ) -> 18, ( 4064235 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037824 ) -> 1, ( 33452028 ) -> 1, ( 25037827 ) -> 16, ( 4064232 ) -> 140, ( 4064233 ) -> 24, ( 4064234 ) -> 18, ( 4064235 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 268435457 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 118626444 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
559301039
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 12 nodece_path
=pc L0%0%1_L0%0%1 nodece 12 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 12 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037824 ) -> 1, ( 33452028 ) -> 1, ( 25037827 ) -> 16, ( 4064232 ) -> 140, ( 4064233 ) -> 24, ( 4064234 ) -> 18, ( 4064235 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037824 ) -> 1, ( 33452028 ) -> 1, ( 25037827 ) -> 16, ( 4064232 ) -> 140, ( 4064233 ) -> 24, ( 4064234 ) -> 18, ( 4064235 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037824 ) -> 1, ( 33452028 ) -> 1, ( 25037827 ) -> 16, ( 4064232 ) -> 140, ( 4064233 ) -> 24, ( 4064234 ) -> 18, ( 4064235 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 268435457 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 118626444 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
559301039
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13
=pc L0%0%1_L0%0%1 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 1, ( 25037827 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 1, ( 25037827 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 1, ( 25037827 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1395132002
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 13 nodece_path
=pc L0%0%1_L0%0%1 nodece 13 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 13 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 1, ( 25037827 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 1, ( 25037827 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 1, ( 25037827 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 2147483648 { -2147483648 } : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1395132002
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14
=pc L0%0%1_L0%0%1 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 1, ( 4064232 ) -> 255, ( 4064233 ) -> 255, ( 4064234 ) -> 255, ( 4064235 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 1, ( 4064232 ) -> 255, ( 4064233 ) -> 255, ( 4064234 ) -> 255, ( 4064235 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 1, ( 4064232 ) -> 255, ( 4064233 ) -> 255, ( 4064234 ) -> 255, ( 4064235 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1186090428
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 14 nodece_path
=pc L0%0%1_L0%0%1 nodece 14 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 14 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 1, ( 4064232 ) -> 255, ( 4064233 ) -> 255, ( 4064234 ) -> 255, ( 4064235 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 1, ( 4064232 ) -> 255, ( 4064233 ) -> 255, ( 4064234 ) -> 255, ( 4064235 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 1, ( 4064232 ) -> 255, ( 4064233 ) -> 255, ( 4064234 ) -> 255, ( 4064235 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1186090428
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15
=pc L0%0%1_L0%0%1 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2004504234
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 15 nodece_path
=pc L0%0%1_L0%0%1 nodece 15 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 15 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2004504234
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16
=pc L0%0%1_L0%0%1 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1061730690
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 16 nodece_path
=pc L0%0%1_L0%0%1 nodece 16 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 16 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1061730690
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17
=pc L0%0%1_L0%0%1 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 33 , m_adder -> 10)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 33 , m_adder -> 10)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
88703954
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 17 nodece_path
=pc L0%0%1_L0%0%1 nodece 17 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 17 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 33 , m_adder -> 10)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 33 , m_adder -> 10)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
88703954
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18
=pc L0%0%1_L0%0%1 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
873524566
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 18 nodece_path
=pc L0%0%1_L0%0%1 nodece 18 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 18 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
873524566
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19
=pc L0%0%1_L0%0%1 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
37487770
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 19 nodece_path
=pc L0%0%1_L0%0%1 nodece 19 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 19 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
37487770
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20
=pc L0%0%1_L0%0%1 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2404485020
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 20 nodece_path
=pc L0%0%1_L0%0%1 nodece 20 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 20 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2404485020
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21
=pc L0%0%1_L0%0%1 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
773319847
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 21 nodece_path
=pc L0%0%1_L0%0%1 nodece 21 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 21 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
773319847
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22
=pc L0%0%1_L0%0%1 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1404196431
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 22 nodece_path
=pc L0%0%1_L0%0%1 nodece 22 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 22 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1404196431
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23
=pc L0%0%1_L0%0%1 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 96 , m_adder -> 115)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 96 , m_adder -> 115)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1709194750
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 23 nodece_path
=pc L0%0%1_L0%0%1 nodece 23 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 23 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 96 , m_adder -> 115)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 96 , m_adder -> 115)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1709194750
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24
=pc L0%0%1_L0%0%1 nodece 24 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 7, ( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 7, ( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 7, ( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
435889744
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 24 nodece_path
=pc L0%0%1_L0%0%1 nodece 24 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 24 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 7, ( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 7, ( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 7, ( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
435889744
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25
=pc L0%0%1_L0%0%1 nodece 25 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 2, ( 25037828 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 2, ( 25037828 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 2, ( 25037828 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1344593499
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 25 nodece_path
=pc L0%0%1_L0%0%1 nodece 25 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 25 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 2, ( 25037828 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 2, ( 25037828 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 2, ( 25037828 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1344593499
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26
=pc L0%0%1_L0%0%1 nodece 26 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 1, ( 25037836 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 1, ( 25037836 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 1, ( 25037836 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
378469911
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 26 nodece_path
=pc L0%0%1_L0%0%1 nodece 26 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 26 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 1, ( 25037836 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 1, ( 25037836 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 1, ( 25037836 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
378469911
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27
=pc L0%0%1_L0%0%1 nodece 27 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910300925
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 27 nodece_path
=pc L0%0%1_L0%0%1 nodece 27 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 27 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910300925
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28
=pc L0%0%1_L0%0%1 nodece 28 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2030449291
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 28 nodece_path
=pc L0%0%1_L0%0%1 nodece 28 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 28 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2030449291
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29
=pc L0%0%1_L0%0%1 nodece 29 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 207 , m_adder -> 124)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 207 , m_adder -> 124)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
947288222
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 29 nodece_path
=pc L0%0%1_L0%0%1 nodece 29 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 29 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 207 , m_adder -> 124)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 207 , m_adder -> 124)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
947288222
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30
=pc L0%0%1_L0%0%1 nodece 30 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910858270
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 30 nodece_path
=pc L0%0%1_L0%0%1 nodece 30 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 30 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910858270
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31
=pc L0%0%1_L0%0%1 nodece 31 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1312994984
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 31 nodece_path
=pc L0%0%1_L0%0%1 nodece 31 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 31 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1312994984
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32
=pc L0%0%1_L0%0%1 nodece 32 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.0
1 : 16843008 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1140384172
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 32 nodece_path
=pc L0%0%1_L0%0%1 nodece 32 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 32 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.0
1 : 16843008 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1140384172
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33
=pc L0%0%1_L0%0%1 nodece 33 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
733450907
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 33 nodece_path
=pc L0%0%1_L0%0%1 nodece 33 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 33 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
733450907
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34
=pc L0%0%1_L0%0%1 nodece 34 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037828 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037828 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037828 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1487053959
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 34 nodece_path
=pc L0%0%1_L0%0%1 nodece 34 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 34 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037828 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037828 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037828 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1487053959
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35
=pc L0%0%1_L0%0%1 nodece 35 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037828 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037828 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037828 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
980356728
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 35 nodece_path
=pc L0%0%1_L0%0%1 nodece 35 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 35 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037828 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037828 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037828 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
980356728
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36
=pc L0%0%1_L0%0%1 nodece 36 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 3, ( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 3, ( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 3, ( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1979015720
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 36 nodece_path
=pc L0%0%1_L0%0%1 nodece 36 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 36 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 3, ( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 3, ( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 3, ( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1979015720
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37
=pc L0%0%1_L0%0%1 nodece 37 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 3, ( 25037828 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 3, ( 25037828 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 3, ( 25037828 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
476152433
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 37 nodece_path
=pc L0%0%1_L0%0%1 nodece 37 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 37 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 3, ( 25037828 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 3, ( 25037828 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 3, ( 25037828 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 3 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
476152433
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38
=pc L0%0%1_L0%0%1 nodece 38 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 1, ( 25037832 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 1, ( 25037832 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 1, ( 25037832 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1694887982
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 38 nodece_path
=pc L0%0%1_L0%0%1 nodece 38 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 38 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 1, ( 25037832 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 1, ( 25037832 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 1, ( 25037832 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 2 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1694887982
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39
=pc L0%0%1_L0%0%1 nodece 39 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1326247643
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 39 nodece_path
=pc L0%0%1_L0%0%1 nodece 39 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 39 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1326247643
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40
=pc L0%0%1_L0%0%1 nodece 40 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1640170337
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 40 nodece_path
=pc L0%0%1_L0%0%1 nodece 40 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 40 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1640170337
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41
=pc L0%0%1_L0%0%1 nodece 41 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 201 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 201 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
656825384
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 41 nodece_path
=pc L0%0%1_L0%0%1 nodece 41 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 41 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 201 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 201 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
656825384
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42
=pc L0%0%1_L0%0%1 nodece 42 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4043161599 { -251805697 } : BV:32
=symbol.3
1 : 100352 : BV:32
=symbol.1
1 : 4160976672 { -133990624 } : BV:32
=symbol.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.1
1 : 4160976672 { -133990624 } : BV:32
=dst_symbol_addr.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.3
1 : 100352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4043161596 { -251805700 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966847 { -449 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4161104671 { -133862625 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966844 { -452 } : BV:32
=stack.size
1 : 4042919936 { -252047360 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160976672 { -133990624 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 100352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 228351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 42 nodece_path
=pc L0%0%1_L0%0%1 nodece 42 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 42 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4043161599 { -251805697 } : BV:32
=symbol.3
1 : 100352 : BV:32
=symbol.1
1 : 4160976672 { -133990624 } : BV:32
=symbol.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.1
1 : 4160976672 { -133990624 } : BV:32
=dst_symbol_addr.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.3
1 : 100352 : BV:32
=input_stack_pointer_const
1 : 4043161596 { -251805700 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966847 { -449 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4161104671 { -133862625 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966844 { -452 } : BV:32
=stack.size
1 : 4042919936 { -252047360 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160976672 { -133990624 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 100352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 228351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43
=pc L0%0%1_L0%0%1 nodece 43 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1170598296
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 43 nodece_path
=pc L0%0%1_L0%0%1 nodece 43 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 43 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1170598296
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44
=pc L0%0%1_L0%0%1 nodece 44 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 44 nodece_path
=pc L0%0%1_L0%0%1 nodece 44 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 44 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45
=pc L0%0%1_L0%0%1 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2094347227
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 45 nodece_path
=pc L0%0%1_L0%0%1 nodece 45 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 45 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2094347227
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46
=pc L0%0%1_L0%0%1 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
836881504
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 46 nodece_path
=pc L0%0%1_L0%0%1 nodece 46 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 46 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
836881504
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47
=pc L0%0%1_L0%0%1 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 24 , m_adder -> 126)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 24 , m_adder -> 126)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
775164777
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 47 nodece_path
=pc L0%0%1_L0%0%1 nodece 47 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 47 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 24 , m_adder -> 126)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 24 , m_adder -> 126)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
775164777
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48
=pc L0%0%1_L0%0%1 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1860923474
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 48 nodece_path
=pc L0%0%1_L0%0%1 nodece 48 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 48 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1860923474
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49
=pc L0%0%1_L0%0%1 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3715575807 { -579391489 } : BV:32
=symbol.3
1 : 2473992512 { -1820974784 } : BV:32
=symbol.1
1 : 10755680 : BV:32
=symbol.2
1 : 2473992300 { -1820974996 } : BV:32
=dst_symbol_addr.1
1 : 10755680 : BV:32
=dst_symbol_addr.2
1 : 2473992300 { -1820974996 } : BV:32
=dst_symbol_addr.3
1 : 2473992512 { -1820974784 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3715575804 { -579391492 } : BV:32
=input.src.llvm-mem
1 : (( 2473992300 ) -> 25, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2473992300 ) -> 25, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2473992303 { -1820974993 } : BV:32
=memlabel-mem-esp_begin
1 : 2510917632 { -1784049664 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 10883679 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2473992300 { -1820974996 } : BV:32
=stack.size
1 : 1204658176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 10755680 : BV:32
=input.dst.mem
1 : (( 2473992300 ) -> 25, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2473992512 { -1820974784 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2474120511 { -1820846785 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 25 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1927647495
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 49 nodece_path
=pc L0%0%1_L0%0%1 nodece 49 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 49 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 3715575807 { -579391489 } : BV:32
=symbol.3
1 : 2473992512 { -1820974784 } : BV:32
=symbol.1
1 : 10755680 : BV:32
=symbol.2
1 : 2473992300 { -1820974996 } : BV:32
=dst_symbol_addr.1
1 : 10755680 : BV:32
=dst_symbol_addr.2
1 : 2473992300 { -1820974996 } : BV:32
=dst_symbol_addr.3
1 : 2473992512 { -1820974784 } : BV:32
=input_stack_pointer_const
1 : 3715575804 { -579391492 } : BV:32
=input.src.llvm-mem
1 : (( 2473992300 ) -> 25, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2473992300 ) -> 25, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2473992303 { -1820974993 } : BV:32
=memlabel-mem-esp_begin
1 : 2510917632 { -1784049664 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 10883679 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2473992300 { -1820974996 } : BV:32
=stack.size
1 : 1204658176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 10755680 : BV:32
=input.dst.mem
1 : (( 2473992300 ) -> 25, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2473992512 { -1820974784 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2474120511 { -1820846785 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 25 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1927647495
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50
=pc L0%0%1_L0%0%1 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
79854224
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 50 nodece_path
=pc L0%0%1_L0%0%1 nodece 50 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 50 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
79854224
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51
=pc L0%0%1_L0%0%1 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4153126911 { -141840385 } : BV:32
=symbol.3
1 : 4157849984 { -137117312 } : BV:32
=symbol.1
1 : 4160742336 { -134224960 } : BV:32
=symbol.2
1 : 4159628036 { -135339260 } : BV:32
=dst_symbol_addr.1
1 : 4160742336 { -134224960 } : BV:32
=dst_symbol_addr.2
1 : 4159628036 { -135339260 } : BV:32
=dst_symbol_addr.3
1 : 4157849984 { -137117312 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4153126908 { -141840388 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4159628039 { -135339257 } : BV:32
=memlabel-mem-esp_begin
1 : 35020800 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4160870335 { -134096961 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4159628036 { -135339260 } : BV:32
=stack.size
1 : 4118106112 { -176861184 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160742336 { -134224960 } : BV:32
=input.dst.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4157849984 { -137117312 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4157977983 { -136989313 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 1 : BV:8
=unaliased_memslot.4
1 : 1 : BV:8
=unaliased_memslot.3
1 : 1 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
766221743
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 51 nodece_path
=pc L0%0%1_L0%0%1 nodece 51 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 51 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4153126911 { -141840385 } : BV:32
=symbol.3
1 : 4157849984 { -137117312 } : BV:32
=symbol.1
1 : 4160742336 { -134224960 } : BV:32
=symbol.2
1 : 4159628036 { -135339260 } : BV:32
=dst_symbol_addr.1
1 : 4160742336 { -134224960 } : BV:32
=dst_symbol_addr.2
1 : 4159628036 { -135339260 } : BV:32
=dst_symbol_addr.3
1 : 4157849984 { -137117312 } : BV:32
=input_stack_pointer_const
1 : 4153126908 { -141840388 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4159628039 { -135339257 } : BV:32
=memlabel-mem-esp_begin
1 : 35020800 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4160870335 { -134096961 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4159628036 { -135339260 } : BV:32
=stack.size
1 : 4118106112 { -176861184 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160742336 { -134224960 } : BV:32
=input.dst.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4157849984 { -137117312 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4157977983 { -136989313 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 1 : BV:8
=unaliased_memslot.4
1 : 1 : BV:8
=unaliased_memslot.3
1 : 1 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
766221743
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52
=pc L0%0%1_L0%0%1 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 1585504255 : BV:32
=symbol.3
1 : 142481392 : BV:32
=symbol.1
1 : 1216224240 : BV:32
=symbol.2
1 : 989855740 : BV:32
=dst_symbol_addr.1
1 : 1216224240 : BV:32
=dst_symbol_addr.2
1 : 989855740 : BV:32
=dst_symbol_addr.3
1 : 142481392 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1585504252 : BV:32
=input.src.llvm-mem
1 : (( 1216224244 ) -> 2, ( 989855740 ) -> 1, ( 142481396 ) -> 1, ( 1216224240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1216224244 ) -> 2, ( 989855740 ) -> 1, ( 142481396 ) -> 1, ( 1216224240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 989855743 : BV:32
=memlabel-mem-esp_begin
1 : 1350443008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1216352239 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 989855740 : BV:32
=stack.size
1 : 235061248 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1216224240 : BV:32
=input.dst.mem
1 : (( 1216224244 ) -> 2, ( 989855740 ) -> 1, ( 142481396 ) -> 1, ( 1216224240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 142481392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 142609391 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 1 : BV:8
=unaliased_memslot.4
1 : 2 : BV:8
=unaliased_memslot.3
1 : 1 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1221216242
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 52 nodece_path
=pc L0%0%1_L0%0%1 nodece 52 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 52 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 1585504255 : BV:32
=symbol.3
1 : 142481392 : BV:32
=symbol.1
1 : 1216224240 : BV:32
=symbol.2
1 : 989855740 : BV:32
=dst_symbol_addr.1
1 : 1216224240 : BV:32
=dst_symbol_addr.2
1 : 989855740 : BV:32
=dst_symbol_addr.3
1 : 142481392 : BV:32
=input_stack_pointer_const
1 : 1585504252 : BV:32
=input.src.llvm-mem
1 : (( 1216224244 ) -> 2, ( 989855740 ) -> 1, ( 142481396 ) -> 1, ( 1216224240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1216224244 ) -> 2, ( 989855740 ) -> 1, ( 142481396 ) -> 1, ( 1216224240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 989855743 : BV:32
=memlabel-mem-esp_begin
1 : 1350443008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1216352239 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 989855740 : BV:32
=stack.size
1 : 235061248 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1216224240 : BV:32
=input.dst.mem
1 : (( 1216224244 ) -> 2, ( 989855740 ) -> 1, ( 142481396 ) -> 1, ( 1216224240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 142481392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 142609391 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 1 : BV:8
=unaliased_memslot.4
1 : 2 : BV:8
=unaliased_memslot.3
1 : 1 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1221216242
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53
=pc L0%0%1_L0%0%1 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460499264 : BV:32
=symbol.1
1 : 1779336880 : BV:32
=symbol.2
1 : 1796172464 : BV:32
=dst_symbol_addr.1
1 : 1779336880 : BV:32
=dst_symbol_addr.2
1 : 1796172464 : BV:32
=dst_symbol_addr.3
1 : 1460499264 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460499268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1460499268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796172467 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779464879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796172464 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779336880 : BV:32
=input.dst.mem
1 : (( 1460499268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460499264 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460627263 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 128 { -128 } : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
808681861
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 53 nodece_path
=pc L0%0%1_L0%0%1 nodece 53 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 53 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460499264 : BV:32
=symbol.1
1 : 1779336880 : BV:32
=symbol.2
1 : 1796172464 : BV:32
=dst_symbol_addr.1
1 : 1779336880 : BV:32
=dst_symbol_addr.2
1 : 1796172464 : BV:32
=dst_symbol_addr.3
1 : 1460499264 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460499268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1460499268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796172467 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779464879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796172464 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779336880 : BV:32
=input.dst.mem
1 : (( 1460499268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460499264 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460627263 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 128 { -128 } : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
808681861
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54
=pc L0%0%1_L0%0%1 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2711650303 { -1583316993 } : BV:32
=symbol.3
1 : 2818481488 { -1476485808 } : BV:32
=symbol.1
1 : 2818317648 { -1476649648 } : BV:32
=symbol.2
1 : 3782670344 { -512296952 } : BV:32
=dst_symbol_addr.1
1 : 2818317648 { -1476649648 } : BV:32
=dst_symbol_addr.2
1 : 3782670344 { -512296952 } : BV:32
=dst_symbol_addr.3
1 : 2818481488 { -1476485808 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2711650300 { -1583316996 } : BV:32
=input.src.llvm-mem
1 : (( 3782670344 ) -> 78, ( 2818317656 ) -> 74, ( 2818317652 ) -> 23, ( 2818481496 ) -> 79, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3782670344 ) -> 78, ( 2818317656 ) -> 74, ( 2818317652 ) -> 23, ( 2818481496 ) -> 79, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3782670347 { -512296949 } : BV:32
=memlabel-mem-esp_begin
1 : 889655296 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2818445647 { -1476521649 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3782670344 { -512296952 } : BV:32
=stack.size
1 : 1821995008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2818317648 { -1476649648 } : BV:32
=input.dst.mem
1 : (( 3782670344 ) -> 78, ( 2818317656 ) -> 74, ( 2818317652 ) -> 23, ( 2818481496 ) -> 79, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2818481488 { -1476485808 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2818609487 { -1476357809 } : BV:32
=unaliased_memslot.1
1 : 78 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 23 : BV:8
=unaliased_memslot.4
1 : 74 : BV:8
=unaliased_memslot.3
1 : 79 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
842217685
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 54 nodece_path
=pc L0%0%1_L0%0%1 nodece 54 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 54 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 2711650303 { -1583316993 } : BV:32
=symbol.3
1 : 2818481488 { -1476485808 } : BV:32
=symbol.1
1 : 2818317648 { -1476649648 } : BV:32
=symbol.2
1 : 3782670344 { -512296952 } : BV:32
=dst_symbol_addr.1
1 : 2818317648 { -1476649648 } : BV:32
=dst_symbol_addr.2
1 : 3782670344 { -512296952 } : BV:32
=dst_symbol_addr.3
1 : 2818481488 { -1476485808 } : BV:32
=input_stack_pointer_const
1 : 2711650300 { -1583316996 } : BV:32
=input.src.llvm-mem
1 : (( 3782670344 ) -> 78, ( 2818317656 ) -> 74, ( 2818317652 ) -> 23, ( 2818481496 ) -> 79, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3782670344 ) -> 78, ( 2818317656 ) -> 74, ( 2818317652 ) -> 23, ( 2818481496 ) -> 79, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3782670347 { -512296949 } : BV:32
=memlabel-mem-esp_begin
1 : 889655296 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2818445647 { -1476521649 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3782670344 { -512296952 } : BV:32
=stack.size
1 : 1821995008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2818317648 { -1476649648 } : BV:32
=input.dst.mem
1 : (( 3782670344 ) -> 78, ( 2818317656 ) -> 74, ( 2818317652 ) -> 23, ( 2818481496 ) -> 79, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2818481488 { -1476485808 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2818609487 { -1476357809 } : BV:32
=unaliased_memslot.1
1 : 78 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 23 : BV:8
=unaliased_memslot.4
1 : 74 : BV:8
=unaliased_memslot.3
1 : 79 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
842217685
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55
=pc L0%0%1_L0%0%1 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 1041031167 : BV:32
=symbol.3
1 : 268308464 : BV:32
=symbol.1
1 : 536740848 : BV:32
=symbol.2
1 : 494923756 : BV:32
=dst_symbol_addr.1
1 : 536740848 : BV:32
=dst_symbol_addr.2
1 : 494923756 : BV:32
=dst_symbol_addr.3
1 : 268308464 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1041031164 : BV:32
=input.src.llvm-mem
1 : (( 536740852 ) -> 21, ( 268308472 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536740852 ) -> 21, ( 268308472 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 494923759 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536868847 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 494923756 : BV:32
=stack.size
1 : 235847680 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536740848 : BV:32
=input.dst.mem
1 : (( 536740852 ) -> 21, ( 268308472 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268308464 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268436463 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 21 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 3 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1213302451
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 55 nodece_path
=pc L0%0%1_L0%0%1 nodece 55 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 55 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 1041031167 : BV:32
=symbol.3
1 : 268308464 : BV:32
=symbol.1
1 : 536740848 : BV:32
=symbol.2
1 : 494923756 : BV:32
=dst_symbol_addr.1
1 : 536740848 : BV:32
=dst_symbol_addr.2
1 : 494923756 : BV:32
=dst_symbol_addr.3
1 : 268308464 : BV:32
=input_stack_pointer_const
1 : 1041031164 : BV:32
=input.src.llvm-mem
1 : (( 536740852 ) -> 21, ( 268308472 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536740852 ) -> 21, ( 268308472 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 494923759 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536868847 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 494923756 : BV:32
=stack.size
1 : 235847680 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536740848 : BV:32
=input.dst.mem
1 : (( 536740852 ) -> 21, ( 268308472 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268308464 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268436463 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 21 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 3 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1213302451
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56
=pc L0%0%1_L0%0%1 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 8 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1729887057
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 56 nodece_path
=pc L0%0%1_L0%0%1 nodece 56 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 56 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 8 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1729887057
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57
=pc L0%0%1_L0%0%1 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536747000 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536747000 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536747000 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 7 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1231974323
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 57 nodece_path
=pc L0%0%1_L0%0%1 nodece 57 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 57 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536747000 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536747000 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536747000 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 7 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1231974323
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58
=pc L0%0%1_L0%0%1 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4030726143 { -264241153 } : BV:32
=symbol.3
1 : 1878919392 : BV:32
=symbol.1
1 : 4294727120 { -240176 } : BV:32
=symbol.2
1 : 1878919348 : BV:32
=dst_symbol_addr.1
1 : 4294727120 { -240176 } : BV:32
=dst_symbol_addr.2
1 : 1878919348 : BV:32
=dst_symbol_addr.3
1 : 1878919392 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4030726140 { -264241156 } : BV:32
=input.src.llvm-mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1878919351 : BV:32
=memlabel-mem-esp_begin
1 : 2147995648 { -2146971648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294855119 { -112177 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1878919348 : BV:32
=stack.size
1 : 1882730496 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294727120 { -240176 } : BV:32
=input.dst.mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1878919392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1879047391 : BV:32
=unaliased_memslot.1
1 : 84215045 : BV:32
=unaliased_memslot.0
1 : 84215042 : BV:32
=unaliased_memslot.2
1 : 84215042 : BV:32
=unaliased_memslot.4
1 : 84215042 : BV:32
=unaliased_memslot.3
1 : 84215047 : BV:32
=unaliased_memslot.5
1 : 84215042 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1518749253
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 58 nodece_path
=pc L0%0%1_L0%0%1 nodece 58 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 58 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4030726143 { -264241153 } : BV:32
=symbol.3
1 : 1878919392 : BV:32
=symbol.1
1 : 4294727120 { -240176 } : BV:32
=symbol.2
1 : 1878919348 : BV:32
=dst_symbol_addr.1
1 : 4294727120 { -240176 } : BV:32
=dst_symbol_addr.2
1 : 1878919348 : BV:32
=dst_symbol_addr.3
1 : 1878919392 : BV:32
=input_stack_pointer_const
1 : 4030726140 { -264241156 } : BV:32
=input.src.llvm-mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1878919351 : BV:32
=memlabel-mem-esp_begin
1 : 2147995648 { -2146971648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294855119 { -112177 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1878919348 : BV:32
=stack.size
1 : 1882730496 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294727120 { -240176 } : BV:32
=input.dst.mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1878919392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1879047391 : BV:32
=unaliased_memslot.1
1 : 84215045 : BV:32
=unaliased_memslot.0
1 : 84215042 : BV:32
=unaliased_memslot.2
1 : 84215042 : BV:32
=unaliased_memslot.4
1 : 84215042 : BV:32
=unaliased_memslot.3
1 : 84215047 : BV:32
=unaliased_memslot.5
1 : 84215042 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1518749253
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59
=pc L0%0%1_L0%0%1 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1796205108 ) -> 1, ( 1779364276 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1796205108 ) -> 1, ( 1779364276 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1796205108 ) -> 1, ( 1779364276 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1561397607
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 59 nodece_path
=pc L0%0%1_L0%0%1 nodece 59 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 59 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1796205108 ) -> 1, ( 1779364276 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1796205108 ) -> 1, ( 1779364276 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1796205108 ) -> 1, ( 1779364276 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1561397607
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60
=pc L0%0%1_L0%0%1 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 1482362879 : BV:32
=symbol.3
1 : 3758077696 { -536889600 } : BV:32
=symbol.1
1 : 2147461904 : BV:32
=symbol.2
1 : 536849180 : BV:32
=dst_symbol_addr.1
1 : 2147461904 : BV:32
=dst_symbol_addr.2
1 : 536849180 : BV:32
=dst_symbol_addr.3
1 : 3758077696 { -536889600 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1482362876 : BV:32
=input.src.llvm-mem
1 : (( 536849180 ) -> 41, ( 3758077700 ) -> 8, ( 536849181 ) -> 0, ( 3758077704 ) -> 41, ( 2147461912 ) -> 39, ( 2147461904 ) -> 67, ( 2147461916 ) -> 121, ( 2147461905 ) -> 64, ( 2147461909 ) -> 192, ( 3758077705 ) -> 192, ( 2147461917 ) -> 192, ( 3758077709 ) -> 128, ( 3758077708 ) -> 48, ( 2147461913 ) -> 128, ( 3758077701 ) -> 128, () -> 45) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536849180 ) -> 41, ( 3758077700 ) -> 8, ( 536849181 ) -> 0, ( 3758077704 ) -> 41, ( 2147461912 ) -> 39, ( 2147461904 ) -> 67, ( 2147461916 ) -> 121, ( 2147461905 ) -> 64, ( 2147461909 ) -> 192, ( 3758077705 ) -> 192, ( 2147461917 ) -> 192, ( 3758077709 ) -> 128, ( 3758077708 ) -> 48, ( 2147461913 ) -> 128, ( 3758077701 ) -> 128, () -> 45) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 536849183 : BV:32
=memlabel-mem-esp_begin
1 : 909234176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147589903 { -2147377393 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 536849180 : BV:32
=stack.size
1 : 573128704 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147461904 : BV:32
=input.dst.mem
1 : (( 536849180 ) -> 41, ( 3758077700 ) -> 8, ( 536849181 ) -> 0, ( 3758077704 ) -> 41, ( 2147461912 ) -> 39, ( 2147461904 ) -> 67, ( 2147461916 ) -> 121, ( 2147461905 ) -> 64, ( 2147461909 ) -> 192, ( 3758077705 ) -> 192, ( 2147461917 ) -> 192, ( 3758077709 ) -> 128, ( 3758077708 ) -> 48, ( 2147461913 ) -> 128, ( 3758077701 ) -> 128, () -> 45) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 3758077696 { -536889600 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758205695 { -536761601 } : BV:32
=unaliased_memslot.1
1 : 757940291 : BV:32
=unaliased_memslot.0
1 : 757923881 : BV:32
=unaliased_memslot.2
1 : 757973037 : BV:32
=unaliased_memslot.4
1 : 757956616 : BV:32
=unaliased_memslot.3
1 : 757956647 : BV:32
=unaliased_memslot.5
1 : 757973033 : BV:32
=unaliased_memslot.7
1 : 757956656 : BV:32
=unaliased_memslot.6
1 : 757973113 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
429377313
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 60 nodece_path
=pc L0%0%1_L0%0%1 nodece 60 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 60 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 1482362879 : BV:32
=symbol.3
1 : 3758077696 { -536889600 } : BV:32
=symbol.1
1 : 2147461904 : BV:32
=symbol.2
1 : 536849180 : BV:32
=dst_symbol_addr.1
1 : 2147461904 : BV:32
=dst_symbol_addr.2
1 : 536849180 : BV:32
=dst_symbol_addr.3
1 : 3758077696 { -536889600 } : BV:32
=input_stack_pointer_const
1 : 1482362876 : BV:32
=input.src.llvm-mem
1 : (( 536849180 ) -> 41, ( 3758077700 ) -> 8, ( 536849181 ) -> 0, ( 3758077704 ) -> 41, ( 2147461912 ) -> 39, ( 2147461904 ) -> 67, ( 2147461916 ) -> 121, ( 2147461905 ) -> 64, ( 2147461909 ) -> 192, ( 3758077705 ) -> 192, ( 2147461917 ) -> 192, ( 3758077709 ) -> 128, ( 3758077708 ) -> 48, ( 2147461913 ) -> 128, ( 3758077701 ) -> 128, () -> 45) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536849180 ) -> 41, ( 3758077700 ) -> 8, ( 536849181 ) -> 0, ( 3758077704 ) -> 41, ( 2147461912 ) -> 39, ( 2147461904 ) -> 67, ( 2147461916 ) -> 121, ( 2147461905 ) -> 64, ( 2147461909 ) -> 192, ( 3758077705 ) -> 192, ( 2147461917 ) -> 192, ( 3758077709 ) -> 128, ( 3758077708 ) -> 48, ( 2147461913 ) -> 128, ( 3758077701 ) -> 128, () -> 45) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 536849183 : BV:32
=memlabel-mem-esp_begin
1 : 909234176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147589903 { -2147377393 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 536849180 : BV:32
=stack.size
1 : 573128704 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147461904 : BV:32
=input.dst.mem
1 : (( 536849180 ) -> 41, ( 3758077700 ) -> 8, ( 536849181 ) -> 0, ( 3758077704 ) -> 41, ( 2147461912 ) -> 39, ( 2147461904 ) -> 67, ( 2147461916 ) -> 121, ( 2147461905 ) -> 64, ( 2147461909 ) -> 192, ( 3758077705 ) -> 192, ( 2147461917 ) -> 192, ( 3758077709 ) -> 128, ( 3758077708 ) -> 48, ( 2147461913 ) -> 128, ( 3758077701 ) -> 128, () -> 45) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 3758077696 { -536889600 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758205695 { -536761601 } : BV:32
=unaliased_memslot.1
1 : 757940291 : BV:32
=unaliased_memslot.0
1 : 757923881 : BV:32
=unaliased_memslot.2
1 : 757973037 : BV:32
=unaliased_memslot.4
1 : 757956616 : BV:32
=unaliased_memslot.3
1 : 757956647 : BV:32
=unaliased_memslot.5
1 : 757973033 : BV:32
=unaliased_memslot.7
1 : 757956656 : BV:32
=unaliased_memslot.6
1 : 757973113 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
429377313
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61
=pc L0%0%1_L0%0%1 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 1041031167 : BV:32
=symbol.3
1 : 268308464 : BV:32
=symbol.1
1 : 536740848 : BV:32
=symbol.2
1 : 494923756 : BV:32
=dst_symbol_addr.1
1 : 536740848 : BV:32
=dst_symbol_addr.2
1 : 494923756 : BV:32
=dst_symbol_addr.3
1 : 268308464 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1041031164 : BV:32
=input.src.llvm-mem
1 : (( 536740848 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536740848 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 494923759 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536868847 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 494923756 : BV:32
=stack.size
1 : 235847680 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536740848 : BV:32
=input.dst.mem
1 : (( 536740848 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268308464 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268436463 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1471402489
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 61 nodece_path
=pc L0%0%1_L0%0%1 nodece 61 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 61 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 1041031167 : BV:32
=symbol.3
1 : 268308464 : BV:32
=symbol.1
1 : 536740848 : BV:32
=symbol.2
1 : 494923756 : BV:32
=dst_symbol_addr.1
1 : 536740848 : BV:32
=dst_symbol_addr.2
1 : 494923756 : BV:32
=dst_symbol_addr.3
1 : 268308464 : BV:32
=input_stack_pointer_const
1 : 1041031164 : BV:32
=input.src.llvm-mem
1 : (( 536740848 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536740848 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 494923759 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536868847 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 494923756 : BV:32
=stack.size
1 : 235847680 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536740848 : BV:32
=input.dst.mem
1 : (( 536740848 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268308464 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268436463 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1471402489
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62
=pc L0%0%1_L0%0%1 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460524080 : BV:32
=symbol.1
1 : 1661738560 : BV:32
=symbol.2
1 : 1796204048 : BV:32
=dst_symbol_addr.1
1 : 1661738560 : BV:32
=dst_symbol_addr.2
1 : 1796204048 : BV:32
=dst_symbol_addr.3
1 : 1460524080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1796204048 ) -> 16, ( 1661738568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1796204048 ) -> 16, ( 1661738568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796204051 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1661866559 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796204048 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1661738560 : BV:32
=input.dst.mem
1 : (( 1796204048 ) -> 16, ( 1661738568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460524080 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460652079 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 16 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1953673882
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 62 nodece_path
=pc L0%0%1_L0%0%1 nodece 62 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 62 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460524080 : BV:32
=symbol.1
1 : 1661738560 : BV:32
=symbol.2
1 : 1796204048 : BV:32
=dst_symbol_addr.1
1 : 1661738560 : BV:32
=dst_symbol_addr.2
1 : 1796204048 : BV:32
=dst_symbol_addr.3
1 : 1460524080 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1796204048 ) -> 16, ( 1661738568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1796204048 ) -> 16, ( 1661738568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796204051 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1661866559 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796204048 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1661738560 : BV:32
=input.dst.mem
1 : (( 1796204048 ) -> 16, ( 1661738568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460524080 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460652079 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 16 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1953673882
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63
=pc L0%0%1_L0%0%1 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2184200191 { -2110767105 } : BV:32
=symbol.3
1 : 2187226560 { -2107740736 } : BV:32
=symbol.1
1 : 39704304 : BV:32
=symbol.2
1 : 308178380 : BV:32
=dst_symbol_addr.1
1 : 39704304 : BV:32
=dst_symbol_addr.2
1 : 308178380 : BV:32
=dst_symbol_addr.3
1 : 2187226560 { -2107740736 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2184200188 { -2110767108 } : BV:32
=input.src.llvm-mem
1 : (( 39704313 ) -> 0, ( 308178380 ) -> 1, ( 39704309 ) -> 0, ( 39704305 ) -> 0, ( 39704316 ) -> 1, ( 308178381 ) -> 0, ( 39704308 ) -> 1, ( 39704304 ) -> 241, ( 2187226573 ) -> 0, ( 2187226572 ) -> 1, ( 39704317 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 39704313 ) -> 0, ( 308178380 ) -> 1, ( 39704309 ) -> 0, ( 39704305 ) -> 0, ( 39704316 ) -> 1, ( 308178381 ) -> 0, ( 39704308 ) -> 1, ( 39704304 ) -> 241, ( 2187226573 ) -> 0, ( 2187226572 ) -> 1, ( 39704317 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 308178383 : BV:32
=memlabel-mem-esp_begin
1 : 2183032832 { -2111934464 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 39832303 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 308178380 : BV:32
=stack.size
1 : 1167360 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 39704304 : BV:32
=input.dst.mem
1 : (( 39704313 ) -> 0, ( 308178380 ) -> 1, ( 39704309 ) -> 0, ( 39704305 ) -> 0, ( 39704316 ) -> 1, ( 308178381 ) -> 0, ( 39704308 ) -> 1, ( 39704304 ) -> 241, ( 2187226573 ) -> 0, ( 2187226572 ) -> 1, ( 39704317 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2187226560 { -2107740736 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2187354559 { -2107612737 } : BV:32
=unaliased_memslot.1
1 : 50528497 : BV:32
=unaliased_memslot.0
1 : 50528257 : BV:32
=unaliased_memslot.2
1 : 50528257 : BV:32
=unaliased_memslot.4
1 : 50528257 : BV:32
=unaliased_memslot.3
1 : 50528259 : BV:32
=unaliased_memslot.5
1 : 50528257 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
100995797
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 63 nodece_path
=pc L0%0%1_L0%0%1 nodece 63 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 63 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 2184200191 { -2110767105 } : BV:32
=symbol.3
1 : 2187226560 { -2107740736 } : BV:32
=symbol.1
1 : 39704304 : BV:32
=symbol.2
1 : 308178380 : BV:32
=dst_symbol_addr.1
1 : 39704304 : BV:32
=dst_symbol_addr.2
1 : 308178380 : BV:32
=dst_symbol_addr.3
1 : 2187226560 { -2107740736 } : BV:32
=input_stack_pointer_const
1 : 2184200188 { -2110767108 } : BV:32
=input.src.llvm-mem
1 : (( 39704313 ) -> 0, ( 308178380 ) -> 1, ( 39704309 ) -> 0, ( 39704305 ) -> 0, ( 39704316 ) -> 1, ( 308178381 ) -> 0, ( 39704308 ) -> 1, ( 39704304 ) -> 241, ( 2187226573 ) -> 0, ( 2187226572 ) -> 1, ( 39704317 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 39704313 ) -> 0, ( 308178380 ) -> 1, ( 39704309 ) -> 0, ( 39704305 ) -> 0, ( 39704316 ) -> 1, ( 308178381 ) -> 0, ( 39704308 ) -> 1, ( 39704304 ) -> 241, ( 2187226573 ) -> 0, ( 2187226572 ) -> 1, ( 39704317 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 308178383 : BV:32
=memlabel-mem-esp_begin
1 : 2183032832 { -2111934464 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 39832303 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 308178380 : BV:32
=stack.size
1 : 1167360 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 39704304 : BV:32
=input.dst.mem
1 : (( 39704313 ) -> 0, ( 308178380 ) -> 1, ( 39704309 ) -> 0, ( 39704305 ) -> 0, ( 39704316 ) -> 1, ( 308178381 ) -> 0, ( 39704308 ) -> 1, ( 39704304 ) -> 241, ( 2187226573 ) -> 0, ( 2187226572 ) -> 1, ( 39704317 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2187226560 { -2107740736 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2187354559 { -2107612737 } : BV:32
=unaliased_memslot.1
1 : 50528497 : BV:32
=unaliased_memslot.0
1 : 50528257 : BV:32
=unaliased_memslot.2
1 : 50528257 : BV:32
=unaliased_memslot.4
1 : 50528257 : BV:32
=unaliased_memslot.3
1 : 50528259 : BV:32
=unaliased_memslot.5
1 : 50528257 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
100995797
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64
=pc L0%0%1_L0%0%1 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536747004 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536747004 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536747004 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 2 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1174208154
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 64 nodece_path
=pc L0%0%1_L0%0%1 nodece 64 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 64 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536747004 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536747004 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536747004 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 2 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1174208154
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65
=pc L0%0%1_L0%0%1 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460524080 : BV:32
=symbol.1
1 : 1661738560 : BV:32
=symbol.2
1 : 1796204048 : BV:32
=dst_symbol_addr.1
1 : 1661738560 : BV:32
=dst_symbol_addr.2
1 : 1796204048 : BV:32
=dst_symbol_addr.3
1 : 1460524080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1796204048 ) -> 4, ( 1661738568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1796204048 ) -> 4, ( 1661738568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796204051 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1661866559 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796204048 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1661738560 : BV:32
=input.dst.mem
1 : (( 1796204048 ) -> 4, ( 1661738568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460524080 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460652079 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1073592327
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 65 nodece_path
=pc L0%0%1_L0%0%1 nodece 65 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 65 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460524080 : BV:32
=symbol.1
1 : 1661738560 : BV:32
=symbol.2
1 : 1796204048 : BV:32
=dst_symbol_addr.1
1 : 1661738560 : BV:32
=dst_symbol_addr.2
1 : 1796204048 : BV:32
=dst_symbol_addr.3
1 : 1460524080 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1796204048 ) -> 4, ( 1661738568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1796204048 ) -> 4, ( 1661738568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796204051 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1661866559 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796204048 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1661738560 : BV:32
=input.dst.mem
1 : (( 1796204048 ) -> 4, ( 1661738568 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460524080 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460652079 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1073592327
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 66
=pc L0%0%1_L0%0%1 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 16647696 : BV:32
=symbol.1
1 : 153311152 : BV:32
=symbol.2
1 : 153311132 : BV:32
=dst_symbol_addr.1
1 : 153311152 : BV:32
=dst_symbol_addr.2
1 : 153311132 : BV:32
=dst_symbol_addr.3
1 : 16647696 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 153311132 ) -> 1, ( 153311164 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 153311132 ) -> 1, ( 153311164 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 153311135 : BV:32
=memlabel-mem-esp_begin
1 : 167776256 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 153439151 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 153311132 : BV:32
=stack.size
1 : 4127191040 { -167776256 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 153311152 : BV:32
=input.dst.mem
1 : (( 153311132 ) -> 1, ( 153311164 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 16647696 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 16775695 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
408563574
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 66 nodece_path
=pc L0%0%1_L0%0%1 nodece 66 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 66 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 16647696 : BV:32
=symbol.1
1 : 153311152 : BV:32
=symbol.2
1 : 153311132 : BV:32
=dst_symbol_addr.1
1 : 153311152 : BV:32
=dst_symbol_addr.2
1 : 153311132 : BV:32
=dst_symbol_addr.3
1 : 16647696 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 153311132 ) -> 1, ( 153311164 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 153311132 ) -> 1, ( 153311164 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 153311135 : BV:32
=memlabel-mem-esp_begin
1 : 167776256 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 153439151 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 153311132 : BV:32
=stack.size
1 : 4127191040 { -167776256 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 153311152 : BV:32
=input.dst.mem
1 : (( 153311132 ) -> 1, ( 153311164 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 16647696 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 16775695 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
408563574
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 67
=pc L0%0%1_L0%0%1 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536747004 ) -> 1, ( 427819004 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536747004 ) -> 1, ( 427819004 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536747004 ) -> 1, ( 427819004 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
927925537
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 67 nodece_path
=pc L0%0%1_L0%0%1 nodece 67 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 67 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536747004 ) -> 1, ( 427819004 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536747004 ) -> 1, ( 427819004 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536747004 ) -> 1, ( 427819004 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
927925537
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 68
=pc L0%0%1_L0%0%1 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460524080 : BV:32
=symbol.1
1 : 1661738560 : BV:32
=symbol.2
1 : 1796204048 : BV:32
=dst_symbol_addr.1
1 : 1661738560 : BV:32
=dst_symbol_addr.2
1 : 1796204048 : BV:32
=dst_symbol_addr.3
1 : 1460524080 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1796204049 ) -> 0, ( 1661738569 ) -> 0, ( 1661738572 ) -> 0, ( 1661738573 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1796204049 ) -> 0, ( 1661738569 ) -> 0, ( 1661738572 ) -> 0, ( 1661738573 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796204051 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1661866559 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796204048 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1661738560 : BV:32
=input.dst.mem
1 : (( 1796204049 ) -> 0, ( 1661738569 ) -> 0, ( 1661738572 ) -> 0, ( 1661738573 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460524080 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460652079 : BV:32
=unaliased_memslot.1
1 : 16842753 : BV:32
=unaliased_memslot.0
1 : 16842753 : BV:32
=unaliased_memslot.2
1 : 16842752 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
490448215
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 68 nodece_path
=pc L0%0%1_L0%0%1 nodece 68 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 68 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460524080 : BV:32
=symbol.1
1 : 1661738560 : BV:32
=symbol.2
1 : 1796204048 : BV:32
=dst_symbol_addr.1
1 : 1661738560 : BV:32
=dst_symbol_addr.2
1 : 1796204048 : BV:32
=dst_symbol_addr.3
1 : 1460524080 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1796204049 ) -> 0, ( 1661738569 ) -> 0, ( 1661738572 ) -> 0, ( 1661738573 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1796204049 ) -> 0, ( 1661738569 ) -> 0, ( 1661738572 ) -> 0, ( 1661738573 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796204051 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1661866559 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796204048 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1661738560 : BV:32
=input.dst.mem
1 : (( 1796204049 ) -> 0, ( 1661738569 ) -> 0, ( 1661738572 ) -> 0, ( 1661738573 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460524080 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460652079 : BV:32
=unaliased_memslot.1
1 : 16842753 : BV:32
=unaliased_memslot.0
1 : 16842753 : BV:32
=unaliased_memslot.2
1 : 16842752 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
490448215
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 69
=pc L0%0%1_L0%0%1 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
381477694
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 69 nodece_path
=pc L0%0%1_L0%0%1 nodece 69 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 69 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
381477694
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 70
=pc L0%0%1_L0%0%1 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476176279
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 70 nodece_path
=pc L0%0%1_L0%0%1 nodece 70 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 70 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.3
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476176279
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 71
=pc L0%0%1_L0%0%1 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 224 , m_adder -> 163)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 224 , m_adder -> 163)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1537358101
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 71 nodece_path
=pc L0%0%1_L0%0%1 nodece 71 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 71 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 224 , m_adder -> 163)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 224 , m_adder -> 163)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1537358101
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 72
=pc L0%0%1_L0%0%1 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1940492747
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 72 nodece_path
=pc L0%0%1_L0%0%1 nodece 72 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 72 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1940492747
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 73
=pc L0%0%1_L0%0%1 nodece 73 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1350438492
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 73 nodece_path
=pc L0%0%1_L0%0%1 nodece 73 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 73 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.1
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1350438492
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 74
=pc L0%0%1_L0%0%1 nodece 74 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 251 , m_adder -> 53)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 251 , m_adder -> 53)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2509820305
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 74 nodece_path
=pc L0%0%1_L0%0%1 nodece 74 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 74 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 251 , m_adder -> 53)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 251 , m_adder -> 53)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2509820305
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 75
=pc L0%0%1_L0%0%1 nodece 75 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
408409645
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 75 nodece_path
=pc L0%0%1_L0%0%1 nodece 75 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 75 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
408409645
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 76
=pc L0%0%1_L0%0%1 nodece 76 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1047048267
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 76 nodece_path
=pc L0%0%1_L0%0%1 nodece 76 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 76 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1047048267
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 77
=pc L0%0%1_L0%0%1 nodece 77 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 212 , m_adder -> 130)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 212 , m_adder -> 130)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
868681682
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 77 nodece_path
=pc L0%0%1_L0%0%1 nodece 77 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 77 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 212 , m_adder -> 130)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 212 , m_adder -> 130)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
868681682
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 78
=pc L0%0%1_L0%0%1 nodece 78 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2550136831 { -1744830465 } : BV:32
=symbol.3
1 : 2550874992 { -1744092304 } : BV:32
=symbol.1
1 : 2550525584 { -1744441712 } : BV:32
=symbol.2
1 : 4160774272 { -134193024 } : BV:32
=dst_symbol_addr.1
1 : 2550525584 { -1744441712 } : BV:32
=dst_symbol_addr.2
1 : 4160774272 { -134193024 } : BV:32
=dst_symbol_addr.3
1 : 2550874992 { -1744092304 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2550136828 { -1744830468 } : BV:32
=input.src.llvm-mem
1 : (( 2550525596 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2550525596 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4160774275 { -134193021 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2550653583 { -1744313713 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4160774272 { -134193024 } : BV:32
=stack.size
1 : 2550136832 { -1744830464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2550525584 { -1744441712 } : BV:32
=input.dst.mem
1 : (( 2550525596 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2550874992 { -1744092304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2551002991 { -1743964305 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 63 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1392438180
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 78 nodece_path
=pc L0%0%1_L0%0%1 nodece 78 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 78 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 2550136831 { -1744830465 } : BV:32
=symbol.3
1 : 2550874992 { -1744092304 } : BV:32
=symbol.1
1 : 2550525584 { -1744441712 } : BV:32
=symbol.2
1 : 4160774272 { -134193024 } : BV:32
=dst_symbol_addr.1
1 : 2550525584 { -1744441712 } : BV:32
=dst_symbol_addr.2
1 : 4160774272 { -134193024 } : BV:32
=dst_symbol_addr.3
1 : 2550874992 { -1744092304 } : BV:32
=input_stack_pointer_const
1 : 2550136828 { -1744830468 } : BV:32
=input.src.llvm-mem
1 : (( 2550525596 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2550525596 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4160774275 { -134193021 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2550653583 { -1744313713 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4160774272 { -134193024 } : BV:32
=stack.size
1 : 2550136832 { -1744830464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2550525584 { -1744441712 } : BV:32
=input.dst.mem
1 : (( 2550525596 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2550874992 { -1744092304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2551002991 { -1743964305 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 63 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1392438180
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 79
=pc L0%0%1_L0%0%1 nodece 79 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536747000 ) -> 1, ( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536747000 ) -> 1, ( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536747000 ) -> 1, ( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
819625524
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 79 nodece_path
=pc L0%0%1_L0%0%1 nodece 79 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 79 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536747000 ) -> 1, ( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536747000 ) -> 1, ( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536747000 ) -> 1, ( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
819625524
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 80
=pc L0%0%1_L0%0%1 nodece 80 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1779364280 ) -> 1, ( 1796205108 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1779364280 ) -> 1, ( 1796205108 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1779364280 ) -> 1, ( 1796205108 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
233287504
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 80 nodece_path
=pc L0%0%1_L0%0%1 nodece 80 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 80 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1779364280 ) -> 1, ( 1796205108 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1779364280 ) -> 1, ( 1796205108 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1779364280 ) -> 1, ( 1796205108 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
233287504
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 81
=pc L0%0%1_L0%0%1 nodece 81 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294885375 { -81921 } : BV:32
=symbol.3
1 : 787456 : BV:32
=symbol.1
1 : 336896 : BV:32
=symbol.2
1 : 4294966736 { -560 } : BV:32
=dst_symbol_addr.1
1 : 336896 : BV:32
=dst_symbol_addr.2
1 : 4294966736 { -560 } : BV:32
=dst_symbol_addr.3
1 : 787456 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294885372 { -81924 } : BV:32
=input.src.llvm-mem
1 : (( 787464 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 787464 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966739 { -557 } : BV:32
=memlabel-mem-esp_begin
1 : 925696 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 464895 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966736 { -560 } : BV:32
=stack.size
1 : 4293959680 { -1007616 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 336896 : BV:32
=input.dst.mem
1 : (( 787464 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 787456 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 915455 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
985778828
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 81 nodece_path
=pc L0%0%1_L0%0%1 nodece 81 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 81 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294885375 { -81921 } : BV:32
=symbol.3
1 : 787456 : BV:32
=symbol.1
1 : 336896 : BV:32
=symbol.2
1 : 4294966736 { -560 } : BV:32
=dst_symbol_addr.1
1 : 336896 : BV:32
=dst_symbol_addr.2
1 : 4294966736 { -560 } : BV:32
=dst_symbol_addr.3
1 : 787456 : BV:32
=input_stack_pointer_const
1 : 4294885372 { -81924 } : BV:32
=input.src.llvm-mem
1 : (( 787464 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 787464 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966739 { -557 } : BV:32
=memlabel-mem-esp_begin
1 : 925696 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 464895 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966736 { -560 } : BV:32
=stack.size
1 : 4293959680 { -1007616 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 336896 : BV:32
=input.dst.mem
1 : (( 787464 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 787456 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 915455 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
985778828
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 82
=pc L0%0%1_L0%0%1 nodece 82 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536746996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536746996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536746996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1878577057
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 82 nodece_path
=pc L0%0%1_L0%0%1 nodece 82 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 82 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536746996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536746996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536746996 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1878577057
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 83
=pc L0%0%1_L0%0%1 nodece 83 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1779364276 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1779364276 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1779364276 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
333114587
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 83 nodece_path
=pc L0%0%1_L0%0%1 nodece 83 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 83 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1779364276 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1779364276 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1779364276 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
333114587
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 84
=pc L0%0%1_L0%0%1 nodece 84 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2096521213
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 84 nodece_path
=pc L0%0%1_L0%0%1 nodece 84 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 84 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2096521213
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 85
=pc L0%0%1_L0%0%1 nodece 85 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
334604016
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 85 nodece_path
=pc L0%0%1_L0%0%1 nodece 85 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 85 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.2
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
334604016
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 86
=pc L0%0%1_L0%0%1 nodece 86 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 16 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 16 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3452737411
=counter_example_end
=pc L0%0%1_L0%0%1 nodece 86 nodece_path
=pc L0%0%1_L0%0%1 nodece 86 nodece_path.graph_edge_composition
(epsilon)
=pc L0%0%1_L0%0%1 nodece 86 nodece_cached_counterexample
=counter_example_begin
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 16 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 16 , m_adder -> 159)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
3452737411
=counter_example_end
=counterexamples at pc Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 0 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 313185372078751200830374068262321082113 { -27096994842187262633000539169447129343 } : BV:128
=input.dst.exreg.2.2
1 : 3952955137 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4286459900 ) -> 0, ( 4286459903 ) -> 0, ( 4286459902 ) -> 0, ( 4286459901 ) -> 0, () -> (RAC: m_multiplier -> 78 , m_adder -> 57)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1929904615
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 1 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1957747793
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 2
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 7, ( 33452030 ) -> 32, ( 25037828 ) -> 136, ( 25037829 ) -> 88, ( 25037830 ) -> 108, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 7, ( 33452030 ) -> 32, ( 25037828 ) -> 136, ( 25037829 ) -> 88, ( 25037830 ) -> 108, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 7, ( 33452030 ) -> 32, ( 25037828 ) -> 136, ( 25037829 ) -> 88, ( 25037830 ) -> 108, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 7100552 : BV:32
=unaliased_memslot.0
1 : 2097159 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 2 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 166154054108937839327222916221763591 : BV:128
=input.dst.exreg.2.2
1 : 2097159 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 7, ( 33452030 ) -> 32, ( 25037828 ) -> 136, ( 25037829 ) -> 88, ( 25037830 ) -> 108, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 7, ( 33452030 ) -> 32, ( 25037828 ) -> 136, ( 25037829 ) -> 88, ( 25037830 ) -> 108, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 7, ( 33452030 ) -> 32, ( 25037828 ) -> 136, ( 25037829 ) -> 88, ( 25037830 ) -> 108, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 7100552 : BV:32
=unaliased_memslot.0
1 : 2097159 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2025187190
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 3
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 255, ( 33452031 ) -> 255, ( 33452029 ) -> 255, ( 33452030 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 255, ( 33452031 ) -> 255, ( 33452029 ) -> 255, ( 33452030 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 255, ( 33452031 ) -> 255, ( 33452029 ) -> 255, ( 33452030 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 3 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 340282366920938463463374607431768211455 { -1 } : BV:128
=input.dst.exreg.2.2
1 : 4294967295 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 255, ( 33452031 ) -> 255, ( 33452029 ) -> 255, ( 33452030 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 255, ( 33452031 ) -> 255, ( 33452029 ) -> 255, ( 33452030 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 255, ( 33452031 ) -> 255, ( 33452029 ) -> 255, ( 33452030 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1967681095
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 4
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064224 ) -> 43, ( 4064225 ) -> 72, ( 4064226 ) -> 6, ( 4064227 ) -> 232, ( 4064228 ) -> 12, ( 4064229 ) -> 156, ( 4064230 ) -> 212, ( 4064231 ) -> 14, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064224 ) -> 43, ( 4064225 ) -> 72, ( 4064226 ) -> 6, ( 4064227 ) -> 232, ( 4064228 ) -> 12, ( 4064229 ) -> 156, ( 4064230 ) -> 212, ( 4064231 ) -> 14, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064224 ) -> 43, ( 4064225 ) -> 72, ( 4064226 ) -> 6, ( 4064227 ) -> 232, ( 4064228 ) -> 12, ( 4064229 ) -> 156, ( 4064230 ) -> 212, ( 4064231 ) -> 14, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 3892725803 { -402241493 } : BV:32
=unaliased_memslot.0
1 : 248814604 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 4 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064224 ) -> 43, ( 4064225 ) -> 72, ( 4064226 ) -> 6, ( 4064227 ) -> 232, ( 4064228 ) -> 12, ( 4064229 ) -> 156, ( 4064230 ) -> 212, ( 4064231 ) -> 14, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4064224 ) -> 43, ( 4064225 ) -> 72, ( 4064226 ) -> 6, ( 4064227 ) -> 232, ( 4064228 ) -> 12, ( 4064229 ) -> 156, ( 4064230 ) -> 212, ( 4064231 ) -> 14, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064224 ) -> 43, ( 4064225 ) -> 72, ( 4064226 ) -> 6, ( 4064227 ) -> 232, ( 4064228 ) -> 12, ( 4064229 ) -> 156, ( 4064230 ) -> 212, ( 4064231 ) -> 14, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 3892725803 { -402241493 } : BV:32
=unaliased_memslot.0
1 : 248814604 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
917679292
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 5
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064228 ) -> 255, ( 4064229 ) -> 255, ( 4064230 ) -> 255, ( 4064231 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064228 ) -> 255, ( 4064229 ) -> 255, ( 4064230 ) -> 255, ( 4064231 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064228 ) -> 255, ( 4064229 ) -> 255, ( 4064230 ) -> 255, ( 4064231 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 5 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064228 ) -> 255, ( 4064229 ) -> 255, ( 4064230 ) -> 255, ( 4064231 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4064228 ) -> 255, ( 4064229 ) -> 255, ( 4064230 ) -> 255, ( 4064231 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064228 ) -> 255, ( 4064229 ) -> 255, ( 4064230 ) -> 255, ( 4064231 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2006811972
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 6
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037824 ) -> 7, ( 25037825 ) -> 8, ( 25037826 ) -> 106, ( 25037827 ) -> 33, ( 4064236 ) -> 64, ( 4064237 ) -> 189, ( 4064238 ) -> 150, ( 4064239 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037824 ) -> 7, ( 25037825 ) -> 8, ( 25037826 ) -> 106, ( 25037827 ) -> 33, ( 4064236 ) -> 64, ( 4064237 ) -> 189, ( 4064238 ) -> 150, ( 4064239 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037824 ) -> 7, ( 25037825 ) -> 8, ( 25037826 ) -> 106, ( 25037827 ) -> 33, ( 4064236 ) -> 64, ( 4064237 ) -> 189, ( 4064238 ) -> 150, ( 4064239 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 560596999 : BV:32
=unaliased_memslot.0
1 : 227982656 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242608872
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 6 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037824 ) -> 7, ( 25037825 ) -> 8, ( 25037826 ) -> 106, ( 25037827 ) -> 33, ( 4064236 ) -> 64, ( 4064237 ) -> 189, ( 4064238 ) -> 150, ( 4064239 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 25037824 ) -> 7, ( 25037825 ) -> 8, ( 25037826 ) -> 106, ( 25037827 ) -> 33, ( 4064236 ) -> 64, ( 4064237 ) -> 189, ( 4064238 ) -> 150, ( 4064239 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037824 ) -> 7, ( 25037825 ) -> 8, ( 25037826 ) -> 106, ( 25037827 ) -> 33, ( 4064236 ) -> 64, ( 4064237 ) -> 189, ( 4064238 ) -> 150, ( 4064239 ) -> 13, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 560596999 : BV:32
=unaliased_memslot.0
1 : 227982656 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1242608872
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 7
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064236 ) -> 255, ( 4064237 ) -> 255, ( 4064238 ) -> 255, ( 4064239 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 4064236 ) -> 255, ( 4064237 ) -> 255, ( 4064238 ) -> 255, ( 4064239 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064236 ) -> 255, ( 4064237 ) -> 255, ( 4064238 ) -> 255, ( 4064239 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1137949908
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 7 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 4064236 ) -> 255, ( 4064237 ) -> 255, ( 4064238 ) -> 255, ( 4064239 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 4064236 ) -> 255, ( 4064237 ) -> 255, ( 4064238 ) -> 255, ( 4064239 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4064236 ) -> 255, ( 4064237 ) -> 255, ( 4064238 ) -> 255, ( 4064239 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1137949908
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 8
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037824 ) -> 1, ( 33452028 ) -> 1, ( 25037827 ) -> 16, ( 4064232 ) -> 140, ( 4064233 ) -> 24, ( 4064234 ) -> 18, ( 4064235 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037824 ) -> 1, ( 33452028 ) -> 1, ( 25037827 ) -> 16, ( 4064232 ) -> 140, ( 4064233 ) -> 24, ( 4064234 ) -> 18, ( 4064235 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037824 ) -> 1, ( 33452028 ) -> 1, ( 25037827 ) -> 16, ( 4064232 ) -> 140, ( 4064233 ) -> 24, ( 4064234 ) -> 18, ( 4064235 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 268435457 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 118626444 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
559301039
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 8 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 79228162532711081671548469249 : BV:128
=input.dst.exreg.2.2
1 : 1 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037824 ) -> 1, ( 33452028 ) -> 1, ( 25037827 ) -> 16, ( 4064232 ) -> 140, ( 4064233 ) -> 24, ( 4064234 ) -> 18, ( 4064235 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 25037824 ) -> 1, ( 33452028 ) -> 1, ( 25037827 ) -> 16, ( 4064232 ) -> 140, ( 4064233 ) -> 24, ( 4064234 ) -> 18, ( 4064235 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037824 ) -> 1, ( 33452028 ) -> 1, ( 25037827 ) -> 16, ( 4064232 ) -> 140, ( 4064233 ) -> 24, ( 4064234 ) -> 18, ( 4064235 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 268435457 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 118626444 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
559301039
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 9
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 1, ( 4064232 ) -> 255, ( 4064233 ) -> 255, ( 4064234 ) -> 255, ( 4064235 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 1, ( 4064232 ) -> 255, ( 4064233 ) -> 255, ( 4064234 ) -> 255, ( 4064235 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 1, ( 4064232 ) -> 255, ( 4064233 ) -> 255, ( 4064234 ) -> 255, ( 4064235 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1186090428
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 9 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 79228162532711081671548469249 : BV:128
=input.dst.exreg.2.2
1 : 1 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 1, ( 4064232 ) -> 255, ( 4064233 ) -> 255, ( 4064234 ) -> 255, ( 4064235 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 1, ( 4064232 ) -> 255, ( 4064233 ) -> 255, ( 4064234 ) -> 255, ( 4064235 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 1, ( 4064232 ) -> 255, ( 4064233 ) -> 255, ( 4064234 ) -> 255, ( 4064235 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 4294967295 { -1 } : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1186090428
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 10
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2004504234
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 10 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 1 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2004504234
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 11
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 33 , m_adder -> 10)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 33 , m_adder -> 10)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
88703954
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 11 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 310751980240922534228883751596733278086 { -29530386680015929234490855835034933370 } : BV:128
=input.dst.exreg.2.2
1 : 3922241414 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 33 , m_adder -> 10)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4286459900 ) -> 0, ( 4286459903 ) -> 0, ( 4286459902 ) -> 0, ( 4286459901 ) -> 0, () -> (RAC: m_multiplier -> 33 , m_adder -> 10)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
88703954
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 12
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
873524566
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 12 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
873524566
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 13
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2404485020
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 13 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 60494622620119679531392691176063817516 : BV:128
=input.dst.exreg.2.2
1 : 763549484 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 2147483648 { -2147483648 } : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4286459900 ) -> 0, ( 4286459903 ) -> 0, ( 4286459902 ) -> 0, ( 4286459901 ) -> 0, () -> (RAC: m_multiplier -> 171 , m_adder -> 216)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2404485020
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 14
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
773319847
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 14 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 1 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
773319847
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 15
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 96 , m_adder -> 115)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 96 , m_adder -> 115)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1709194750
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 15 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 2147483648 { -2147483648 } : BV:32
=input.dst.exreg.2.1
1 : 26186455756128739134271549472335156211 : BV:128
=input.dst.exreg.2.2
1 : 330519539 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 2147483648 { -2147483648 } : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 96 , m_adder -> 115)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4286459900 ) -> 0, ( 4286459903 ) -> 0, ( 4286459902 ) -> 0, ( 4286459901 ) -> 0, () -> (RAC: m_multiplier -> 96 , m_adder -> 115)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1709194750
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 16
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 7, ( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 7, ( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 7, ( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
435889744
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 16 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 554597137728977571700839284743 : BV:128
=input.dst.exreg.2.2
1 : 7 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 7, ( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 7, ( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 7, ( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 7 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
435889744
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 17
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 2, ( 25037828 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 2, ( 25037828 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 2, ( 25037828 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1344593499
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 17 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 158456325065422163343096938498 : BV:128
=input.dst.exreg.2.2
1 : 2 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 2, ( 25037828 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 2, ( 25037828 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 2, ( 25037828 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 2 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1344593499
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 18
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910300925
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 18 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 4286459900 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910300925
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 19
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910858270
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 19 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037836 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1910858270
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 20
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.0
1 : 16843008 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1140384172
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 20 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 1334440575363753010282544239948660992 : BV:128
=input.dst.exreg.2.2
1 : 16843008 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 0, ( 4286459900 ) -> 0, ( 4286459903 ) -> 0, ( 4286459902 ) -> 0, ( 4286459901 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 16843009 : BV:32
=unaliased_memslot.0
1 : 16843008 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1140384172
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 21
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
733450907
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 21 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
733450907
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 22
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 3, ( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 3, ( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 3, ( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1979015720
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 22 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 237684487598133245014645407747 : BV:128
=input.dst.exreg.2.2
1 : 3 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (( 33452028 ) -> 3, ( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (( 33452028 ) -> 3, ( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (( 33452028 ) -> 3, ( 25037832 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1979015720
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 23
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1326247643
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 23 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 1 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 1 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1326247643
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 24
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1736491298
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 24 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1736491298
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 25
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1396918184
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 25 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1396918184
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 26
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 26 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 27
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 27 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25037836 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25037836 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 4064236 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4064236 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 28
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.graph_edge_composition
((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 28 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25037852 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25037852 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%arrayidx1
1 : 4064252 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4064252 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 29
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.graph_edge_composition
((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)))
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 29 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25037868 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25037868 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%arrayidx1
1 : 4064268 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4064268 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1476453195
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 30
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=input.src.llvm-%i.0
1 : 16 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
668170982
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 30 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 80 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 20 : BV:32
=input.src.llvm-%i.0
1 : 20 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25037900 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 76 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25037900 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 20 : BV:32
=input.src.llvm-%arrayidx1
1 : 4064300 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4064300 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 76 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
668170982
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 31
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=input.src.llvm-%i.0
1 : 32 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1378811577
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 31 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 144 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 36 : BV:32
=input.src.llvm-%i.0
1 : 36 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25037964 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 140 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25037964 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 36 : BV:32
=input.src.llvm-%arrayidx1
1 : 4064364 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4064364 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 140 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1378811577
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 32
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=input.src.llvm-%i.0
1 : 64 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
983650352
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 32 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 272 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 68 : BV:32
=input.src.llvm-%i.0
1 : 68 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25038092 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 268 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25038092 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 68 : BV:32
=input.src.llvm-%arrayidx1
1 : 4064492 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4064492 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 268 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
983650352
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 33
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=input.src.llvm-%i.0
1 : 128 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
73407063
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 33 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 528 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 132 : BV:32
=input.src.llvm-%i.0
1 : 132 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25038348 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 524 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25038348 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 132 : BV:32
=input.src.llvm-%arrayidx1
1 : 4064748 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4064748 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 524 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
73407063
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 34
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=input.src.llvm-%i.0
1 : 256 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1511117184
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 34 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1040 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 260 : BV:32
=input.src.llvm-%i.0
1 : 260 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25038860 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 1036 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25038860 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 260 : BV:32
=input.src.llvm-%arrayidx1
1 : 4065260 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4065260 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 1036 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1511117184
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 35
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=input.src.llvm-%i.0
1 : 512 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
310440579
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 35 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2064 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 516 : BV:32
=input.src.llvm-%i.0
1 : 516 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25039884 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 2060 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25039884 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 516 : BV:32
=input.src.llvm-%arrayidx1
1 : 4066284 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4066284 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 2060 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
310440579
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 36
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=input.src.llvm-%i.0
1 : 1024 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2119434455
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 36 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 1028 : BV:32
=input.src.llvm-%i.0
1 : 1028 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25041932 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 4108 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25041932 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 1028 : BV:32
=input.src.llvm-%arrayidx1
1 : 4068332 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4068332 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 4108 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2119434455
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 37
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=input.src.llvm-%i.0
1 : 2048 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
516443731
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 37 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8208 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 2052 : BV:32
=input.src.llvm-%i.0
1 : 2052 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25046028 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 8204 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25046028 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 2052 : BV:32
=input.src.llvm-%arrayidx1
1 : 4072428 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4072428 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 8204 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
516443731
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 38
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=input.src.llvm-%i.0
1 : 4096 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1965381894
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 38 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16400 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4100 : BV:32
=input.src.llvm-%i.0
1 : 4100 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25054220 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 16396 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25054220 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4100 : BV:32
=input.src.llvm-%arrayidx1
1 : 4080620 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4080620 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 16396 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1965381894
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 39
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=input.src.llvm-%i.0
1 : 8192 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
759170114
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 39 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32784 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 8196 : BV:32
=input.src.llvm-%i.0
1 : 8196 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25070604 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 32780 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25070604 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 8196 : BV:32
=input.src.llvm-%arrayidx1
1 : 4097004 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4097004 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 32780 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
759170114
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 40
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=input.src.llvm-%i.0
1 : 16384 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1073492800
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 40 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65552 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 16388 : BV:32
=input.src.llvm-%i.0
1 : 16388 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25103372 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 65548 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25103372 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 16388 : BV:32
=input.src.llvm-%arrayidx1
1 : 4129772 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4129772 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 65548 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1073492800
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 41
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
95969100
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 41 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 25165804 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=input.src.llvm-%arrayidx
1 : 25165804 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 31996 : BV:32
=input.src.llvm-%arrayidx1
1 : 4192204 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4192204 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
95969100
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 42
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1205142902
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 42 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1205142902
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 43
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
646252101
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 43 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
646252101
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 44
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1502178849
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_path.graph_edge_composition
(epsilon)
=pc Lfor.body%1%1_L3%1%0 nodece 44 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4286459900 { -8507396 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=memlabel-mem-esp_end
1 : 4286459903 { -8507393 } : BV:32
=symbol.3
1 : 4064224 : BV:32
=symbol.1
1 : 25037824 : BV:32
=symbol.2
1 : 33452028 : BV:32
=dst_symbol_addr.1
1 : 25037824 : BV:32
=dst_symbol_addr.2
1 : 33452028 : BV:32
=dst_symbol_addr.3
1 : 4064224 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4286459900 { -8507396 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4286459900 { -8507396 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 33452031 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=memlabel-mem-esp_begin
1 : 58597376 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 25165823 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 33452028 : BV:32
=stack.size
1 : 4227862528 { -67104768 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 25037824 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4064224 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4192223 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1502178849
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 45
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4043161599 { -251805697 } : BV:32
=symbol.3
1 : 100352 : BV:32
=symbol.1
1 : 4160976672 { -133990624 } : BV:32
=symbol.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.1
1 : 4160976672 { -133990624 } : BV:32
=dst_symbol_addr.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.3
1 : 100352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4043161596 { -251805700 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966847 { -449 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4161104671 { -133862625 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966844 { -452 } : BV:32
=stack.size
1 : 4042919936 { -252047360 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160976672 { -133990624 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 100352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 228351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 45 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4043161596 { -251805700 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4043161599 { -251805697 } : BV:32
=symbol.3
1 : 100352 : BV:32
=symbol.1
1 : 4160976672 { -133990624 } : BV:32
=symbol.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.1
1 : 4160976672 { -133990624 } : BV:32
=dst_symbol_addr.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.3
1 : 100352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4043161596 { -251805700 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4043161596 { -251805700 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966847 { -449 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4161104671 { -133862625 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966844 { -452 } : BV:32
=stack.size
1 : 4042919936 { -252047360 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160976672 { -133990624 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 100352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 228351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 46
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4043161599 { -251805697 } : BV:32
=symbol.3
1 : 100352 : BV:32
=symbol.1
1 : 4160976672 { -133990624 } : BV:32
=symbol.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.1
1 : 4160976672 { -133990624 } : BV:32
=dst_symbol_addr.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.3
1 : 100352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4043161596 { -251805700 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966847 { -449 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4161104671 { -133862625 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966844 { -452 } : BV:32
=stack.size
1 : 4042919936 { -252047360 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160976672 { -133990624 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 100352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 228351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 46 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4043161596 { -251805700 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4043161599 { -251805697 } : BV:32
=symbol.3
1 : 100352 : BV:32
=symbol.1
1 : 4160976672 { -133990624 } : BV:32
=symbol.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.1
1 : 4160976672 { -133990624 } : BV:32
=dst_symbol_addr.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.3
1 : 100352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4043161596 { -251805700 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4043161596 { -251805700 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966847 { -449 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4160976684 { -133990612 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=input.src.llvm-%arrayidx
1 : 4160976684 { -133990612 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4161104671 { -133862625 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966844 { -452 } : BV:32
=stack.size
1 : 4042919936 { -252047360 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160976672 { -133990624 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 100364 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 100364 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 100352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 228351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 47
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4043161599 { -251805697 } : BV:32
=symbol.3
1 : 100352 : BV:32
=symbol.1
1 : 4160976672 { -133990624 } : BV:32
=symbol.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.1
1 : 4160976672 { -133990624 } : BV:32
=dst_symbol_addr.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.3
1 : 100352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4043161596 { -251805700 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966847 { -449 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4161104671 { -133862625 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966844 { -452 } : BV:32
=stack.size
1 : 4042919936 { -252047360 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160976672 { -133990624 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 100352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 228351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 47 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4043161596 { -251805700 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4043161599 { -251805697 } : BV:32
=symbol.3
1 : 100352 : BV:32
=symbol.1
1 : 4160976672 { -133990624 } : BV:32
=symbol.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.1
1 : 4160976672 { -133990624 } : BV:32
=dst_symbol_addr.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.3
1 : 100352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4043161596 { -251805700 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4043161596 { -251805700 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966847 { -449 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4160976700 { -133990596 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=input.src.llvm-%arrayidx
1 : 4160976700 { -133990596 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4161104671 { -133862625 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966844 { -452 } : BV:32
=stack.size
1 : 4042919936 { -252047360 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160976672 { -133990624 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%arrayidx1
1 : 100380 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 100380 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 100352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 228351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 48
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4043161599 { -251805697 } : BV:32
=symbol.3
1 : 100352 : BV:32
=symbol.1
1 : 4160976672 { -133990624 } : BV:32
=symbol.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.1
1 : 4160976672 { -133990624 } : BV:32
=dst_symbol_addr.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.3
1 : 100352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4043161596 { -251805700 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966847 { -449 } : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4161104671 { -133862625 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966844 { -452 } : BV:32
=stack.size
1 : 4042919936 { -252047360 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160976672 { -133990624 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 100352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 228351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 48 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4043161596 { -251805700 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4043161599 { -251805697 } : BV:32
=symbol.3
1 : 100352 : BV:32
=symbol.1
1 : 4160976672 { -133990624 } : BV:32
=symbol.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.1
1 : 4160976672 { -133990624 } : BV:32
=dst_symbol_addr.2
1 : 4294966844 { -452 } : BV:32
=dst_symbol_addr.3
1 : 100352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4043161596 { -251805700 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4043161596 { -251805700 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966847 { -449 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4160976716 { -133990580 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-esp_begin
1 : 241664 : BV:32
=input.src.llvm-%arrayidx
1 : 4160976716 { -133990580 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4161104671 { -133862625 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966844 { -452 } : BV:32
=stack.size
1 : 4042919936 { -252047360 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160976672 { -133990624 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%arrayidx1
1 : 100396 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 100396 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 100352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 228351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1363056687
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 49
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1170598296
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 49 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 999088124 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 999088124 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1170598296
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 50
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 50 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 152874547629270004310682232721571483936 : BV:128
=input.dst.exreg.2.2
1 : 1929548064 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 51
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 51 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 116627880696879795884167900492573832364 : BV:128
=input.dst.exreg.2.1
1 : 152874547629270004310682232721571483936 : BV:128
=input.dst.exreg.2.2
1 : 1929548064 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460530953 ) -> 118, ( 1460530946 ) -> 169, ( 1460530951 ) -> 99, ( 1460530954 ) -> 22, ( 1460530952 ) -> 52, ( 1460530958 ) -> 189, ( 1460530957 ) -> 182, ( 1460530949 ) -> 53, ( 1460530955 ) -> 166, ( 1460530944 ) -> 172, ( 1460530947 ) -> 176, ( 1460530959 ) -> 87, ( 1460530945 ) -> 244, ( 1460530950 ) -> 80, () -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=input.src.llvm-%1
1 : 1929548064 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%0
1 : 2064292136 : BV:32
=input.src.llvm-%2
1 : 3411732856 { -883234440 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1779364284 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%arrayidx
1 : 1779364284 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 1472050808 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 1460530956 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 1460530953 ) -> 118, ( 1460530946 ) -> 169, ( 1460530951 ) -> 99, ( 4294967293 ) -> 0, ( 1460530954 ) -> 22, ( 1460530952 ) -> 52, ( 1460530958 ) -> 189, ( 1460530957 ) -> 182, ( 1460530949 ) -> 53, ( 1460530955 ) -> 166, ( 1460530944 ) -> 172, ( 4294967294 ) -> 0, ( 1460530947 ) -> 176, ( 1460530959 ) -> 87, ( 1460530945 ) -> 244, ( 1460530950 ) -> 80, () -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 2355285248 { -1939682048 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1460530956 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 52
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 52 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 280513037271321008703224528670287009468 { -59769329649617454760150078761481201988 } : BV:128
=input.dst.exreg.2.1
1 : 152874547629270004310682232721571483936 : BV:128
=input.dst.exreg.2.2
1 : 1929548064 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460530970 ) -> 97, ( 1460530960 ) -> 188, ( 1460530953 ) -> 118, ( 1460530946 ) -> 169, ( 1460530951 ) -> 99, ( 1460530974 ) -> 8, ( 1460530954 ) -> 22, ( 1460530952 ) -> 52, ( 1460530958 ) -> 189, ( 1460530973 ) -> 216, ( 1460530957 ) -> 182, ( 1460530949 ) -> 53, ( 1460530955 ) -> 166, ( 1460530963 ) -> 43, ( 1460530944 ) -> 172, ( 1460530966 ) -> 155, ( 1460530967 ) -> 222, ( 1460530962 ) -> 245, ( 1460530965 ) -> 87, ( 1460530961 ) -> 22, ( 1460530947 ) -> 176, ( 1460530975 ) -> 211, ( 1460530959 ) -> 87, ( 1460530969 ) -> 152, ( 1460530945 ) -> 244, ( 1460530950 ) -> 80, ( 1460530968 ) -> 68, ( 1460530971 ) -> 33, () -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=input.src.llvm-%1
1 : 1929548064 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 8 : BV:32
=input.src.llvm-%i.0
1 : 8 : BV:32
=input.src.llvm-%0
1 : 2333780280 { -1961187016 } : BV:32
=input.src.llvm-%2
1 : 3681221000 { -613746296 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1779364300 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%arrayidx
1 : 1779364300 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 28 : BV:32
=input.src.llvm-%add
1 : 3540572296 { -754395000 } : BV:32
=input.src.llvm-%inc
1 : 8 : BV:32
=input.src.llvm-%arrayidx1
1 : 1460530972 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 1460530970 ) -> 97, ( 1460530960 ) -> 188, ( 1460530953 ) -> 118, ( 1460530946 ) -> 169, ( 1460530951 ) -> 99, ( 4294967293 ) -> 0, ( 1460530974 ) -> 8, ( 1460530954 ) -> 22, ( 1460530952 ) -> 52, ( 1460530958 ) -> 189, ( 1460530973 ) -> 216, ( 1460530957 ) -> 182, ( 1460530949 ) -> 53, ( 1460530955 ) -> 166, ( 1460530963 ) -> 43, ( 1460530944 ) -> 172, ( 1460530966 ) -> 155, ( 1460530967 ) -> 222, ( 4294967294 ) -> 0, ( 1460530962 ) -> 245, ( 1460530965 ) -> 87, ( 1460530961 ) -> 22, ( 1460530947 ) -> 176, ( 1460530975 ) -> 211, ( 1460530959 ) -> 87, ( 1460530969 ) -> 152, ( 1460530945 ) -> 244, ( 1460530950 ) -> 80, ( 1460530968 ) -> 68, ( 1460530971 ) -> 33, () -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 4154318592 { -140648704 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1460530972 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 28 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 53
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*((Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 53 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 48 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 104110634707193385727095613543543748812 : BV:128
=input.dst.exreg.2.1
1 : 152874547629270004310682232721571483936 : BV:128
=input.dst.exreg.2.2
1 : 1929548064 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460530970 ) -> 97, ( 1460530960 ) -> 188, ( 1460530953 ) -> 118, ( 1460530946 ) -> 169, ( 1460530951 ) -> 99, ( 1460530978 ) -> 64, ( 1460530974 ) -> 8, ( 1460530985 ) -> 186, ( 1460530954 ) -> 22, ( 1460530952 ) -> 52, ( 1460530958 ) -> 189, ( 1460530973 ) -> 216, ( 1460530957 ) -> 182, ( 1460530949 ) -> 53, ( 1460530990 ) -> 82, ( 1460530986 ) -> 172, ( 1460530991 ) -> 78, ( 1460530955 ) -> 166, ( 1460530963 ) -> 43, ( 1460530944 ) -> 172, ( 1460530976 ) -> 204, ( 1460530966 ) -> 155, ( 1460530987 ) -> 156, ( 1460530989 ) -> 250, ( 1460530967 ) -> 222, ( 1460530962 ) -> 245, ( 1460530984 ) -> 84, ( 1460530983 ) -> 89, ( 1460530977 ) -> 56, ( 1460530965 ) -> 87, ( 1460530961 ) -> 22, ( 1460530981 ) -> 121, ( 1460530947 ) -> 176, ( 1460530975 ) -> 211, ( 1460530959 ) -> 87, ( 1460530969 ) -> 152, ( 1460530982 ) -> 230, ( 1460530945 ) -> 244, ( 1460530950 ) -> 80, ( 1460530968 ) -> 68, ( 1460530971 ) -> 33, ( 1460530979 ) -> 167, () -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=input.src.llvm-%1
1 : 1929548064 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 12 : BV:32
=input.src.llvm-%i.0
1 : 12 : BV:32
=input.src.llvm-%0
1 : 2603268424 { -1691698872 } : BV:32
=input.src.llvm-%2
1 : 3950643608 { -344323688 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1779364316 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%arrayidx
1 : 1779364316 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 44 : BV:32
=input.src.llvm-%add
1 : 1314060952 : BV:32
=input.src.llvm-%inc
1 : 12 : BV:32
=input.src.llvm-%arrayidx1
1 : 1460530988 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 0, ( 1460530970 ) -> 97, ( 1460530960 ) -> 188, ( 1460530953 ) -> 118, ( 1460530946 ) -> 169, ( 1460530951 ) -> 99, ( 4294967293 ) -> 0, ( 1460530978 ) -> 64, ( 1460530974 ) -> 8, ( 1460530985 ) -> 186, ( 1460530954 ) -> 22, ( 1460530952 ) -> 52, ( 1460530958 ) -> 189, ( 1460530973 ) -> 216, ( 1460530957 ) -> 182, ( 1460530949 ) -> 53, ( 1460530990 ) -> 82, ( 1460530986 ) -> 172, ( 1460530991 ) -> 78, ( 1460530955 ) -> 166, ( 1460530963 ) -> 43, ( 1460530944 ) -> 172, ( 1460530976 ) -> 204, ( 1460530966 ) -> 155, ( 1460530987 ) -> 156, ( 1460530989 ) -> 250, ( 1460530967 ) -> 222, ( 4294967294 ) -> 0, ( 1460530962 ) -> 245, ( 1460530984 ) -> 84, ( 1460530983 ) -> 89, ( 1460530977 ) -> 56, ( 1460530965 ) -> 87, ( 1460530961 ) -> 22, ( 1460530981 ) -> 121, ( 1460530947 ) -> 176, ( 1460530975 ) -> 211, ( 1460530959 ) -> 87, ( 1460530969 ) -> 152, ( 1460530982 ) -> 230, ( 1460530945 ) -> 244, ( 1460530950 ) -> 80, ( 1460530968 ) -> 68, ( 1460530971 ) -> 33, ( 1460530979 ) -> 167, () -> (RAC: m_multiplier -> 113 , m_adder -> 44)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 1658384640 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1460530988 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 44 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1272024531
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 54
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2094347227
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 54 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294705148 { -262148 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 4294967295 { -1 } : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294705148 { -262148 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (( 4294705149 ) -> 255, ( 4294705150 ) -> 255, ( 4294705148 ) -> 255, ( 4294705151 ) -> 255, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2094347227
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 55
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
836881504
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 55 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 999088124 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 1 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 999088124 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 999088124 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
836881504
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 56
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 24 , m_adder -> 126)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 24 , m_adder -> 126)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
775164777
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 56 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 221391554277535225745210202557906843230 { -118890812643403237718164404873861368226 } : BV:128
=input.dst.exreg.2.2
1 : 2794354270 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 24 , m_adder -> 126)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 128, ( 4294967293 ) -> 0, ( 4294967294 ) -> 0, () -> (RAC: m_multiplier -> 24 , m_adder -> 126)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
775164777
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 57
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> (RAC: m_multiplier -> 24 , m_adder -> 126)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (() -> (RAC: m_multiplier -> 24 , m_adder -> 126)) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
775164777
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 57 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 336442209771506241089059725494281837506 { -3840157149432222374314881937486373950 } : BV:128
=input.dst.exreg.2.1
1 : 221391554277535225745210202557906843230 { -118890812643403237718164404873861368226 } : BV:128
=input.dst.exreg.2.2
1 : 2794354270 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 2147483648 { -2147483648 } : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460530953 ) -> 196, ( 1460530946 ) -> 24, ( 1460530951 ) -> 149, ( 1460530954 ) -> 128, ( 1460530952 ) -> 2, ( 1460530958 ) -> 28, ( 1460530957 ) -> 105, ( 1460530949 ) -> 193, ( 1460530956 ) -> 162, ( 1460530955 ) -> 122, ( 1460530944 ) -> 194, ( 1460530947 ) -> 63, ( 1460530959 ) -> 253, ( 1460530945 ) -> 27, ( 1460530950 ) -> 17, ( 1460530948 ) -> 98, () -> (RAC: m_multiplier -> 24 , m_adder -> 126)) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=input.src.llvm-%1
1 : 2794354270 { -1500613026 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%0
1 : 1716401694 : BV:32
=input.src.llvm-%2
1 : 3872306846 { -422660450 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1779364284 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%arrayidx
1 : 1779364284 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 4246497698 { -48469598 } : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 1460530956 : BV:32
=input.dst.mem
1 : (( 4294967292 ) -> 0, ( 4294967295 ) -> 128, ( 1460530953 ) -> 196, ( 1460530946 ) -> 24, ( 1460530951 ) -> 149, ( 4294967293 ) -> 0, ( 1460530954 ) -> 128, ( 1460530952 ) -> 2, ( 1460530958 ) -> 28, ( 1460530957 ) -> 105, ( 1460530949 ) -> 193, ( 1460530956 ) -> 162, ( 1460530955 ) -> 122, ( 1460530944 ) -> 194, ( 4294967294 ) -> 0, ( 1460530947 ) -> 63, ( 1460530959 ) -> 253, ( 1460530945 ) -> 27, ( 1460530950 ) -> 17, ( 1460530948 ) -> 98, () -> (RAC: m_multiplier -> 24 , m_adder -> 126)) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 374190852 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1460530956 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
775164777
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 58
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1860923474
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 58 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 999088124 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 237684487598133245014645407747 : BV:128
=input.dst.exreg.2.2
1 : 3 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 999088124 : BV:32
=commonMEM.nonstack.mem
1 : (( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1860923474
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 59
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3715575807 { -579391489 } : BV:32
=symbol.3
1 : 2473992512 { -1820974784 } : BV:32
=symbol.1
1 : 10755680 : BV:32
=symbol.2
1 : 2473992300 { -1820974996 } : BV:32
=dst_symbol_addr.1
1 : 10755680 : BV:32
=dst_symbol_addr.2
1 : 2473992300 { -1820974996 } : BV:32
=dst_symbol_addr.3
1 : 2473992512 { -1820974784 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3715575804 { -579391492 } : BV:32
=input.src.llvm-mem
1 : (( 2473992300 ) -> 25, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2473992300 ) -> 25, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2473992303 { -1820974993 } : BV:32
=memlabel-mem-esp_begin
1 : 2510917632 { -1784049664 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 10883679 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2473992300 { -1820974996 } : BV:32
=stack.size
1 : 1204658176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 10755680 : BV:32
=input.dst.mem
1 : (( 2473992300 ) -> 25, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2473992512 { -1820974784 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2474120511 { -1820846785 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 25 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1927647495
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 59 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3715575804 { -579391492 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 1980704063317777041788711731225 : BV:128
=input.dst.exreg.2.2
1 : 25 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 3715575807 { -579391489 } : BV:32
=symbol.3
1 : 2473992512 { -1820974784 } : BV:32
=symbol.1
1 : 10755680 : BV:32
=symbol.2
1 : 2473992300 { -1820974996 } : BV:32
=dst_symbol_addr.1
1 : 10755680 : BV:32
=dst_symbol_addr.2
1 : 2473992300 { -1820974996 } : BV:32
=dst_symbol_addr.3
1 : 2473992512 { -1820974784 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3715575804 { -579391492 } : BV:32
=input.src.llvm-mem
1 : (( 2473992300 ) -> 25, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3715575804 { -579391492 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2473992300 ) -> 25, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 2473992303 { -1820974993 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2510917632 { -1784049664 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 10883679 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 2473992300 { -1820974996 } : BV:32
=stack.size
1 : 1204658176 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 10755680 : BV:32
=input.dst.mem
1 : (( 2473992300 ) -> 25, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2473992512 { -1820974784 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2474120511 { -1820846785 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 25 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1927647495
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 60
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
79854224
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 60 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
79854224
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 61
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
79854224
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 61 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 2 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1779364284 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%arrayidx
1 : 1779364284 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 1460530956 : BV:32
=input.dst.mem
1 : (( 1460530944 ) -> 2, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1460530956 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 2 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
79854224
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 62
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4153126911 { -141840385 } : BV:32
=symbol.3
1 : 4157849984 { -137117312 } : BV:32
=symbol.1
1 : 4160742336 { -134224960 } : BV:32
=symbol.2
1 : 4159628036 { -135339260 } : BV:32
=dst_symbol_addr.1
1 : 4160742336 { -134224960 } : BV:32
=dst_symbol_addr.2
1 : 4159628036 { -135339260 } : BV:32
=dst_symbol_addr.3
1 : 4157849984 { -137117312 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4153126908 { -141840388 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4159628039 { -135339257 } : BV:32
=memlabel-mem-esp_begin
1 : 35020800 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4160870335 { -134096961 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4159628036 { -135339260 } : BV:32
=stack.size
1 : 4118106112 { -176861184 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160742336 { -134224960 } : BV:32
=input.dst.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4157849984 { -137117312 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4157977983 { -136989313 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 1 : BV:8
=unaliased_memslot.4
1 : 1 : BV:8
=unaliased_memslot.3
1 : 1 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
766221743
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 62 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4153126908 { -141840388 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 1334440654591915542993625911497130241 : BV:128
=input.dst.exreg.2.2
1 : 16843009 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4153126911 { -141840385 } : BV:32
=symbol.3
1 : 4157849984 { -137117312 } : BV:32
=symbol.1
1 : 4160742336 { -134224960 } : BV:32
=symbol.2
1 : 4159628036 { -135339260 } : BV:32
=dst_symbol_addr.1
1 : 4160742336 { -134224960 } : BV:32
=dst_symbol_addr.2
1 : 4159628036 { -135339260 } : BV:32
=dst_symbol_addr.3
1 : 4157849984 { -137117312 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4153126908 { -141840388 } : BV:32
=input.src.llvm-mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4153126908 { -141840388 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4159628039 { -135339257 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 35020800 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4160870335 { -134096961 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4159628036 { -135339260 } : BV:32
=stack.size
1 : 4118106112 { -176861184 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4160742336 { -134224960 } : BV:32
=input.dst.mem
1 : (( 4153126909 ) -> 0, ( 4153126910 ) -> 0, ( 4153126908 ) -> 0, ( 4153126911 ) -> 0, () -> 1) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4157849984 { -137117312 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4157977983 { -136989313 } : BV:32
=unaliased_memslot.1
1 : 1 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 1 : BV:8
=unaliased_memslot.4
1 : 1 : BV:8
=unaliased_memslot.3
1 : 1 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
766221743
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 63
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 1585504255 : BV:32
=symbol.3
1 : 142481392 : BV:32
=symbol.1
1 : 1216224240 : BV:32
=symbol.2
1 : 989855740 : BV:32
=dst_symbol_addr.1
1 : 1216224240 : BV:32
=dst_symbol_addr.2
1 : 989855740 : BV:32
=dst_symbol_addr.3
1 : 142481392 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1585504252 : BV:32
=input.src.llvm-mem
1 : (( 1216224244 ) -> 2, ( 989855740 ) -> 1, ( 142481396 ) -> 1, ( 1216224240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1216224244 ) -> 2, ( 989855740 ) -> 1, ( 142481396 ) -> 1, ( 1216224240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 989855743 : BV:32
=memlabel-mem-esp_begin
1 : 1350443008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1216352239 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 989855740 : BV:32
=stack.size
1 : 235061248 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1216224240 : BV:32
=input.dst.mem
1 : (( 1216224244 ) -> 2, ( 989855740 ) -> 1, ( 142481396 ) -> 1, ( 1216224240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 142481392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 142609391 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 1 : BV:8
=unaliased_memslot.4
1 : 2 : BV:8
=unaliased_memslot.3
1 : 1 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1221216242
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 63 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1585504252 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 79228162532711081671548469249 : BV:128
=input.dst.exreg.2.2
1 : 1 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 1585504255 : BV:32
=symbol.3
1 : 142481392 : BV:32
=symbol.1
1 : 1216224240 : BV:32
=symbol.2
1 : 989855740 : BV:32
=dst_symbol_addr.1
1 : 1216224240 : BV:32
=dst_symbol_addr.2
1 : 989855740 : BV:32
=dst_symbol_addr.3
1 : 142481392 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1585504252 : BV:32
=input.src.llvm-mem
1 : (( 1216224244 ) -> 2, ( 989855740 ) -> 1, ( 142481396 ) -> 1, ( 1216224240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1585504252 : BV:32
=commonMEM.nonstack.mem
1 : (( 1216224244 ) -> 2, ( 989855740 ) -> 1, ( 142481396 ) -> 1, ( 1216224240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 989855743 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 1350443008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1216352239 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 989855740 : BV:32
=stack.size
1 : 235061248 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1216224240 : BV:32
=input.dst.mem
1 : (( 1216224244 ) -> 2, ( 989855740 ) -> 1, ( 142481396 ) -> 1, ( 1216224240 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 142481392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 142609391 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 1 : BV:8
=unaliased_memslot.2
1 : 1 : BV:8
=unaliased_memslot.4
1 : 2 : BV:8
=unaliased_memslot.3
1 : 1 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1221216242
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 64
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460499264 : BV:32
=symbol.1
1 : 1779336880 : BV:32
=symbol.2
1 : 1796172464 : BV:32
=dst_symbol_addr.1
1 : 1779336880 : BV:32
=dst_symbol_addr.2
1 : 1796172464 : BV:32
=dst_symbol_addr.3
1 : 1460499264 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460499268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1460499268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796172467 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779464879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796172464 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779336880 : BV:32
=input.dst.mem
1 : (( 1460499268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460499264 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460627263 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 128 { -128 } : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
808681861
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 64 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460499264 : BV:32
=symbol.1
1 : 1779336880 : BV:32
=symbol.2
1 : 1796172464 : BV:32
=dst_symbol_addr.1
1 : 1779336880 : BV:32
=dst_symbol_addr.2
1 : 1796172464 : BV:32
=dst_symbol_addr.3
1 : 1460499264 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1460499268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1460499268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796172467 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779464879 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796172464 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779336880 : BV:32
=input.dst.mem
1 : (( 1460499268 ) -> 128, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460499264 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460627263 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 128 { -128 } : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
808681861
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 65
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2711650303 { -1583316993 } : BV:32
=symbol.3
1 : 2818481488 { -1476485808 } : BV:32
=symbol.1
1 : 2818317648 { -1476649648 } : BV:32
=symbol.2
1 : 3782670344 { -512296952 } : BV:32
=dst_symbol_addr.1
1 : 2818317648 { -1476649648 } : BV:32
=dst_symbol_addr.2
1 : 3782670344 { -512296952 } : BV:32
=dst_symbol_addr.3
1 : 2818481488 { -1476485808 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2711650300 { -1583316996 } : BV:32
=input.src.llvm-mem
1 : (( 3782670344 ) -> 78, ( 2818317656 ) -> 74, ( 2818317652 ) -> 23, ( 2818481496 ) -> 79, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 3782670344 ) -> 78, ( 2818317656 ) -> 74, ( 2818317652 ) -> 23, ( 2818481496 ) -> 79, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3782670347 { -512296949 } : BV:32
=memlabel-mem-esp_begin
1 : 889655296 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2818445647 { -1476521649 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3782670344 { -512296952 } : BV:32
=stack.size
1 : 1821995008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2818317648 { -1476649648 } : BV:32
=input.dst.mem
1 : (( 3782670344 ) -> 78, ( 2818317656 ) -> 74, ( 2818317652 ) -> 23, ( 2818481496 ) -> 79, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2818481488 { -1476485808 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2818609487 { -1476357809 } : BV:32
=unaliased_memslot.1
1 : 78 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 23 : BV:8
=unaliased_memslot.4
1 : 74 : BV:8
=unaliased_memslot.3
1 : 79 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
842217685
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 65 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2711650300 { -1583316996 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 6179796677551464370380780601422 : BV:128
=input.dst.exreg.2.2
1 : 78 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 2711650303 { -1583316993 } : BV:32
=symbol.3
1 : 2818481488 { -1476485808 } : BV:32
=symbol.1
1 : 2818317648 { -1476649648 } : BV:32
=symbol.2
1 : 3782670344 { -512296952 } : BV:32
=dst_symbol_addr.1
1 : 2818317648 { -1476649648 } : BV:32
=dst_symbol_addr.2
1 : 3782670344 { -512296952 } : BV:32
=dst_symbol_addr.3
1 : 2818481488 { -1476485808 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2711650300 { -1583316996 } : BV:32
=input.src.llvm-mem
1 : (( 3782670344 ) -> 78, ( 2818317656 ) -> 74, ( 2818317652 ) -> 23, ( 2818481496 ) -> 79, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2711650300 { -1583316996 } : BV:32
=commonMEM.nonstack.mem
1 : (( 3782670344 ) -> 78, ( 2818317656 ) -> 74, ( 2818317652 ) -> 23, ( 2818481496 ) -> 79, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3782670347 { -512296949 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 889655296 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2818445647 { -1476521649 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3782670344 { -512296952 } : BV:32
=stack.size
1 : 1821995008 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2818317648 { -1476649648 } : BV:32
=input.dst.mem
1 : (( 3782670344 ) -> 78, ( 2818317656 ) -> 74, ( 2818317652 ) -> 23, ( 2818481496 ) -> 79, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2818481488 { -1476485808 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2818609487 { -1476357809 } : BV:32
=unaliased_memslot.1
1 : 78 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 23 : BV:8
=unaliased_memslot.4
1 : 74 : BV:8
=unaliased_memslot.3
1 : 79 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
842217685
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 66
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 1041031167 : BV:32
=symbol.3
1 : 268308464 : BV:32
=symbol.1
1 : 536740848 : BV:32
=symbol.2
1 : 494923756 : BV:32
=dst_symbol_addr.1
1 : 536740848 : BV:32
=dst_symbol_addr.2
1 : 494923756 : BV:32
=dst_symbol_addr.3
1 : 268308464 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1041031164 : BV:32
=input.src.llvm-mem
1 : (( 536740852 ) -> 21, ( 268308472 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536740852 ) -> 21, ( 268308472 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 494923759 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536868847 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 494923756 : BV:32
=stack.size
1 : 235847680 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536740848 : BV:32
=input.dst.mem
1 : (( 536740852 ) -> 21, ( 268308472 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268308464 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268436463 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 21 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 3 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1213302451
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 66 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1041031164 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 1041031167 : BV:32
=symbol.3
1 : 268308464 : BV:32
=symbol.1
1 : 536740848 : BV:32
=symbol.2
1 : 494923756 : BV:32
=dst_symbol_addr.1
1 : 536740848 : BV:32
=dst_symbol_addr.2
1 : 494923756 : BV:32
=dst_symbol_addr.3
1 : 268308464 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1041031164 : BV:32
=input.src.llvm-mem
1 : (( 536740852 ) -> 21, ( 268308472 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1041031164 : BV:32
=commonMEM.nonstack.mem
1 : (( 536740852 ) -> 21, ( 268308472 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 494923759 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536868847 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 494923756 : BV:32
=stack.size
1 : 235847680 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536740848 : BV:32
=input.dst.mem
1 : (( 536740852 ) -> 21, ( 268308472 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268308464 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268436463 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 0 : BV:8
=unaliased_memslot.2
1 : 21 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 3 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1213302451
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 67
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 8 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1729887057
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 67 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 8 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1729887057
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 68
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 8 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1729887057
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 68 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1779364284 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=input.src.llvm-%arrayidx
1 : 1779364284 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 1460530956 : BV:32
=input.dst.mem
1 : (( 1779364272 ) -> 8, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1460530956 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:8
=unaliased_memslot.0
1 : 8 : BV:8
=unaliased_memslot.2
1 : 0 : BV:8
=unaliased_memslot.4
1 : 0 : BV:8
=unaliased_memslot.3
1 : 0 : BV:8
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1729887057
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 69
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536747000 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536747000 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536747000 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 7 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1231974323
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 69 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 999088124 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536747000 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 999088124 : BV:32
=commonMEM.nonstack.mem
1 : (( 536747000 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536747000 ) -> 7, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 7 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1231974323
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 70
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4030726143 { -264241153 } : BV:32
=symbol.3
1 : 1878919392 : BV:32
=symbol.1
1 : 4294727120 { -240176 } : BV:32
=symbol.2
1 : 1878919348 : BV:32
=dst_symbol_addr.1
1 : 4294727120 { -240176 } : BV:32
=dst_symbol_addr.2
1 : 1878919348 : BV:32
=dst_symbol_addr.3
1 : 1878919392 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4030726140 { -264241156 } : BV:32
=input.src.llvm-mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1878919351 : BV:32
=memlabel-mem-esp_begin
1 : 2147995648 { -2146971648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294855119 { -112177 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1878919348 : BV:32
=stack.size
1 : 1882730496 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294727120 { -240176 } : BV:32
=input.dst.mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1878919392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1879047391 : BV:32
=unaliased_memslot.1
1 : 84215045 : BV:32
=unaliased_memslot.0
1 : 84215042 : BV:32
=unaliased_memslot.2
1 : 84215042 : BV:32
=unaliased_memslot.4
1 : 84215042 : BV:32
=unaliased_memslot.3
1 : 84215047 : BV:32
=unaliased_memslot.5
1 : 84215042 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1518749253
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 70 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4030726140 { -264241156 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 6672203035275090116834884542840243458 : BV:128
=input.dst.exreg.2.2
1 : 84215042 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4030726143 { -264241153 } : BV:32
=symbol.3
1 : 1878919392 : BV:32
=symbol.1
1 : 4294727120 { -240176 } : BV:32
=symbol.2
1 : 1878919348 : BV:32
=dst_symbol_addr.1
1 : 4294727120 { -240176 } : BV:32
=dst_symbol_addr.2
1 : 1878919348 : BV:32
=dst_symbol_addr.3
1 : 1878919392 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4030726140 { -264241156 } : BV:32
=input.src.llvm-mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4030726140 { -264241156 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1878919351 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147995648 { -2146971648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294855119 { -112177 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1878919348 : BV:32
=stack.size
1 : 1882730496 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294727120 { -240176 } : BV:32
=input.dst.mem
1 : (( 4030726142 ) -> 0, ( 4030726141 ) -> 0, ( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, ( 4030726140 ) -> 0, ( 4030726143 ) -> 0, () -> 5) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1878919392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1879047391 : BV:32
=unaliased_memslot.1
1 : 84215045 : BV:32
=unaliased_memslot.0
1 : 84215042 : BV:32
=unaliased_memslot.2
1 : 84215042 : BV:32
=unaliased_memslot.4
1 : 84215042 : BV:32
=unaliased_memslot.3
1 : 84215047 : BV:32
=unaliased_memslot.5
1 : 84215042 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1518749253
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 71
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4030726143 { -264241153 } : BV:32
=symbol.3
1 : 1878919392 : BV:32
=symbol.1
1 : 4294727120 { -240176 } : BV:32
=symbol.2
1 : 1878919348 : BV:32
=dst_symbol_addr.1
1 : 4294727120 { -240176 } : BV:32
=dst_symbol_addr.2
1 : 1878919348 : BV:32
=dst_symbol_addr.3
1 : 1878919392 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4030726140 { -264241156 } : BV:32
=input.src.llvm-mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1878919351 : BV:32
=memlabel-mem-esp_begin
1 : 2147995648 { -2146971648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294855119 { -112177 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1878919348 : BV:32
=stack.size
1 : 1882730496 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294727120 { -240176 } : BV:32
=input.dst.mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1878919392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1879047391 : BV:32
=unaliased_memslot.1
1 : 84215045 : BV:32
=unaliased_memslot.0
1 : 84215042 : BV:32
=unaliased_memslot.2
1 : 84215042 : BV:32
=unaliased_memslot.4
1 : 84215042 : BV:32
=unaliased_memslot.3
1 : 84215047 : BV:32
=unaliased_memslot.5
1 : 84215042 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1518749253
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.graph_edge_composition
((L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)*(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 71 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4030726140 { -264241156 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 119968831432293182975475213018790438927 : BV:128
=input.dst.exreg.2.1
1 : 6672203035275090116834884542840243458 : BV:128
=input.dst.exreg.2.2
1 : 84215042 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4030726143 { -264241153 } : BV:32
=symbol.3
1 : 1878919392 : BV:32
=symbol.1
1 : 4294727120 { -240176 } : BV:32
=symbol.2
1 : 1878919348 : BV:32
=dst_symbol_addr.1
1 : 4294727120 { -240176 } : BV:32
=dst_symbol_addr.2
1 : 1878919348 : BV:32
=dst_symbol_addr.3
1 : 1878919392 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4030726140 { -264241156 } : BV:32
=input.src.llvm-mem
1 : (( 1878919404 ) -> 15, ( 1878919395 ) -> 90, ( 1878919394 ) -> 65, ( 1878919407 ) -> 90, ( 1878919393 ) -> 40, ( 1878919405 ) -> 40, ( 1878919406 ) -> 65, ( 1878919400 ) -> 16, ( 4294727128 ) -> 7, ( 1878919396 ) -> 6, ( 1878919392 ) -> 15, ( 1878919399 ) -> 75, ( 1878919401 ) -> 50, ( 1878919402 ) -> 75, ( 1878919403 ) -> 100, ( 1878919397 ) -> 25, ( 1878919398 ) -> 50, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4030726140 { -264241156 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1878919400 ) -> 2, ( 4294727128 ) -> 7, ( 1878919396 ) -> 2, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, () -> 5) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1878919351 : BV:32
=input.src.llvm-%1
1 : 84215042 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4 : BV:32
=input.src.llvm-%i.0
1 : 4 : BV:32
=input.src.llvm-%0
1 : 84215045 : BV:32
=input.src.llvm-%2
1 : 84215045 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4294727132 { -240164 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-esp_begin
1 : 2147995648 { -2146971648 } : BV:32
=input.src.llvm-%arrayidx
1 : 4294727132 { -240164 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294855119 { -112177 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1878919348 : BV:32
=stack.size
1 : 1882730496 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294727120 { -240176 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 12 : BV:32
=input.src.llvm-%add
1 : 1514219535 : BV:32
=input.src.llvm-%inc
1 : 4 : BV:32
=input.src.llvm-%arrayidx1
1 : 1878919404 : BV:32
=input.dst.mem
1 : (( 1878919404 ) -> 15, ( 1878919395 ) -> 90, ( 1878919394 ) -> 65, ( 4030726142 ) -> 0, ( 1878919407 ) -> 90, ( 1878919393 ) -> 40, ( 4030726141 ) -> 0, ( 1878919405 ) -> 40, ( 1878919406 ) -> 65, ( 1878919400 ) -> 16, ( 4294727128 ) -> 7, ( 1878919396 ) -> 6, ( 1878919392 ) -> 15, ( 1878919399 ) -> 75, ( 1878919401 ) -> 50, ( 1878919402 ) -> 75, ( 1878919403 ) -> 100, ( 1878919397 ) -> 25, ( 1878919398 ) -> 50, ( 4294727124 ) -> 2, ( 1878919348 ) -> 2, ( 4030726140 ) -> 0, ( 4030726143 ) -> 0, () -> 5) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 1430004490 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1878919404 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 12 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1878919392 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1879047391 : BV:32
=unaliased_memslot.1
1 : 84215045 : BV:32
=unaliased_memslot.0
1 : 84215042 : BV:32
=unaliased_memslot.2
1 : 84215042 : BV:32
=unaliased_memslot.4
1 : 84215042 : BV:32
=unaliased_memslot.3
1 : 84215047 : BV:32
=unaliased_memslot.5
1 : 84215042 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1518749253
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 72
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1796205108 ) -> 1, ( 1779364276 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 1796205108 ) -> 1, ( 1779364276 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1796205108 ) -> 1, ( 1779364276 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1561397607
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 72 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 79228162532711081671548469249 : BV:128
=input.dst.exreg.2.2
1 : 1 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1460530944 : BV:32
=symbol.1
1 : 1779364272 : BV:32
=symbol.2
1 : 1796205108 : BV:32
=dst_symbol_addr.1
1 : 1779364272 : BV:32
=dst_symbol_addr.2
1 : 1796205108 : BV:32
=dst_symbol_addr.3
1 : 1460530944 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 1796205108 ) -> 1, ( 1779364276 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 1796205108 ) -> 1, ( 1779364276 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1796205111 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1779492271 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1796205108 : BV:32
=stack.size
1 : 2147483648 { -2147483648 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1779364272 : BV:32
=input.dst.mem
1 : (( 1796205108 ) -> 1, ( 1779364276 ) -> 4, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1460530944 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1460658943 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 4 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1561397607
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 73
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 1482362879 : BV:32
=symbol.3
1 : 3758077696 { -536889600 } : BV:32
=symbol.1
1 : 2147461904 : BV:32
=symbol.2
1 : 536849180 : BV:32
=dst_symbol_addr.1
1 : 2147461904 : BV:32
=dst_symbol_addr.2
1 : 536849180 : BV:32
=dst_symbol_addr.3
1 : 3758077696 { -536889600 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1482362876 : BV:32
=input.src.llvm-mem
1 : (( 536849180 ) -> 41, ( 3758077700 ) -> 8, ( 536849181 ) -> 0, ( 3758077704 ) -> 41, ( 2147461912 ) -> 39, ( 2147461904 ) -> 67, ( 2147461916 ) -> 121, ( 2147461905 ) -> 64, ( 2147461909 ) -> 192, ( 3758077705 ) -> 192, ( 2147461917 ) -> 192, ( 3758077709 ) -> 128, ( 3758077708 ) -> 48, ( 2147461913 ) -> 128, ( 3758077701 ) -> 128, () -> 45) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536849180 ) -> 41, ( 3758077700 ) -> 8, ( 536849181 ) -> 0, ( 3758077704 ) -> 41, ( 2147461912 ) -> 39, ( 2147461904 ) -> 67, ( 2147461916 ) -> 121, ( 2147461905 ) -> 64, ( 2147461909 ) -> 192, ( 3758077705 ) -> 192, ( 2147461917 ) -> 192, ( 3758077709 ) -> 128, ( 3758077708 ) -> 48, ( 2147461913 ) -> 128, ( 3758077701 ) -> 128, () -> 45) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 536849183 : BV:32
=memlabel-mem-esp_begin
1 : 909234176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147589903 { -2147377393 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 536849180 : BV:32
=stack.size
1 : 573128704 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147461904 : BV:32
=input.dst.mem
1 : (( 536849180 ) -> 41, ( 3758077700 ) -> 8, ( 536849181 ) -> 0, ( 3758077704 ) -> 41, ( 2147461912 ) -> 39, ( 2147461904 ) -> 67, ( 2147461916 ) -> 121, ( 2147461905 ) -> 64, ( 2147461909 ) -> 192, ( 3758077705 ) -> 192, ( 2147461917 ) -> 192, ( 3758077709 ) -> 128, ( 3758077708 ) -> 48, ( 2147461913 ) -> 128, ( 3758077701 ) -> 128, () -> 45) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 3758077696 { -536889600 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758205695 { -536761601 } : BV:32
=unaliased_memslot.1
1 : 757940291 : BV:32
=unaliased_memslot.0
1 : 757923881 : BV:32
=unaliased_memslot.2
1 : 757973037 : BV:32
=unaliased_memslot.4
1 : 757956616 : BV:32
=unaliased_memslot.3
1 : 757956647 : BV:32
=unaliased_memslot.5
1 : 757973033 : BV:32
=unaliased_memslot.7
1 : 757956656 : BV:32
=unaliased_memslot.6
1 : 757973113 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
429377313
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 73 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1482362876 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 60048916431291172472207983092811235369 : BV:128
=input.dst.exreg.2.2
1 : 757923881 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 1482362879 : BV:32
=symbol.3
1 : 3758077696 { -536889600 } : BV:32
=symbol.1
1 : 2147461904 : BV:32
=symbol.2
1 : 536849180 : BV:32
=dst_symbol_addr.1
1 : 2147461904 : BV:32
=dst_symbol_addr.2
1 : 536849180 : BV:32
=dst_symbol_addr.3
1 : 3758077696 { -536889600 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1482362876 : BV:32
=input.src.llvm-mem
1 : (( 536849180 ) -> 41, ( 3758077700 ) -> 8, ( 536849181 ) -> 0, ( 3758077704 ) -> 41, ( 2147461912 ) -> 39, ( 2147461904 ) -> 67, ( 2147461916 ) -> 121, ( 2147461905 ) -> 64, ( 2147461909 ) -> 192, ( 3758077705 ) -> 192, ( 2147461917 ) -> 192, ( 3758077709 ) -> 128, ( 3758077708 ) -> 48, ( 2147461913 ) -> 128, ( 3758077701 ) -> 128, () -> 45) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1482362876 : BV:32
=commonMEM.nonstack.mem
1 : (( 536849180 ) -> 41, ( 3758077700 ) -> 8, ( 536849181 ) -> 0, ( 3758077704 ) -> 41, ( 2147461912 ) -> 39, ( 2147461904 ) -> 67, ( 2147461916 ) -> 121, ( 2147461905 ) -> 64, ( 2147461909 ) -> 192, ( 3758077705 ) -> 192, ( 2147461917 ) -> 192, ( 3758077709 ) -> 128, ( 3758077708 ) -> 48, ( 2147461913 ) -> 128, ( 3758077701 ) -> 128, () -> 45) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 536849183 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 909234176 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2147589903 { -2147377393 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 536849180 : BV:32
=stack.size
1 : 573128704 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2147461904 : BV:32
=input.dst.mem
1 : (( 536849180 ) -> 41, ( 1482362877 ) -> 0, ( 1482362878 ) -> 0, ( 3758077700 ) -> 8, ( 536849181 ) -> 0, ( 3758077704 ) -> 41, ( 2147461912 ) -> 39, ( 2147461904 ) -> 67, ( 2147461916 ) -> 121, ( 2147461905 ) -> 64, ( 2147461909 ) -> 192, ( 3758077705 ) -> 192, ( 2147461917 ) -> 192, ( 3758077709 ) -> 128, ( 3758077708 ) -> 48, ( 2147461913 ) -> 128, ( 3758077701 ) -> 128, ( 1482362876 ) -> 0, ( 1482362879 ) -> 0, () -> 45) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 3758077696 { -536889600 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3758205695 { -536761601 } : BV:32
=unaliased_memslot.1
1 : 757940291 : BV:32
=unaliased_memslot.0
1 : 757923881 : BV:32
=unaliased_memslot.2
1 : 757973037 : BV:32
=unaliased_memslot.4
1 : 757956616 : BV:32
=unaliased_memslot.3
1 : 757956647 : BV:32
=unaliased_memslot.5
1 : 757973033 : BV:32
=unaliased_memslot.7
1 : 757956656 : BV:32
=unaliased_memslot.6
1 : 757973113 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
429377313
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 74
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 1041031167 : BV:32
=symbol.3
1 : 268308464 : BV:32
=symbol.1
1 : 536740848 : BV:32
=symbol.2
1 : 494923756 : BV:32
=dst_symbol_addr.1
1 : 536740848 : BV:32
=dst_symbol_addr.2
1 : 494923756 : BV:32
=dst_symbol_addr.3
1 : 268308464 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1041031164 : BV:32
=input.src.llvm-mem
1 : (( 536740848 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536740848 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 494923759 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536868847 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 494923756 : BV:32
=stack.size
1 : 235847680 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536740848 : BV:32
=input.dst.mem
1 : (( 536740848 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268308464 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268436463 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1471402489
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 74 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 1041031164 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 1041031167 : BV:32
=symbol.3
1 : 268308464 : BV:32
=symbol.1
1 : 536740848 : BV:32
=symbol.2
1 : 494923756 : BV:32
=dst_symbol_addr.1
1 : 536740848 : BV:32
=dst_symbol_addr.2
1 : 494923756 : BV:32
=dst_symbol_addr.3
1 : 268308464 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 1041031164 : BV:32
=input.src.llvm-mem
1 : (( 536740848 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 1041031164 : BV:32
=commonMEM.nonstack.mem
1 : (( 536740848 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 494923759 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536868847 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 494923756 : BV:32
=stack.size
1 : 235847680 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536740848 : BV:32
=input.dst.mem
1 : (( 536740848 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268308464 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268436463 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.7
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1471402489
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 75
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2184200191 { -2110767105 } : BV:32
=symbol.3
1 : 2187226560 { -2107740736 } : BV:32
=symbol.1
1 : 39704304 : BV:32
=symbol.2
1 : 308178380 : BV:32
=dst_symbol_addr.1
1 : 39704304 : BV:32
=dst_symbol_addr.2
1 : 308178380 : BV:32
=dst_symbol_addr.3
1 : 2187226560 { -2107740736 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2184200188 { -2110767108 } : BV:32
=input.src.llvm-mem
1 : (( 39704313 ) -> 0, ( 308178380 ) -> 1, ( 39704309 ) -> 0, ( 39704305 ) -> 0, ( 39704316 ) -> 1, ( 308178381 ) -> 0, ( 39704308 ) -> 1, ( 39704304 ) -> 241, ( 2187226573 ) -> 0, ( 2187226572 ) -> 1, ( 39704317 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 39704313 ) -> 0, ( 308178380 ) -> 1, ( 39704309 ) -> 0, ( 39704305 ) -> 0, ( 39704316 ) -> 1, ( 308178381 ) -> 0, ( 39704308 ) -> 1, ( 39704304 ) -> 241, ( 2187226573 ) -> 0, ( 2187226572 ) -> 1, ( 39704317 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 308178383 : BV:32
=memlabel-mem-esp_begin
1 : 2183032832 { -2111934464 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 39832303 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 308178380 : BV:32
=stack.size
1 : 1167360 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 39704304 : BV:32
=input.dst.mem
1 : (( 39704313 ) -> 0, ( 308178380 ) -> 1, ( 39704309 ) -> 0, ( 39704305 ) -> 0, ( 39704316 ) -> 1, ( 308178381 ) -> 0, ( 39704308 ) -> 1, ( 39704304 ) -> 241, ( 2187226573 ) -> 0, ( 2187226572 ) -> 1, ( 39704317 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2187226560 { -2107740736 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2187354559 { -2107612737 } : BV:32
=unaliased_memslot.1
1 : 50528497 : BV:32
=unaliased_memslot.0
1 : 50528257 : BV:32
=unaliased_memslot.2
1 : 50528257 : BV:32
=unaliased_memslot.4
1 : 50528257 : BV:32
=unaliased_memslot.3
1 : 50528259 : BV:32
=unaliased_memslot.5
1 : 50528257 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
100995797
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 75 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2184200188 { -2110767108 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 4003260958090596441447990642170068993 : BV:128
=input.dst.exreg.2.2
1 : 50528257 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 2184200191 { -2110767105 } : BV:32
=symbol.3
1 : 2187226560 { -2107740736 } : BV:32
=symbol.1
1 : 39704304 : BV:32
=symbol.2
1 : 308178380 : BV:32
=dst_symbol_addr.1
1 : 39704304 : BV:32
=dst_symbol_addr.2
1 : 308178380 : BV:32
=dst_symbol_addr.3
1 : 2187226560 { -2107740736 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2184200188 { -2110767108 } : BV:32
=input.src.llvm-mem
1 : (( 39704313 ) -> 0, ( 308178380 ) -> 1, ( 39704309 ) -> 0, ( 39704305 ) -> 0, ( 39704316 ) -> 1, ( 308178381 ) -> 0, ( 39704308 ) -> 1, ( 39704304 ) -> 241, ( 2187226573 ) -> 0, ( 2187226572 ) -> 1, ( 39704317 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2184200188 { -2110767108 } : BV:32
=commonMEM.nonstack.mem
1 : (( 39704313 ) -> 0, ( 308178380 ) -> 1, ( 39704309 ) -> 0, ( 39704305 ) -> 0, ( 39704316 ) -> 1, ( 308178381 ) -> 0, ( 39704308 ) -> 1, ( 39704304 ) -> 241, ( 2187226573 ) -> 0, ( 2187226572 ) -> 1, ( 39704317 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 308178383 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 2183032832 { -2111934464 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 39832303 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 308178380 : BV:32
=stack.size
1 : 1167360 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 39704304 : BV:32
=input.dst.mem
1 : (( 39704313 ) -> 0, ( 2184200190 ) -> 0, ( 2184200189 ) -> 0, ( 308178380 ) -> 1, ( 39704309 ) -> 0, ( 39704305 ) -> 0, ( 39704316 ) -> 1, ( 308178381 ) -> 0, ( 39704308 ) -> 1, ( 39704304 ) -> 241, ( 2187226573 ) -> 0, ( 2187226572 ) -> 1, ( 39704317 ) -> 0, ( 2184200188 ) -> 0, ( 2184200191 ) -> 0, () -> 3) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2187226560 { -2107740736 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2187354559 { -2107612737 } : BV:32
=unaliased_memslot.1
1 : 50528497 : BV:32
=unaliased_memslot.0
1 : 50528257 : BV:32
=unaliased_memslot.2
1 : 50528257 : BV:32
=unaliased_memslot.4
1 : 50528257 : BV:32
=unaliased_memslot.3
1 : 50528259 : BV:32
=unaliased_memslot.5
1 : 50528257 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
100995797
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 76
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 16647696 : BV:32
=symbol.1
1 : 153311152 : BV:32
=symbol.2
1 : 153311132 : BV:32
=dst_symbol_addr.1
1 : 153311152 : BV:32
=dst_symbol_addr.2
1 : 153311132 : BV:32
=dst_symbol_addr.3
1 : 16647696 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 153311132 ) -> 1, ( 153311164 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 153311132 ) -> 1, ( 153311164 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 153311135 : BV:32
=memlabel-mem-esp_begin
1 : 167776256 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 153439151 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 153311132 : BV:32
=stack.size
1 : 4127191040 { -167776256 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 153311152 : BV:32
=input.dst.mem
1 : (( 153311132 ) -> 1, ( 153311164 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 16647696 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 16775695 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
408563574
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 76 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 79228162532711081671548469249 : BV:128
=input.dst.exreg.2.2
1 : 1 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 16647696 : BV:32
=symbol.1
1 : 153311152 : BV:32
=symbol.2
1 : 153311132 : BV:32
=dst_symbol_addr.1
1 : 153311152 : BV:32
=dst_symbol_addr.2
1 : 153311132 : BV:32
=dst_symbol_addr.3
1 : 16647696 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (( 153311132 ) -> 1, ( 153311164 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (( 153311132 ) -> 1, ( 153311164 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 153311135 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 167776256 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 153439151 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 153311132 : BV:32
=stack.size
1 : 4127191040 { -167776256 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 153311152 : BV:32
=input.dst.mem
1 : (( 153311132 ) -> 1, ( 153311164 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 16647696 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 16775695 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 1 : BV:32
=unaliased_memslot.2
1 : 1 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
408563574
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 77
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
381477694
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 77 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 999088124 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 1 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 1 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 999088124 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
381477694
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 78
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1940492747
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 78 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 999088124 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 1 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 1 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 999088124 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1940492747
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 79
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
408409645
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 79 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294705148 { -262148 } : BV:32
=input.dst.exreg.0.5
1 : 4294967295 { -1 } : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4294705151 { -262145 } : BV:32
=symbol.3
1 : 2352 : BV:32
=symbol.1
1 : 4294838032 { -129264 } : BV:32
=symbol.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.1
1 : 4294838032 { -129264 } : BV:32
=dst_symbol_addr.2
1 : 4294967164 { -132 } : BV:32
=dst_symbol_addr.3
1 : 2352 : BV:32
=callee_save_const.0
1 : 4294967295 { -1 } : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294705148 { -262148 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294705148 { -262148 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294967167 { -129 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 212992 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4294966031 { -1265 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294967164 { -132 } : BV:32
=stack.size
1 : 4294492160 { -475136 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4294838032 { -129264 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2352 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 130351 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
408409645
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 80
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2550136831 { -1744830465 } : BV:32
=symbol.3
1 : 2550874992 { -1744092304 } : BV:32
=symbol.1
1 : 2550525584 { -1744441712 } : BV:32
=symbol.2
1 : 4160774272 { -134193024 } : BV:32
=dst_symbol_addr.1
1 : 2550525584 { -1744441712 } : BV:32
=dst_symbol_addr.2
1 : 4160774272 { -134193024 } : BV:32
=dst_symbol_addr.3
1 : 2550874992 { -1744092304 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2550136828 { -1744830468 } : BV:32
=input.src.llvm-mem
1 : (( 2550525596 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 2550525596 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4160774275 { -134193021 } : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2550653583 { -1744313713 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4160774272 { -134193024 } : BV:32
=stack.size
1 : 2550136832 { -1744830464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2550525584 { -1744441712 } : BV:32
=input.dst.mem
1 : (( 2550525596 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2550874992 { -1744092304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2551002991 { -1743964305 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 63 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1392438180
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 80 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2550136828 { -1744830468 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 2550136831 { -1744830465 } : BV:32
=symbol.3
1 : 2550874992 { -1744092304 } : BV:32
=symbol.1
1 : 2550525584 { -1744441712 } : BV:32
=symbol.2
1 : 4160774272 { -134193024 } : BV:32
=dst_symbol_addr.1
1 : 2550525584 { -1744441712 } : BV:32
=dst_symbol_addr.2
1 : 4160774272 { -134193024 } : BV:32
=dst_symbol_addr.3
1 : 2550874992 { -1744092304 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2550136828 { -1744830468 } : BV:32
=input.src.llvm-mem
1 : (( 2550525596 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2550136828 { -1744830468 } : BV:32
=commonMEM.nonstack.mem
1 : (( 2550525596 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4160774275 { -134193021 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2550653583 { -1744313713 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4160774272 { -134193024 } : BV:32
=stack.size
1 : 2550136832 { -1744830464 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2550525584 { -1744441712 } : BV:32
=input.dst.mem
1 : (( 2550525596 ) -> 63, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2550874992 { -1744092304 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2551002991 { -1743964305 } : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 0 : BV:32
=unaliased_memslot.5
1 : 63 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1392438180
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 81
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536747000 ) -> 1, ( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 536747000 ) -> 1, ( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536747000 ) -> 1, ( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
819625524
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 81 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 999088124 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 237684487598133245014645407747 : BV:128
=input.dst.exreg.2.2
1 : 3 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (( 536747000 ) -> 1, ( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 999088124 : BV:32
=commonMEM.nonstack.mem
1 : (( 536747000 ) -> 1, ( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (( 536747000 ) -> 1, ( 427819004 ) -> 3, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=unaliased_memslot.1
1 : 0 : BV:32
=unaliased_memslot.0
1 : 3 : BV:32
=unaliased_memslot.2
1 : 0 : BV:32
=unaliased_memslot.4
1 : 0 : BV:32
=unaliased_memslot.3
1 : 1 : BV:32
=unaliased_memslot.5
1 : 0 : BV:32
=unaliased_memslot.6
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
819625524
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 82
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294885375 { -81921 } : BV:32
=symbol.3
1 : 787456 : BV:32
=symbol.1
1 : 336896 : BV:32
=symbol.2
1 : 4294966736 { -560 } : BV:32
=dst_symbol_addr.1
1 : 336896 : BV:32
=dst_symbol_addr.2
1 : 4294966736 { -560 } : BV:32
=dst_symbol_addr.3
1 : 787456 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294885372 { -81924 } : BV:32
=input.src.llvm-mem
1 : (( 787464 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (( 787464 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966739 { -557 } : BV:32
=memlabel-mem-esp_begin
1 : 925696 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 464895 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966736 { -560 } : BV:32
=stack.size
1 : 4293959680 { -1007616 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 336896 : BV:32
=input.dst.mem
1 : (( 787464 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 787456 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 915455 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
985778828
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 82 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294885372 { -81924 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 4294885375 { -81921 } : BV:32
=symbol.3
1 : 787456 : BV:32
=symbol.1
1 : 336896 : BV:32
=symbol.2
1 : 4294966736 { -560 } : BV:32
=dst_symbol_addr.1
1 : 336896 : BV:32
=dst_symbol_addr.2
1 : 4294966736 { -560 } : BV:32
=dst_symbol_addr.3
1 : 787456 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294885372 { -81924 } : BV:32
=input.src.llvm-mem
1 : (( 787464 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294885372 { -81924 } : BV:32
=commonMEM.nonstack.mem
1 : (( 787464 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294966739 { -557 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 925696 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 464895 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294966736 { -560 } : BV:32
=stack.size
1 : 4293959680 { -1007616 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 336896 : BV:32
=input.dst.mem
1 : (( 787464 ) -> 1, () -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 787456 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 915455 : BV:32
=unaliased_memslot.1
1 : 1 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
985778828
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 83
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_graphce
=graphce counterexample at pc L0%0%1_L0%0%1
=counter_example_begin
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2096521213
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.graph_edge_composition
(L0%0%1_L0%0%1=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge: L0%0%1_L0%0%1 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.ec from L0%0%1 to Lfor.body%1%1 at unroll 4 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((L0%0%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1)))
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: L0%0%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%i.0
1 : 0 : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(((start_pc_edge*  br label %for.cond, !dbg !16)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !16))*(  br label %for.cond, !dbg !16*  br label %for.cond, !dbg !16))
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.ec from L0%0%1 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%0%1=>L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge: L0%0%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=dst.exreg.0.6
1 : callee_save_const.1 : BV:32
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : 0 : BV:1
6 : bvconcat(4, 5) : BV:32
7 : 5 : INT
8 : bvextract(6, 2, 7) : BV:27
9 : 3 : INT
10 : 0 : INT
11 : bvextract(6, 9, 10) : BV:4
12 : bvconcat(5, 11) : BV:5
13 : bvconcat(8, 12) : BV:32
14 : 12 : INT
15 : bvextract(13, 2, 14) : BV:20
16 : 10 : INT
17 : bvextract(13, 16, 10) : BV:11
18 : bvconcat(5, 17) : BV:12
19 : bvconcat(15, 18) : BV:32
20 : 8 : INT
21 : bvextract(19, 2, 20) : BV:24
22 : input.dst.exreg.0.0 : BV:32
23 : bvxor(22, 22) : BV:32
24 : bvsign(23) : BV:1
25 : 1 : BV:1
26 : eq(24, 25) : BOOL
27 : ite(26, 25, 5) : BV:1
28 : 6 : INT
29 : bvextract(19, 28, 10) : BV:7
30 : bvconcat(27, 29) : BV:8
31 : bvconcat(21, 30) : BV:32
32 : 7 : INT
33 : bvextract(31, 2, 32) : BV:25
34 : 0 : BV:32
35 : eq(23, 34) : BOOL
36 : ite(35, 25, 5) : BV:1
37 : bvextract(31, 7, 10) : BV:6
38 : bvconcat(36, 37) : BV:7
39 : bvconcat(33, 38) : BV:32
40 : bvextract(39, 2, 9) : BV:29
41 : bvextract(39, 3, 10) : BV:2
42 : bvconcat(5, 41) : BV:3
43 : bvconcat(40, 42) : BV:32
44 : 11 : INT
45 : bvextract(43, 2, 44) : BV:21
46 : bvextract(1, 16, 16) : BV:1
47 : eq(46, 25) : BOOL
48 : ite(47, 25, 5) : BV:1
49 : 9 : INT
50 : bvextract(43, 49, 10) : BV:10
51 : bvconcat(48, 50) : BV:11
52 : bvconcat(45, 51) : BV:32
=dst.esp.L0%1%1
1 : input_stack_pointer_const : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.9.0
1 : 0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : 1 : BV:1
7 : 0 : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : not(4) : BOOL
6 : bvsign(2) : BV:1
7 : 1 : BV:1
8 : eq(6, 7) : BOOL
9 : not(8) : BOOL
10 : and(5, 9) : BOOL
11 : 0 : BV:1
12 : ite(10, 7, 11) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : 1 : BV:1
6 : 0 : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.2.2
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
=dst.exreg.0.5
1 : callee_save_const.0 : BV:32
=dst.exreg.0.4
1 : input_stack_pointer_const : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
=dst.exreg.2.1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.5 : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : retaddr_const : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : mlvar.dst.0 : MEMLABEL
9 : dst_symbol_addr.2 : BV:32
10 : select(7, 8, 9, 5, 6) : BV:32
11 : 96 : INT
12 : bvzero_ext(10, 11) : BV:128
13 : 31 : INT
14 : 0 : INT
15 : bvextract(12, 13, 14) : BV:32
16 : bvconcat(15, 15) : BV:64
17 : bvconcat(16, 16) : BV:128
=dst.exreg.0.3
1 : callee_save_const.2 : BV:32
=dst.exreg.15.0
1 : 1 : BV:1
=dst.exreg.0.7
1 : callee_save_const.3 : BV:32
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : bvsign(2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
7 : 0 : BV:1
8 : ite(6, 4, 7) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : bvxor(1, 1) : BV:32
3 : 0 : BV:32
4 : eq(2, 3) : BOOL
5 : bvsign(2) : BV:1
6 : 1 : BV:1
7 : eq(5, 6) : BOOL
8 : or(4, 7) : BOOL
9 : 0 : BV:1
10 : ite(8, 6, 9) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:((start_pc_edge*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 83 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 0 : BV:32
=input.dst.exreg.0.3
1 : 1 : BV:32
=input.dst.exreg.0.4
1 : 999088124 : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.2.2
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 64 : BV:32
=input.dst.exreg.7.0
1 : 1 : BV:1
=input.dst.exreg.8.0
1 : 0 : BV:1
=input.dst.exreg.9.0
1 : 0 : BV:1
=input.dst.exreg.10.0
1 : 0 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 1 : BV:1
=input.dst.exreg.16.0
1 : 1 : BV:1
=memlabel-mem-esp_end
1 : 999088127 : BV:32
=symbol.3
1 : 268310512 : BV:32
=symbol.1
1 : 536746992 : BV:32
=symbol.2
1 : 427819004 : BV:32
=dst_symbol_addr.1
1 : 536746992 : BV:32
=dst_symbol_addr.2
1 : 427819004 : BV:32
=dst_symbol_addr.3
1 : 268310512 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 1 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 999088124 : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 999088124 : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 427819007 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 0 : BV:32
=input.src.llvm-%i.0
1 : 0 : BV:32
=memlabel-mem-esp_begin
1 : 805183488 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 536874991 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 427819004 : BV:32
=stack.size
1 : 193904640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 536746992 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 268310512 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 268438511 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2096521213
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 84
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 64 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4280254460 { -14712836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4280254463 { -14712833 } : BV:32
=symbol.3
1 : 3206231504 { -1088735792 } : BV:32
=symbol.1
1 : 3744807408 { -550159888 } : BV:32
=symbol.2
1 : 1075079624 : BV:32
=dst_symbol_addr.1
1 : 3744807408 { -550159888 } : BV:32
=dst_symbol_addr.2
1 : 1075079624 : BV:32
=dst_symbol_addr.3
1 : 3206231504 { -1088735792 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4280254460 { -14712836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4280254460 { -14712836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1075079627 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 16 : BV:32
=input.src.llvm-%i.0
1 : 16 : BV:32
=memlabel-mem-esp_begin
1 : 3754258432 { -540708864 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3744935407 { -550031889 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1075079624 : BV:32
=stack.size
1 : 525996032 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3744807408 { -550159888 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 3206231504 { -1088735792 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3206359503 { -1088607793 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
515119502
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 84 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 80 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4280254460 { -14712836 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4280254463 { -14712833 } : BV:32
=symbol.3
1 : 3206231504 { -1088735792 } : BV:32
=symbol.1
1 : 3744807408 { -550159888 } : BV:32
=symbol.2
1 : 1075079624 : BV:32
=dst_symbol_addr.1
1 : 3744807408 { -550159888 } : BV:32
=dst_symbol_addr.2
1 : 1075079624 : BV:32
=dst_symbol_addr.3
1 : 3206231504 { -1088735792 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4280254460 { -14712836 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4280254460 { -14712836 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1075079627 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 20 : BV:32
=input.src.llvm-%i.0
1 : 20 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 3744807484 { -550159812 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 76 : BV:32
=memlabel-mem-esp_begin
1 : 3754258432 { -540708864 } : BV:32
=input.src.llvm-%arrayidx
1 : 3744807484 { -550159812 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3744935407 { -550031889 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1075079624 : BV:32
=stack.size
1 : 525996032 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3744807408 { -550159888 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 76 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 20 : BV:32
=input.src.llvm-%arrayidx1
1 : 3206231580 { -1088735716 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 3206231580 { -1088735716 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 76 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3206231504 { -1088735792 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3206359503 { -1088607793 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
515119502
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 85
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 128 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3729743868 { -565223428 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3729743871 { -565223425 } : BV:32
=symbol.3
1 : 3561231824 { -733735472 } : BV:32
=symbol.1
1 : 3561622000 { -733345296 } : BV:32
=symbol.2
1 : 572082632 : BV:32
=dst_symbol_addr.1
1 : 3561622000 { -733345296 } : BV:32
=dst_symbol_addr.2
1 : 572082632 : BV:32
=dst_symbol_addr.3
1 : 3561231824 { -733735472 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3729743868 { -565223428 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3729743868 { -565223428 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 572082635 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 32 : BV:32
=input.src.llvm-%i.0
1 : 32 : BV:32
=memlabel-mem-esp_begin
1 : 3728744448 { -566222848 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3561749999 { -733217297 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 572082632 : BV:32
=stack.size
1 : 999424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3561622000 { -733345296 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 3561231824 { -733735472 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3561359823 { -733607473 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1185178690
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 85 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 144 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3729743868 { -565223428 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 3729743871 { -565223425 } : BV:32
=symbol.3
1 : 3561231824 { -733735472 } : BV:32
=symbol.1
1 : 3561622000 { -733345296 } : BV:32
=symbol.2
1 : 572082632 : BV:32
=dst_symbol_addr.1
1 : 3561622000 { -733345296 } : BV:32
=dst_symbol_addr.2
1 : 572082632 : BV:32
=dst_symbol_addr.3
1 : 3561231824 { -733735472 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3729743868 { -565223428 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3729743868 { -565223428 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 572082635 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 36 : BV:32
=input.src.llvm-%i.0
1 : 36 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 3561622140 { -733345156 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 140 : BV:32
=memlabel-mem-esp_begin
1 : 3728744448 { -566222848 } : BV:32
=input.src.llvm-%arrayidx
1 : 3561622140 { -733345156 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3561749999 { -733217297 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 572082632 : BV:32
=stack.size
1 : 999424 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3561622000 { -733345296 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 140 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 36 : BV:32
=input.src.llvm-%arrayidx1
1 : 3561231964 { -733735332 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 3561231964 { -733735332 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 140 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3561231824 { -733735472 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3561359823 { -733607473 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1185178690
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 86
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 256 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3613327356 { -681639940 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3613327359 { -681639937 } : BV:32
=symbol.3
1 : 1079162320 : BV:32
=symbol.1
1 : 3227826672 { -1067140624 } : BV:32
=symbol.2
1 : 1075997128 : BV:32
=dst_symbol_addr.1
1 : 3227826672 { -1067140624 } : BV:32
=dst_symbol_addr.2
1 : 1075997128 : BV:32
=dst_symbol_addr.3
1 : 1079162320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3613327356 { -681639940 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3613327356 { -681639940 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1075997131 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 64 : BV:32
=input.src.llvm-%i.0
1 : 64 : BV:32
=memlabel-mem-esp_begin
1 : 3558699008 { -736268288 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3227954671 { -1067012625 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1075997128 : BV:32
=stack.size
1 : 54628352 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3227826672 { -1067140624 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1079162320 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1079290319 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
694708374
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 86 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 272 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3613327356 { -681639940 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 3613327359 { -681639937 } : BV:32
=symbol.3
1 : 1079162320 : BV:32
=symbol.1
1 : 3227826672 { -1067140624 } : BV:32
=symbol.2
1 : 1075997128 : BV:32
=dst_symbol_addr.1
1 : 3227826672 { -1067140624 } : BV:32
=dst_symbol_addr.2
1 : 1075997128 : BV:32
=dst_symbol_addr.3
1 : 1079162320 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3613327356 { -681639940 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3613327356 { -681639940 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 1075997131 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 68 : BV:32
=input.src.llvm-%i.0
1 : 68 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 3227826940 { -1067140356 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 268 : BV:32
=memlabel-mem-esp_begin
1 : 3558699008 { -736268288 } : BV:32
=input.src.llvm-%arrayidx
1 : 3227826940 { -1067140356 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3227954671 { -1067012625 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 1075997128 : BV:32
=stack.size
1 : 54628352 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3227826672 { -1067140624 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 268 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 68 : BV:32
=input.src.llvm-%arrayidx1
1 : 1079162588 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1079162588 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 268 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1079162320 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1079290319 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
694708374
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 87
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 512 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3456065532 { -838901764 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3456065535 { -838901761 } : BV:32
=symbol.3
1 : 1154749904 : BV:32
=symbol.1
1 : 1409190384 : BV:32
=symbol.2
1 : 620480968 : BV:32
=dst_symbol_addr.1
1 : 1409190384 : BV:32
=dst_symbol_addr.2
1 : 620480968 : BV:32
=dst_symbol_addr.3
1 : 1154749904 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3456065532 { -838901764 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3456065532 { -838901764 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 620480971 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 128 : BV:32
=input.src.llvm-%i.0
1 : 128 : BV:32
=memlabel-mem-esp_begin
1 : 3394772992 { -900194304 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1409318383 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 620480968 : BV:32
=stack.size
1 : 61292544 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1409190384 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1154749904 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1154877903 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
399459168
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 87 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 528 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3456065532 { -838901764 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 3456065535 { -838901761 } : BV:32
=symbol.3
1 : 1154749904 : BV:32
=symbol.1
1 : 1409190384 : BV:32
=symbol.2
1 : 620480968 : BV:32
=dst_symbol_addr.1
1 : 1409190384 : BV:32
=dst_symbol_addr.2
1 : 620480968 : BV:32
=dst_symbol_addr.3
1 : 1154749904 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3456065532 { -838901764 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3456065532 { -838901764 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 620480971 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 132 : BV:32
=input.src.llvm-%i.0
1 : 132 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1409190908 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 524 : BV:32
=memlabel-mem-esp_begin
1 : 3394772992 { -900194304 } : BV:32
=input.src.llvm-%arrayidx
1 : 1409190908 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1409318383 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 620480968 : BV:32
=stack.size
1 : 61292544 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1409190384 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 524 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 132 : BV:32
=input.src.llvm-%arrayidx1
1 : 1154750428 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1154750428 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 524 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1154749904 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1154877903 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
399459168
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 88
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 1024 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2610388988 { -1684578308 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 2610388991 { -1684578305 } : BV:32
=symbol.3
1 : 1888753104 : BV:32
=symbol.1
1 : 1893075440 : BV:32
=symbol.2
1 : 553243080 : BV:32
=dst_symbol_addr.1
1 : 1893075440 : BV:32
=dst_symbol_addr.2
1 : 553243080 : BV:32
=dst_symbol_addr.3
1 : 1888753104 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2610388988 { -1684578308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2610388988 { -1684578308 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 553243083 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 256 : BV:32
=input.src.llvm-%i.0
1 : 256 : BV:32
=memlabel-mem-esp_begin
1 : 1894785024 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1893203439 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 553243080 : BV:32
=stack.size
1 : 715603968 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1893075440 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1888753104 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1888881103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
547795445
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 88 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 1040 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 2610388988 { -1684578308 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 2610388991 { -1684578305 } : BV:32
=symbol.3
1 : 1888753104 : BV:32
=symbol.1
1 : 1893075440 : BV:32
=symbol.2
1 : 553243080 : BV:32
=dst_symbol_addr.1
1 : 1893075440 : BV:32
=dst_symbol_addr.2
1 : 553243080 : BV:32
=dst_symbol_addr.3
1 : 1888753104 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 2610388988 { -1684578308 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 2610388988 { -1684578308 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 553243083 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 260 : BV:32
=input.src.llvm-%i.0
1 : 260 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1893076476 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 1036 : BV:32
=memlabel-mem-esp_begin
1 : 1894785024 : BV:32
=input.src.llvm-%arrayidx
1 : 1893076476 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1893203439 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 553243080 : BV:32
=stack.size
1 : 715603968 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1893075440 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 1036 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 260 : BV:32
=input.src.llvm-%arrayidx1
1 : 1888754140 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1888754140 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 1036 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1888753104 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1888881103 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
547795445
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 89
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 2048 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4097269756 { -197697540 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4097269759 { -197697537 } : BV:32
=symbol.3
1 : 1411651024 : BV:32
=symbol.1
1 : 1482951152 : BV:32
=symbol.2
1 : 854315464 : BV:32
=dst_symbol_addr.1
1 : 1482951152 : BV:32
=dst_symbol_addr.2
1 : 854315464 : BV:32
=dst_symbol_addr.3
1 : 1411651024 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4097269756 { -197697540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4097269756 { -197697540 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 854315467 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 512 : BV:32
=input.src.llvm-%i.0
1 : 512 : BV:32
=memlabel-mem-esp_begin
1 : 2349596672 { -1945370624 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1483079151 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 854315464 : BV:32
=stack.size
1 : 1747673088 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1482951152 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1411651024 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1411779023 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2095410091
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 89 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 2064 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4097269756 { -197697540 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4097269759 { -197697537 } : BV:32
=symbol.3
1 : 1411651024 : BV:32
=symbol.1
1 : 1482951152 : BV:32
=symbol.2
1 : 854315464 : BV:32
=dst_symbol_addr.1
1 : 1482951152 : BV:32
=dst_symbol_addr.2
1 : 854315464 : BV:32
=dst_symbol_addr.3
1 : 1411651024 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4097269756 { -197697540 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4097269756 { -197697540 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 854315467 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 516 : BV:32
=input.src.llvm-%i.0
1 : 516 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1482953212 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 2060 : BV:32
=memlabel-mem-esp_begin
1 : 2349596672 { -1945370624 } : BV:32
=input.src.llvm-%arrayidx
1 : 1482953212 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1483079151 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 854315464 : BV:32
=stack.size
1 : 1747673088 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1482951152 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 2060 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 516 : BV:32
=input.src.llvm-%arrayidx1
1 : 1411653084 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1411653084 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 2060 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1411651024 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1411779023 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
2095410091
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 90
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 4096 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3691859964 { -603107332 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3691859967 { -603107329 } : BV:32
=symbol.3
1 : 4294817968 { -149328 } : BV:32
=symbol.1
1 : 3691961968 { -603005328 } : BV:32
=symbol.2
1 : 3707833600 { -587133696 } : BV:32
=dst_symbol_addr.1
1 : 3691961968 { -603005328 } : BV:32
=dst_symbol_addr.2
1 : 3707833600 { -587133696 } : BV:32
=dst_symbol_addr.3
1 : 4294817968 { -149328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3691859964 { -603107332 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3691859964 { -603107332 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3707833603 { -587133693 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 1024 : BV:32
=input.src.llvm-%i.0
1 : 1024 : BV:32
=memlabel-mem-esp_begin
1 : 65536 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3692089967 { -602877329 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707833600 { -587133696 } : BV:32
=stack.size
1 : 3691794432 { -603172864 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3691961968 { -603005328 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4294817968 { -149328 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294945967 { -21329 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1325043453
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 90 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 4112 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3691859964 { -603107332 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 3691859967 { -603107329 } : BV:32
=symbol.3
1 : 4294817968 { -149328 } : BV:32
=symbol.1
1 : 3691961968 { -603005328 } : BV:32
=symbol.2
1 : 3707833600 { -587133696 } : BV:32
=dst_symbol_addr.1
1 : 3691961968 { -603005328 } : BV:32
=dst_symbol_addr.2
1 : 3707833600 { -587133696 } : BV:32
=dst_symbol_addr.3
1 : 4294817968 { -149328 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3691859964 { -603107332 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3691859964 { -603107332 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 3707833603 { -587133693 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 1028 : BV:32
=input.src.llvm-%i.0
1 : 1028 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 3691966076 { -603001220 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 4108 : BV:32
=memlabel-mem-esp_begin
1 : 65536 : BV:32
=input.src.llvm-%arrayidx
1 : 3691966076 { -603001220 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3692089967 { -602877329 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 3707833600 { -587133696 } : BV:32
=stack.size
1 : 3691794432 { -603172864 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3691961968 { -603005328 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 4108 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 1028 : BV:32
=input.src.llvm-%arrayidx1
1 : 4294822076 { -145220 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4294822076 { -145220 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 4108 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294817968 { -149328 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294945967 { -21329 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1325043453
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 91
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 8192 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1088 : BV:32
=symbol.1
1 : 129840 : BV:32
=symbol.2
1 : 129664 : BV:32
=dst_symbol_addr.1
1 : 129840 : BV:32
=dst_symbol_addr.2
1 : 129664 : BV:32
=dst_symbol_addr.3
1 : 1088 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 129667 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 2048 : BV:32
=input.src.llvm-%i.0
1 : 2048 : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 257839 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 129664 : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 129840 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1088 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 129087 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
269881600
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 91 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 8208 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4294967292 { -4 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4294967295 { -1 } : BV:32
=symbol.3
1 : 1088 : BV:32
=symbol.1
1 : 129840 : BV:32
=symbol.2
1 : 129664 : BV:32
=dst_symbol_addr.1
1 : 129840 : BV:32
=dst_symbol_addr.2
1 : 129664 : BV:32
=dst_symbol_addr.3
1 : 1088 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4294967292 { -4 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4294967292 { -4 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 129667 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 2052 : BV:32
=input.src.llvm-%i.0
1 : 2052 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 138044 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 8204 : BV:32
=memlabel-mem-esp_begin
1 : 258048 : BV:32
=input.src.llvm-%arrayidx
1 : 138044 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 257839 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 129664 : BV:32
=stack.size
1 : 4294709248 { -258048 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 129840 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 8204 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 2052 : BV:32
=input.src.llvm-%arrayidx1
1 : 9292 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 9292 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 8204 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1088 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 129087 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
269881600
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 92
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 16384 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4268163068 { -26804228 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 4268163071 { -26804225 } : BV:32
=symbol.3
1 : 1180620240 : BV:32
=symbol.1
1 : 1182464496 : BV:32
=symbol.2
1 : 631523784 : BV:32
=dst_symbol_addr.1
1 : 1182464496 : BV:32
=dst_symbol_addr.2
1 : 631523784 : BV:32
=dst_symbol_addr.3
1 : 1180620240 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4268163068 { -26804228 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4268163068 { -26804228 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 631523787 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4096 : BV:32
=input.src.llvm-%i.0
1 : 4096 : BV:32
=memlabel-mem-esp_begin
1 : 3162169344 { -1132797952 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1182592495 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 631523784 : BV:32
=stack.size
1 : 1105993728 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1182464496 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 1180620240 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1180748239 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1948736763
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 92 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 16400 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 4268163068 { -26804228 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 4268163071 { -26804225 } : BV:32
=symbol.3
1 : 1180620240 : BV:32
=symbol.1
1 : 1182464496 : BV:32
=symbol.2
1 : 631523784 : BV:32
=dst_symbol_addr.1
1 : 1182464496 : BV:32
=dst_symbol_addr.2
1 : 631523784 : BV:32
=dst_symbol_addr.3
1 : 1180620240 : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 4268163068 { -26804228 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 4268163068 { -26804228 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 631523787 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 4100 : BV:32
=input.src.llvm-%i.0
1 : 4100 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 1182480892 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 16396 : BV:32
=memlabel-mem-esp_begin
1 : 3162169344 { -1132797952 } : BV:32
=input.src.llvm-%arrayidx
1 : 1182480892 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 1182592495 : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 631523784 : BV:32
=stack.size
1 : 1105993728 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 1182464496 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 16396 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 4100 : BV:32
=input.src.llvm-%arrayidx1
1 : 1180636636 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 1180636636 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 16396 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 1180620240 : BV:32
=memlabel-mem-symbol.3.0_end
1 : 1180748239 : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
1948736763
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 93
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 32768 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221004284 { -1073963012 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3221004287 { -1073963009 } : BV:32
=symbol.3
1 : 4294815824 { -151472 } : BV:32
=symbol.1
1 : 4026391680 { -268575616 } : BV:32
=symbol.2
1 : 4294946380 { -20916 } : BV:32
=dst_symbol_addr.1
1 : 4026391680 { -268575616 } : BV:32
=dst_symbol_addr.2
1 : 4294946380 { -20916 } : BV:32
=dst_symbol_addr.3
1 : 4294815824 { -151472 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221004284 { -1073963012 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221004284 { -1073963012 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294946383 { -20913 } : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 8192 : BV:32
=input.src.llvm-%i.0
1 : 8192 : BV:32
=memlabel-mem-esp_begin
1 : 84267008 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4026519679 { -268447617 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294946380 { -20916 } : BV:32
=stack.size
1 : 3136737280 { -1158230016 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4026391680 { -268575616 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 4294815824 { -151472 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294943823 { -23473 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
81682196
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 93 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 32784 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3221004284 { -1073963012 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 3221004287 { -1073963009 } : BV:32
=symbol.3
1 : 4294815824 { -151472 } : BV:32
=symbol.1
1 : 4026391680 { -268575616 } : BV:32
=symbol.2
1 : 4294946380 { -20916 } : BV:32
=dst_symbol_addr.1
1 : 4026391680 { -268575616 } : BV:32
=dst_symbol_addr.2
1 : 4294946380 { -20916 } : BV:32
=dst_symbol_addr.3
1 : 4294815824 { -151472 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3221004284 { -1073963012 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3221004284 { -1073963012 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 4294946383 { -20913 } : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 8196 : BV:32
=input.src.llvm-%i.0
1 : 8196 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 4026424460 { -268542836 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 32780 : BV:32
=memlabel-mem-esp_begin
1 : 84267008 : BV:32
=input.src.llvm-%arrayidx
1 : 4026424460 { -268542836 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 4026519679 { -268447617 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 4294946380 { -20916 } : BV:32
=stack.size
1 : 3136737280 { -1158230016 } : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 4026391680 { -268575616 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 32780 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 8196 : BV:32
=input.src.llvm-%arrayidx1
1 : 4294848604 { -118692 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 4294848604 { -118692 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 32780 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 4294815824 { -151472 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 4294943823 { -23473 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
81682196
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 94
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 65536 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3227508732 { -1067458564 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3227508735 { -1067458561 } : BV:32
=symbol.3
1 : 2153614800 { -2141352496 } : BV:32
=symbol.1
1 : 2220723696 { -2074243600 } : BV:32
=symbol.2
1 : 274582992 : BV:32
=dst_symbol_addr.1
1 : 2220723696 { -2074243600 } : BV:32
=dst_symbol_addr.2
1 : 274582992 : BV:32
=dst_symbol_addr.3
1 : 2153614800 { -2141352496 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227508732 { -1067458564 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3227508732 { -1067458564 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 274582995 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 16384 : BV:32
=input.src.llvm-%i.0
1 : 16384 : BV:32
=memlabel-mem-esp_begin
1 : 2690617344 { -1604349952 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2220851695 { -2074115601 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 274582992 : BV:32
=stack.size
1 : 536891392 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2220723696 { -2074243600 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 2153614800 { -2141352496 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2153742799 { -2141224497 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
887386922
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 94 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 65552 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3227508732 { -1067458564 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 3227508735 { -1067458561 } : BV:32
=symbol.3
1 : 2153614800 { -2141352496 } : BV:32
=symbol.1
1 : 2220723696 { -2074243600 } : BV:32
=symbol.2
1 : 274582992 : BV:32
=dst_symbol_addr.1
1 : 2220723696 { -2074243600 } : BV:32
=dst_symbol_addr.2
1 : 274582992 : BV:32
=dst_symbol_addr.3
1 : 2153614800 { -2141352496 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3227508732 { -1067458564 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3227508732 { -1067458564 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 274582995 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 16388 : BV:32
=input.src.llvm-%i.0
1 : 16388 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 2220789244 { -2074178052 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 65548 : BV:32
=memlabel-mem-esp_begin
1 : 2690617344 { -1604349952 } : BV:32
=input.src.llvm-%arrayidx
1 : 2220789244 { -2074178052 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 2220851695 { -2074115601 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 274582992 : BV:32
=stack.size
1 : 536891392 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 2220723696 { -2074243600 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 65548 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 16388 : BV:32
=input.src.llvm-%arrayidx1
1 : 2153680348 { -2141286948 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 2153680348 { -2141286948 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 65548 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 2153614800 { -2141352496 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 2153742799 { -2141224497 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
887386922
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 95
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_graphce
=graphce counterexample at pc Lfor.body%1%1_L3%1%0
=counter_example_begin
=input.dst.exreg.0.0
1 : 127968 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3992924156 { -302043140 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 0 : BV:32
=memlabel-mem-esp_end
1 : 3992924159 { -302043137 } : BV:32
=symbol.3
1 : 3512124880 { -782842416 } : BV:32
=symbol.1
1 : 3556755952 { -738211344 } : BV:32
=symbol.2
1 : 585714120 : BV:32
=dst_symbol_addr.1
1 : 3556755952 { -738211344 } : BV:32
=dst_symbol_addr.2
1 : 585714120 : BV:32
=dst_symbol_addr.3
1 : 3512124880 { -782842416 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3992924156 { -302043140 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3992924156 { -302043140 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 585714123 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31992 : BV:32
=input.src.llvm-%i.0
1 : 31992 : BV:32
=memlabel-mem-esp_begin
1 : 3905003520 { -389963776 } : BV:32
=input.src.llvm-callee-save.2
1 : 0 : BV:32
=input.src.llvm-callee-save.3
1 : 0 : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3556883951 { -738083345 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 585714120 : BV:32
=stack.size
1 : 87920640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3556755952 { -738211344 } : BV:32
=input.src.llvm-%hidden-reg
1 : 0 : BV:32
=input.src.llvm-callee-save.0
1 : 0 : BV:32
=input.src.llvm-callee-save.1
1 : 0 : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.3.0_begin
1 : 3512124880 { -782842416 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3512252879 { -782714417 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
778479138
=counter_example_end
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.graph_edge_composition
(Lfor.body%1%1_L3%1%0=>Lfor.body%1%1_L3%1%0)
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge: Lfor.body%1%1_L3%1%0 => Lfor.body%1%1_L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.ec from Lfor.body%1%1 to Lfor.body%1%1 at unroll 4 delta 4
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition
((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*((Lfor.cond%2%1=>Lfor.body%1%1)*((Lfor.body%1%1=>Lfor.cond%1%0)*((Lfor.cond%1%0=>Lfor.cond%2%1)*(Lfor.cond%2%1=>Lfor.body%1%1))))))))))))
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.body%1%1 => Lfor.cond%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.3 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : mlvar.llvm.vpvts.2 : MEMLABEL
14 : 4 : INT
15 : 0 : BOOL
16 : select(1, 13, 12, 14, 15) : BV:32
17 : mlvar.llvm.vpvts.0 : MEMLABEL
18 : symbol.1 : BV:32
19 : bvadd(18, 11) : BV:32
20 : select(1, 17, 19, 14, 15) : BV:32
21 : mlvar.llvm.vpvts.1 : MEMLABEL
22 : symbol.2 : BV:32
23 : select(1, 21, 22, 14, 15) : BV:32
24 : bvmul(20, 23) : BV:32
25 : bvadd(16, 24) : BV:32
26 : store(1, 2, 12, 25, 14, 15) : ARRAY[BV:32 -> BV:8]
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%arrayidx
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%i.0
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%i.0.phi.tmpvar
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.1 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=src.llvm-%0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : symbol.1 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%mul
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.1 : MEMLABEL
17 : symbol.2 : BV:32
18 : select(1, 16, 17, 13, 14) : BV:32
19 : bvmul(15, 18) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%add
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
16 : mlvar.llvm.vpvts.0 : MEMLABEL
17 : symbol.1 : BV:32
18 : bvadd(17, 11) : BV:32
19 : select(1, 16, 18, 13, 14) : BV:32
20 : mlvar.llvm.vpvts.1 : MEMLABEL
21 : symbol.2 : BV:32
22 : select(1, 20, 21, 13, 14) : BV:32
23 : bvmul(19, 22) : BV:32
24 : bvadd(15, 23) : BV:32
=src.llvm-%arrayidx1
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=src.llvm-%2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.vpvts.2 : MEMLABEL
3 : symbol.3 : BV:32
4 : 0 : BV:32
5 : 128000 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(4, 6) : BV:32
8 : input.src.llvm-%i.0 : BV:32
9 : 4 : BV:32
10 : bvmul(8, 9) : BV:32
11 : bvadd(7, 10) : BV:32
12 : bvadd(3, 11) : BV:32
13 : 4 : INT
14 : 0 : BOOL
15 : select(1, 2, 12, 13, 14) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 0 : BV:32
2 : 128000 : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : 4 : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(4, 7) : BV:32
=src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : symbol.3 : BV:32
2 : 0 : BV:32
3 : 128000 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-%i.0 : BV:32
7 : 4 : BV:32
8 : bvmul(6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : bvadd(1, 9) : BV:32
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.0
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.1
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.2
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.3
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.4
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : isgepoffset(11, 9) : BOOL
13 : implies(1, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.5
1 : 1 : BOOL
2 : input.src.llvm-%i.0 : BV:32
3 : 32 : INT
4 : bvsign_ext(2, 3) : BV:64
5 : 4 : BV:32
6 : bvzero_ext(5, 3) : BV:64
7 : bvmul(4, 6) : BV:64
8 : 63 : INT
9 : bvextract(7, 8, 3) : BV:32
10 : 0 : BV:32
11 : eq(9, 10) : BOOL
12 : 4 : INT
13 : isindexforsize(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.6
1 : 1 : BOOL
2 : symbol.2 : BV:32
3 : 4 : INT
4 : islangaligned(2, 3) : BOOL
5 : implies(1, 4) : BOOL
6 : implies(1, 5) : BOOL
7 : implies(1, 6) : BOOL
8 : implies(1, 7) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.7
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.8
1 : 1 : BOOL
2 : symbol.1 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : input.src.llvm-%i.0 : BV:32
8 : 4 : BV:32
9 : bvmul(7, 8) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvadd(2, 10) : BV:32
12 : 4 : INT
13 : islangaligned(11, 12) : BOOL
14 : implies(1, 13) : BOOL
15 : implies(1, 14) : BOOL
16 : implies(1, 15) : BOOL
17 : implies(1, 16) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.9
1 : 1 : BOOL
2 : 0 : BV:32
3 : bvslt(2, 2) : BOOL
4 : 32 : INT
5 : bvsign_ext(2, 4) : BV:64
6 : 128000 : BV:32
7 : bvzero_ext(6, 4) : BV:64
8 : bvmul(5, 7) : BV:64
9 : 63 : INT
10 : bvextract(8, 9, 4) : BV:32
11 : 4294967295 { -1 } : BV:32
12 : eq(10, 11) : BOOL
13 : eq(10, 2) : BOOL
14 : ite(3, 12, 13) : BOOL
15 : 128000 : INT
16 : isindexforsize(14, 15) : BOOL
17 : implies(1, 16) : BOOL
18 : implies(1, 17) : BOOL
19 : implies(1, 18) : BOOL
20 : implies(1, 19) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.EdgeAssume.10
1 : 1 : BOOL
2 : symbol.3 : BV:32
3 : 0 : BV:32
4 : 128000 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(3, 5) : BV:32
7 : bvadd(2, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
9 : implies(1, 8) : BOOL
10 : implies(1, 9) : BOOL
11 : implies(1, 10) : BOOL
12 : implies(1, 11) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:1:((((  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*(  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20*  %arrayidx = getelementptr inbounds [32000 x i32], [32000 x i32]* @b, i32 0, i32 %i.0, !dbg !20)))*(  %0 = load i32, i32* %arrayidx, align 4, !dbg !20*  %0 = load i32, i32* %arrayidx, align 4, !dbg !20))*((((  %1 = load i32, i32* @s, align 4, !dbg !22*  %1 = load i32, i32* @s, align 4, !dbg !22)*  %mul = mul nsw i32 %0, %1, !dbg !23)*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24)*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*(  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24*  %arrayidx1 = getelementptr inbounds [32000 x i32], [32000 x i32]* @a, i32 0, i32 %i.0, !dbg !24))))*(((  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25*  %2 = load i32, i32* %arrayidx1, align 4, !dbg !25)*  %add = add nsw i32 %2, %mul, !dbg !25)*((((  store i32 %add, i32* %arrayidx1, align 4, !dbg !25*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*  br label %for.inc, !dbg !26)*(((  %inc = add nsw i32 %i.0, 1, !dbg !27*  br label %for.cond, !dbg !28, !llvm.loop !29)*(  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !15*  br label %for.cond, !dbg !28, !llvm.loop !29))*(  br label %for.cond, !dbg !28, !llvm.loop !29*  br label %for.cond, !dbg !28, !llvm.loop !29)))))
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%1%0 => Lfor.cond%2%1
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=src.llvm-%cmp
1 : input.src.llvm-%i.0 : BV:32
2 : 32000 : BV:32
3 : bvslt(1, 2) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:-1:(bb_entry*  %cmp = icmp slt i32 %i.0, 32000, !dbg !17)
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.graph_edge_composition.Edge2
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge: Lfor.cond%2%1 => Lfor.body%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.EdgeCond: 
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.StateTo: 
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset.Edge.te_comment
0:2:((  br i1 %cmp, label %for.body, label %for.end, !dbg !19*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)*  br i1 %cmp, label %for.body, label %for.end, !dbg !19)
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.src_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.ec from L3%1%0 to L3%1%0 at unroll 1 delta 1
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition
((L3%1%0=>L9%1%1)*(L9%1%1=>L3%1%0))
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge0
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge: L3%1%0 => L9%1%1
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.3 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : 1 : INT
5 : bvzero_ext(3, 4) : BV:33
6 : 16 : BV:32
7 : bvzero_ext(6, 4) : BV:33
8 : bvadd(5, 7) : BV:33
9 : 31 : INT
10 : 0 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : dst_symbol_addr.3 : BV:32
13 : 1 : BV:64
14 : bvextract(13, 9, 10) : BV:32
15 : bvmul(12, 14) : BV:32
16 : 18446744073709551600 { -16 } : BV:64
17 : bvextract(16, 9, 10) : BV:32
18 : bvadd(15, 17) : BV:32
19 : bvadd(11, 18) : BV:32
20 : mlvar.dst.1 : MEMLABEL
21 : dst_symbol_addr.1 : BV:32
22 : bvadd(3, 21) : BV:32
23 : 16 : INT
24 : 0 : BOOL
25 : select(1, 20, 22, 23, 24) : BV:128
26 : 127 : INT
27 : 96 : INT
28 : bvextract(25, 26, 27) : BV:32
29 : input.dst.exreg.2.1 : BV:128
30 : bvextract(29, 26, 27) : BV:32
31 : bvmul(28, 30) : BV:32
32 : 95 : INT
33 : 64 : INT
34 : bvextract(25, 32, 33) : BV:32
35 : bvextract(29, 32, 33) : BV:32
36 : bvmul(34, 35) : BV:32
37 : bvconcat(31, 36) : BV:64
38 : 63 : INT
39 : 32 : INT
40 : bvextract(25, 38, 39) : BV:32
41 : bvextract(29, 38, 39) : BV:32
42 : bvmul(40, 41) : BV:32
43 : bvextract(25, 9, 10) : BV:32
44 : bvextract(29, 9, 10) : BV:32
45 : bvmul(43, 44) : BV:32
46 : bvconcat(42, 45) : BV:64
47 : bvconcat(37, 46) : BV:128
48 : bvextract(47, 26, 27) : BV:32
49 : mlvar.dst.2 : MEMLABEL
50 : select(1, 49, 19, 23, 24) : BV:128
51 : bvextract(50, 26, 27) : BV:32
52 : bvadd(48, 51) : BV:32
53 : bvextract(47, 32, 33) : BV:32
54 : bvextract(50, 32, 33) : BV:32
55 : bvadd(53, 54) : BV:32
56 : bvconcat(52, 55) : BV:64
57 : bvextract(47, 38, 39) : BV:32
58 : bvextract(50, 38, 39) : BV:32
59 : bvadd(57, 58) : BV:32
60 : bvextract(47, 9, 10) : BV:32
61 : bvextract(50, 9, 10) : BV:32
62 : bvadd(60, 61) : BV:32
63 : bvconcat(59, 62) : BV:64
64 : bvconcat(56, 63) : BV:128
65 : store(1, 2, 19, 64, 23, 24) : ARRAY[BV:32 -> BV:8]
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.0 : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 : BV:1
13 : eq(11, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
79 : bvextract(78, 2, 3) : BV:31
80 : 128000 : BV:32
81 : bvuge(20, 80) : BOOL
82 : not(81) : BOOL
83 : ite(82, 12, 14) : BV:1
84 : bvconcat(79, 83) : BV:32
85 : bvextract(84, 2, 17) : BV:27
86 : bvzero_ext(20, 3) : BV:33
87 : bvnot(80) : BV:32
88 : bvzero_ext(87, 3) : BV:33
89 : bvadd(86, 88) : BV:33
90 : bvconcat(60, 12) : BV:33
91 : bvadd(89, 90) : BV:33
92 : bvextract(91, 2, 19) : BV:32
93 : bvextract(92, 21, 21) : BV:1
94 : eq(93, 12) : BOOL
95 : bvextract(86, 21, 21) : BV:1
96 : eq(95, 12) : BOOL
97 : xor(94, 96) : BOOL
98 : ite(97, 12, 14) : BV:1
99 : bvextract(84, 28, 19) : BV:4
100 : bvconcat(98, 99) : BV:5
101 : bvconcat(85, 100) : BV:32
102 : bvextract(101, 2, 32) : BV:20
103 : bvextract(86, 2, 2) : BV:1
104 : eq(103, 12) : BOOL
105 : bvextract(88, 2, 2) : BV:1
106 : eq(105, 12) : BOOL
107 : iff(104, 106) : BOOL
108 : bvextract(86, 2, 19) : BV:32
109 : bvextract(88, 2, 19) : BV:32
110 : bvadd(108, 109) : BV:32
111 : 0 : BV:31
112 : bvconcat(111, 12) : BV:32
113 : bvadd(110, 112) : BV:32
114 : bvextract(113, 2, 2) : BV:1
115 : eq(114, 12) : BOOL
116 : xor(104, 115) : BOOL
117 : and(107, 116) : BOOL
118 : donotsimplify_using_solver_suboverflow(117, 20, 80) : BOOL
119 : ite(118, 12, 14) : BV:1
120 : bvextract(101, 47, 19) : BV:11
121 : bvconcat(119, 120) : BV:12
122 : bvconcat(102, 121) : BV:32
123 : bvextract(122, 2, 51) : BV:24
124 : donotsimplify_using_solver_subsign(115, 20, 80) : BOOL
125 : ite(124, 12, 14) : BV:1
126 : bvextract(122, 54, 19) : BV:7
127 : bvconcat(125, 126) : BV:8
128 : bvconcat(123, 127) : BV:32
129 : bvextract(128, 2, 58) : BV:25
130 : eq(92, 60) : BOOL
131 : donotsimplify_using_solver_subzero(130, 20, 80) : BOOL
132 : ite(131, 12, 14) : BV:1
133 : bvextract(128, 17, 19) : BV:6
134 : bvconcat(132, 133) : BV:7
135 : bvconcat(129, 134) : BV:32
136 : bvextract(135, 2, 28) : BV:29
137 : bvextract(135, 3, 19) : BV:2
138 : bvconcat(14, 137) : BV:3
139 : bvconcat(136, 138) : BV:32
140 : bvextract(139, 2, 70) : BV:21
141 : bvextract(78, 47, 47) : BV:1
142 : eq(141, 12) : BOOL
143 : ite(142, 12, 14) : BV:1
144 : bvextract(139, 75, 19) : BV:10
145 : bvconcat(143, 144) : BV:11
146 : bvconcat(140, 145) : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : 0 : BV:1
23 : ite(21, 16, 22) : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : 0 : BV:1
24 : ite(22, 16, 23) : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : not(32) : BOOL
34 : 0 : BV:1
35 : ite(33, 18, 34) : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvuge(9, 11) : BOOL
24 : and(22, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : not(21) : BOOL
23 : bvextract(10, 7, 8) : BV:32
24 : bvextract(13, 7, 8) : BV:32
25 : bvadd(23, 24) : BV:32
26 : 0 : BV:31
27 : bvconcat(26, 16) : BV:32
28 : bvadd(25, 27) : BV:32
29 : bvextract(28, 7, 7) : BV:1
30 : eq(29, 16) : BOOL
31 : donotsimplify_using_solver_subsign(30, 9, 11) : BOOL
32 : bvextract(10, 7, 7) : BV:1
33 : eq(32, 16) : BOOL
34 : bvextract(13, 7, 7) : BV:1
35 : eq(34, 16) : BOOL
36 : iff(33, 35) : BOOL
37 : xor(33, 30) : BOOL
38 : and(36, 37) : BOOL
39 : donotsimplify_using_solver_suboverflow(38, 9, 11) : BOOL
40 : iff(31, 39) : BOOL
41 : and(22, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvuge(9, 11) : BOOL
23 : not(22) : BOOL
24 : or(21, 23) : BOOL
25 : 0 : BV:1
26 : ite(24, 16, 25) : BV:1
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.2.0
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.dst.1 : MEMLABEL
3 : input.dst.exreg.0.0 : BV:32
4 : dst_symbol_addr.1 : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 : INT
7 : 0 : BOOL
8 : select(1, 2, 5, 6, 7) : BV:128
9 : 127 : INT
10 : 96 : INT
11 : bvextract(8, 9, 10) : BV:32
12 : input.dst.exreg.2.1 : BV:128
13 : bvextract(12, 9, 10) : BV:32
14 : bvmul(11, 13) : BV:32
15 : 95 : INT
16 : 64 : INT
17 : bvextract(8, 15, 16) : BV:32
18 : bvextract(12, 15, 16) : BV:32
19 : bvmul(17, 18) : BV:32
20 : bvconcat(14, 19) : BV:64
21 : 63 : INT
22 : 32 : INT
23 : bvextract(8, 21, 22) : BV:32
24 : bvextract(12, 21, 22) : BV:32
25 : bvmul(23, 24) : BV:32
26 : 31 : INT
27 : 0 : INT
28 : bvextract(8, 26, 27) : BV:32
29 : bvextract(12, 26, 27) : BV:32
30 : bvmul(28, 29) : BV:32
31 : bvconcat(25, 30) : BV:64
32 : bvconcat(20, 31) : BV:128
33 : bvextract(32, 9, 10) : BV:32
34 : mlvar.dst.2 : MEMLABEL
35 : 1 : INT
36 : bvzero_ext(3, 35) : BV:33
37 : 16 : BV:32
38 : bvzero_ext(37, 35) : BV:33
39 : bvadd(36, 38) : BV:33
40 : bvextract(39, 26, 27) : BV:32
41 : dst_symbol_addr.3 : BV:32
42 : 1 : BV:64
43 : bvextract(42, 26, 27) : BV:32
44 : bvmul(41, 43) : BV:32
45 : 18446744073709551600 { -16 } : BV:64
46 : bvextract(45, 26, 27) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvadd(40, 47) : BV:32
49 : select(1, 34, 48, 6, 7) : BV:128
50 : bvextract(49, 9, 10) : BV:32
51 : bvadd(33, 50) : BV:32
52 : bvextract(32, 15, 16) : BV:32
53 : bvextract(49, 15, 16) : BV:32
54 : bvadd(52, 53) : BV:32
55 : bvconcat(51, 54) : BV:64
56 : bvextract(32, 21, 22) : BV:32
57 : bvextract(49, 21, 22) : BV:32
58 : bvadd(56, 57) : BV:32
59 : bvextract(32, 26, 27) : BV:32
60 : bvextract(49, 26, 27) : BV:32
61 : bvadd(59, 60) : BV:32
62 : bvconcat(58, 61) : BV:64
63 : bvconcat(55, 62) : BV:128
=dst.exreg.15.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 128000 : BV:32
11 : bvuge(9, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : bvextract(10, 7, 8) : BV:32
12 : 128000 : BV:32
13 : bvnot(12) : BV:32
14 : bvzero_ext(13, 2) : BV:33
15 : bvextract(14, 7, 8) : BV:32
16 : bvadd(11, 15) : BV:32
17 : 0 : BV:31
18 : 1 : BV:1
19 : bvconcat(17, 18) : BV:32
20 : bvadd(16, 19) : BV:32
21 : bvextract(20, 7, 7) : BV:1
22 : eq(21, 18) : BOOL
23 : donotsimplify_using_solver_subsign(22, 9, 12) : BOOL
24 : bvextract(10, 7, 7) : BV:1
25 : eq(24, 18) : BOOL
26 : bvextract(14, 7, 7) : BV:1
27 : eq(26, 18) : BOOL
28 : iff(25, 27) : BOOL
29 : xor(25, 22) : BOOL
30 : and(28, 29) : BOOL
31 : donotsimplify_using_solver_suboverflow(30, 9, 12) : BOOL
32 : iff(23, 31) : BOOL
33 : 0 : BV:1
34 : ite(32, 18, 33) : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.0.0 : BV:32
2 : 1 : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 : INT
8 : 0 : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvzero_ext(9, 2) : BV:33
11 : 128000 : BV:32
12 : bvnot(11) : BV:32
13 : bvzero_ext(12, 2) : BV:33
14 : bvadd(10, 13) : BV:33
15 : 0 : BV:32
16 : 1 : BV:1
17 : bvconcat(15, 16) : BV:33
18 : bvadd(14, 17) : BV:33
19 : bvextract(18, 7, 8) : BV:32
20 : eq(19, 15) : BOOL
21 : donotsimplify_using_solver_subzero(20, 9, 11) : BOOL
22 : bvextract(10, 7, 8) : BV:32
23 : bvextract(13, 7, 8) : BV:32
24 : bvadd(22, 23) : BV:32
25 : 0 : BV:31
26 : bvconcat(25, 16) : BV:32
27 : bvadd(24, 26) : BV:32
28 : bvextract(27, 7, 7) : BV:1
29 : eq(28, 16) : BOOL
30 : donotsimplify_using_solver_subsign(29, 9, 11) : BOOL
31 : bvextract(10, 7, 7) : BV:1
32 : eq(31, 16) : BOOL
33 : bvextract(13, 7, 7) : BV:1
34 : eq(33, 16) : BOOL
35 : iff(32, 34) : BOOL
36 : xor(32, 29) : BOOL
37 : and(35, 36) : BOOL
38 : donotsimplify_using_solver_suboverflow(37, 9, 11) : BOOL
39 : iff(30, 38) : BOOL
40 : not(39) : BOOL
41 : or(21, 40) : BOOL
42 : 0 : BV:1
43 : ite(41, 16, 42) : BV:1
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:(((((bb_entry*te_comment_not_implemented)*te_comment_not_implemented)*te_comment_not_implemented)*(te_comment_not_implemented*te_comment_not_implemented))*te_comment_not_implemented)
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.graph_edge_composition.Edge1
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge: L9%1%1 => L3%1%0
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.EdgeCond: 
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.StateTo: 
=dst.hidden_reg.8
1 : input.dst.exreg.14.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.2
1 : input.dst.exreg.8.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.6
1 : input.dst.exreg.12.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.1
1 : input.dst.exreg.7.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.7
1 : input.dst.exreg.13.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.9
1 : input.dst.exreg.15.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.3
1 : input.dst.exreg.9.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.0
1 : input.dst.exreg.6.0 : BV:32
=dst.hidden_reg.10
1 : input.dst.exreg.16.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.4
1 : input.dst.exreg.10.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=dst.hidden_reg.5
1 : input.dst.exreg.11.0 : BV:1
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=state_end
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.begin:
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.Assumes.end
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset.Edge.te_comment
0:-1:te_comment_not_implemented
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_path.Edge.dst_tfg_full_pathset done
=pc Lfor.body%1%1_L3%1%0 nodece 95 nodece_cached_counterexample
=counter_example_begin
=input.dst.exreg.0.0
1 : 127984 : BV:32
=input.dst.exreg.0.3
1 : 0 : BV:32
=input.dst.exreg.0.4
1 : 3992924156 { -302043140 } : BV:32
=input.dst.exreg.0.5
1 : 0 : BV:32
=input.dst.exreg.0.6
1 : 0 : BV:32
=input.dst.exreg.0.7
1 : 0 : BV:32
=input.dst.exreg.2.0
1 : 0 : BV:128
=input.dst.exreg.2.1
1 : 0 : BV:128
=input.dst.exreg.6.0
1 : 129 : BV:32
=input.dst.exreg.7.0
1 : 0 : BV:1
=input.dst.exreg.8.0
1 : 1 : BV:1
=input.dst.exreg.9.0
1 : 1 : BV:1
=input.dst.exreg.10.0
1 : 1 : BV:1
=input.dst.exreg.11.0
1 : 0 : BV:1
=input.dst.exreg.12.0
1 : 0 : BV:1
=input.dst.exreg.13.0
1 : 1 : BV:1
=input.dst.exreg.14.0
1 : 1 : BV:1
=input.dst.exreg.15.0
1 : 0 : BV:1
=input.dst.exreg.16.0
1 : 0 : BV:1
=memlabel-mem-esp_end
1 : 3992924159 { -302043137 } : BV:32
=symbol.3
1 : 3512124880 { -782842416 } : BV:32
=symbol.1
1 : 3556755952 { -738211344 } : BV:32
=symbol.2
1 : 585714120 : BV:32
=dst_symbol_addr.1
1 : 3556755952 { -738211344 } : BV:32
=dst_symbol_addr.2
1 : 585714120 : BV:32
=dst_symbol_addr.3
1 : 3512124880 { -782842416 } : BV:32
=callee_save_const.0
1 : 0 : BV:32
=callee_save_const.1
1 : 0 : BV:32
=callee_save_const.2
1 : 0 : BV:32
=callee_save_const.3
1 : 0 : BV:32
=retaddr_const
1 : 0 : BV:32
=input_stack_pointer_const
1 : 3992924156 { -302043140 } : BV:32
=input.src.llvm-mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.esp.L0%1%1
1 : 3992924156 { -302043140 } : BV:32
=commonMEM.nonstack.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=memlabel-mem-symbol.2.0_end
1 : 585714123 : BV:32
=input.src.llvm-%1
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%cmp
1 : 1 : BOOL
=input.src.llvm-%i.0.phi.tmpvar
1 : 31996 : BV:32
=input.src.llvm-%i.0
1 : 31996 : BV:32
=input.src.llvm-%0
1 : 0 : BV:32
=input.src.llvm-%2
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.3.total_offset
1 : 3556883932 { -738083364 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-esp_begin
1 : 3905003520 { -389963776 } : BV:32
=input.src.llvm-%arrayidx
1 : 3556883932 { -738083364 } : BV:32
=memlabel-mem-symbol.1.0_end
1 : 3556883951 { -738083345 } : BV:32
=memlabel-mem-symbol.2.0_begin
1 : 585714120 : BV:32
=stack.size
1 : 87920640 : BV:32
=memlabel-mem-symbol.1.0_begin
1 : 3556755952 { -738211344 } : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%2620b4e7d7cdaa4b96d581e5afba97b8.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.1.offset
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.intermediate.gepoffset.2.offset
1 : 127980 : BV:32
=input.src.llvm-%add
1 : 0 : BV:32
=input.src.llvm-%inc
1 : 31996 : BV:32
=input.src.llvm-%arrayidx1
1 : 3512252860 { -782714436 } : BV:32
=input.dst.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.1.total_offset
1 : 0 : BV:32
=input.src.llvm-%mul
1 : 0 : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.3.total_offset
1 : 3512252860 { -782714436 } : BV:32
=input.src.llvm-%ad82e43bda9bf8dd56bd3f615dfab.gepoffset.2.total_offset
1 : 127980 : BV:32
=memlabel-mem-symbol.3.0_begin
1 : 3512124880 { -782842416 } : BV:32
=memlabel-mem-symbol.3.0_end
1 : 3512252879 { -782714417 } : BV:32
=unaliased_memslot.0
1 : 0 : BV:32
=input.dst.exreg.2.1_31_0
1 : 0 : BV:32
=commonMEM.stack9000.mem
1 : (() -> 0) : ARRAY[BV:32 -> BV:8]
=input.dst.exreg.2.1_95_64
1 : 0 : BV:32
=input.dst.exreg.2.1_127_96
1 : 0 : BV:32
=input.dst.exreg.2.1_63_32
1 : 0 : BV:32
=rodata_submap
=local_sprel_expr_assumes
=counter_example.random_seed
778479138
=counter_example_end
=graph_with_ce done
=graph_with_guessing begin
=Invariant states
=Invariant state at node L0%0%1_L0%0%1:
=pc L0%0%1_L0%0%1 invariant_state
is_top 0
is_stable 1
=pc L0%0%1_L0%0%1 invariant_state done
=Invariant state at node Lfor.body%1%1_L3%1%0:
=pc Lfor.body%1%1_L3%1%0 invariant_state
is_top 0
is_stable 1
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr expr_group_type ARR_EQ
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr expr 1
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr pred 0
=Comment
precond-memmask-memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem : ARRAY[BV:32 -> BV:8]
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : memmasks_are_equal(1, 2, 3) : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 0 type arr predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr_group_type BV_EQ
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 0
1 : symbol.1 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 1
1 : symbol.3 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 2
1 : retaddr_const : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 3
1 : input.src.llvm-%cmp : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 4
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 5
1 : input.src.llvm-%i.0.phi.tmpvar : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 8
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 9
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : symbol.1 : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : bvadd(8, 11) : BV:32
13 : select(1, 7, 12, 4, 5) : BV:32
14 : bvmul(6, 13) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 10
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 11
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 12
1 : input.src.llvm-%i.0 : BV:32
2 : 2 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 13
1 : input.src.llvm-%i.0 : BV:32
2 : 3 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 14
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : 4 : BV:32
5 : input.src.llvm-%i.0 : BV:32
6 : bvmul(5, 4) : BV:32
7 : bvadd(3, 4, 6) : BV:32
8 : 4 : INT
9 : 0 : BOOL
10 : select(1, 2, 7, 8, 9) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 15
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : symbol.1 : BV:32
9 : 4 : BV:32
10 : input.src.llvm-%i.0 : BV:32
11 : bvmul(10, 9) : BV:32
12 : bvadd(8, 9, 11) : BV:32
13 : select(1, 7, 12, 4, 5) : BV:32
14 : bvmul(6, 13) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 16
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 17
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 8 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 18
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : symbol.1 : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : 8 : BV:32
13 : bvadd(8, 11, 12) : BV:32
14 : select(1, 7, 13, 4, 5) : BV:32
15 : bvmul(6, 14) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 19
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0 : MEMLABEL
3 : symbol.1 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 20
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.3.0 : MEMLABEL
3 : symbol.3 : BV:32
4 : input.src.llvm-%i.0 : BV:32
5 : 4 : BV:32
6 : bvmul(4, 5) : BV:32
7 : 12 : BV:32
8 : bvadd(3, 6, 7) : BV:32
9 : 4 : INT
10 : 0 : BOOL
11 : select(1, 2, 8, 9, 10) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 21
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : symbol.1 : BV:32
9 : input.src.llvm-%i.0 : BV:32
10 : 4 : BV:32
11 : bvmul(9, 10) : BV:32
12 : 12 : BV:32
13 : bvadd(8, 11, 12) : BV:32
14 : select(1, 7, 13, 4, 5) : BV:32
15 : bvmul(6, 14) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 22
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvadd(1, 2) : BV:32
4 : 32000 : BV:32
5 : bvslt(3, 4) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 23
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 24
1 : input.dst.exreg.0.6 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 25
1 : input.dst.exreg.0.7 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 26
1 : input.dst.exreg.0.3 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 27
1 : input.dst.exreg.0.5 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 28
1 : input.dst.exreg.0.4 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 29
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 30
1 : input.dst.exreg.2.1 : BV:128
2 : 95 : INT
3 : 64 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 31
1 : input.dst.exreg.2.1 : BV:128
2 : 63 : INT
3 : 32 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 32
1 : input.dst.exreg.2.1 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 33
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 34
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv expr 35
1 : input.dst.esp.L0%1%1 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 0
=Comment
linear2-32-free_var_idx.34
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-esp : MEMLABEL
3 : input_stack_pointer_const : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 1
=Comment
linear2-32-free_var_idx.32
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 31 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 2
=Comment
linear3-12-free_var_idx.28
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 4092 { -4 } : BV:12
2 : symbol.1 : BV:32
3 : 11 : INT
4 : 0 : INT
5 : bvextract(2, 3, 4) : BV:12
6 : 1024 : BV:12
7 : bvmul(5, 6) : BV:12
8 : symbol.3 : BV:32
9 : bvextract(8, 3, 4) : BV:12
10 : 1536 : BV:12
11 : bvmul(9, 10) : BV:12
12 : bvadd(1, 7, 11) : BV:12
=RhsExpr
1 : input.dst.exreg.0.4 : BV:32
2 : 11 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:12
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 3
=Comment
linear1-4-free_var_idx.1
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 4
=Comment
linear2-32-free_var_idx.35
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
=RhsExpr
1 : input.dst.esp.L0%1%1 : BV:32
2 : 4294967295 { -1 } : BV:32
3 : input.dst.exreg.0.4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 5
=Comment
linear2-32-free_var_idx.33
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
3 : dst_symbol_addr.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 6
=Comment
linear2-32-free_var_idx.31
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 63 : INT
3 : 32 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 7
=Comment
linear1-32-free_var_idx.3
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BV:32
2 : 0 : BV:31
3 : input.src.llvm-%cmp : BOOL
4 : bool_to_bv(3) : BV:1
5 : bvconcat(2, 4) : BV:32
6 : bvneg(5) : BV:32
7 : bvadd(1, 6) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 8
=Comment
linear2-32-free_var_idx.5
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : input.src.llvm-%i.0.phi.tmpvar : BV:32
3 : bvneg(2) : BV:32
4 : bvadd(1, 3) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 9
=Comment
linear2-32-free_var_idx.10
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 1 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 10
=Comment
linear2-4-free_var_idx.0
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 3 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:4
5 : bvneg(4) : BV:4
6 : 4 : BV:4
7 : input.src.llvm-%i.0 : BV:32
8 : bvextract(7, 2, 3) : BV:4
9 : bvmul(6, 8) : BV:4
10 : bvadd(5, 9) : BV:4
=RhsExpr
1 : 0 : BV:4
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 11
=Comment
linear2-32-free_var_idx.29
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 127 : INT
3 : 96 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 12
=Comment
linear2-32-free_var_idx.12
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 2 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 13
=Comment
linear2-32-free_var_idx.13
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:31
2 : input.src.llvm-%i.0 : BV:32
3 : 3 : BV:32
4 : bvadd(2, 3) : BV:32
5 : 32000 : BV:32
6 : bvslt(4, 5) : BOOL
7 : bool_to_bv(6) : BV:1
8 : bvconcat(1, 7) : BV:32
9 : bvneg(8) : BV:32
10 : input.src.llvm-%cmp : BOOL
11 : bool_to_bv(10) : BV:1
12 : bvconcat(1, 11) : BV:32
13 : bvadd(9, 12) : BV:32
=RhsExpr
1 : 0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 14
=Comment
linear2-32-free_var_idx.30
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.2.0 : MEMLABEL
3 : symbol.2 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=RhsExpr
1 : input.dst.exreg.2.1 : BV:128
2 : 95 : INT
3 : 64 : INT
4 : bvextract(1, 2, 3) : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 15
=Comment
linear1-2-free_var_idx.4
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 1 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:2
5 : bvneg(4) : BV:2
=RhsExpr
1 : 0 : BV:2
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv pred 16
=Comment
linear2-32-free_var_idx.23
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 4 : BV:32
3 : bvmul(1, 2) : BV:32
=RhsExpr
1 : input.dst.exreg.0.0 : BV:32
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 1 type bv predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose expr 0
1 : input.src.llvm-%i.0 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose pred 1
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 32768 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose pred 2
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%i.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 2 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose expr_group_type BV_INEQ
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose expr 0
1 : input.dst.exreg.0.0 : BV:32
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose pred 0
=Comment
ub-unsigned
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose pred 1
=Comment
ub-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 131072 : BV:32
3 : bvsle(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose pred 2
=Comment
lb-signed
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.dst.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : bvsge(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 3 type ineq_loose predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr_group_type HOUDINI
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 0
1 : 1 : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 1
1 : dst_symbol_addr.2 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 2
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 3
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 4
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 5
1 : symbol.3 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 6
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 7
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.3.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 8
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini expr 9
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.3.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 0
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.3.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 1
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 12 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 2
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.3.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 3
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : 8 : BV:32
6 : bvadd(1, 4, 5) : BV:32
7 : 4 : INT
8 : memlabel-mem-symbol.1.0 : MEMLABEL
9 : ismemlabel(6, 7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 4
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 5
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 6
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.1 : BV:32
2 : 4 : BV:32
3 : input.src.llvm-%i.0 : BV:32
4 : bvmul(3, 2) : BV:32
5 : bvadd(1, 2, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.1.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 7
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : symbol.3 : BV:32
2 : input.src.llvm-%i.0 : BV:32
3 : 4 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 4 : INT
7 : memlabel-mem-symbol.3.0 : MEMLABEL
8 : ismemlabel(5, 6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 8
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : dst_symbol_addr.2 : BV:32
2 : 4 : INT
3 : memlabel-mem-symbol.1.0-symbol.2.0-symbol.3.0-heap : MEMLABEL
4 : ismemlabel(1, 2, 3) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini pred 9
=Comment
houdini-guess
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1 : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pc Lfor.body%1%1_L3%1%0 invariant_state_eqclass 4 type houdini predicate_set done
=pc Lfor.body%1%1_L3%1%0 invariant_state done
=Invariant state at node E0%0%1_E0%0%1:
=pc E0%0%1_E0%0%1 invariant_state
is_top 0
is_stable 1
=pc E0%0%1_E0%0%1 invariant_state done
=graph_with_guessing done
=corr_graph_done
