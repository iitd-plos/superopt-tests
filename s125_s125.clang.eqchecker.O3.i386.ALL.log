<MSG>Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function s125</MSG>
<MSG>Converting C source code to LLVM IR bitcode...</MSG>
<MSG>Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>Converting assembly code to object file...</MSG>
<MSG>Harvesting object code to obtain harvested assembly...</MSG>
<MSG>Converting harvested assembly to Transfer Function Graph (TFG)...</MSG>
<MSG>Searching for equivalence at unroll factor 8</MSG>
<MSG>Computing equivalence for function: s125...</MSG>
<MSG>Computing equivalence of the two TFGs (LLVM IR and x86 assembly)...</MSG>
<MSG>Chose product-TFG  from a frontier of size 1...</MSG>
<MSG>Created 6 possibilities in group A...</MSG>
<MSG>Chose product-TFG A6 from a frontier of size 6...</MSG>
<MSG>product-TFG A6 created 1 possibilities in group A6.B...</MSG>
<MSG>Chose product-TFG A6.B1 from a frontier of size 6...</MSG>
<MSG>product-TFG A6.B1 created 3 possibilities in group A6.B1.C...</MSG>
<MSG>Chose product-TFG A6.B1.C3 from a frontier of size 8...</MSG>
<MSG>product-TFG A6.B1.C3 created 7 possibilities in group A6.B1.C3.D...</MSG>
<MSG>Chose product-TFG A6.B1.C3.D6 from a frontier of size 14...</MSG>
WARNING : Solver timeout
WARNING : Solver timeout
WARNING : Solver timeout
<MSG>product-TFG A6.B1.C3.D6 created 1 possibilities in group A6.B1.C3.D6.E...</MSG>
<MSG>Chose product-TFG A6.B1.C3.D6.E1 from a frontier of size 14...</MSG>
WARNING : Solver timeout
<MSG>Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>Checking equivalence proof...</MSG>
WARNING : Solver timeout
WARNING : Solver timeout
<MSG>Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
<MSG>Checking equivalence proof with relocatable memlabels...</MSG>
<MSG>Forcing use of abstract memlabel assertions...</MSG>
WARNING : Solver timeout
